

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Wed Feb 07 00:22:01 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	strings,global,class=STRING,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	intentry,global,class=CODE,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2
    40                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    41                           	dabs	1,0x7E,2
    42     0000                     
    43                           ; Generated 22/03/2023 GMT
    44                           ; 
    45                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    46                           ; All rights reserved.
    47                           ; 
    48                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    49                           ; 
    50                           ; Redistribution and use in source and binary forms, with or without modification, are
    51                           ; permitted provided that the following conditions are met:
    52                           ; 
    53                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    54                           ;        conditions and the following disclaimer.
    55                           ; 
    56                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    57                           ;        of conditions and the following disclaimer in the documentation and/or other
    58                           ;        materials provided with the distribution. Publication is not required when
    59                           ;        this file is used in an embedded application.
    60                           ; 
    61                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    62                           ;        software without specific prior written permission.
    63                           ; 
    64                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    65                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    66                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    67                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    68                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    69                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    70                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    71                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    72                           ; 
    73                           ; 
    74                           ; Code-generator required, PIC16F887 Definitions
    75                           ; 
    76                           ; SFR Addresses
    77     0000                     	;# 
    78     0001                     	;# 
    79     0002                     	;# 
    80     0003                     	;# 
    81     0004                     	;# 
    82     0005                     	;# 
    83     0006                     	;# 
    84     0007                     	;# 
    85     0008                     	;# 
    86     0009                     	;# 
    87     000A                     	;# 
    88     000B                     	;# 
    89     000C                     	;# 
    90     000D                     	;# 
    91     000E                     	;# 
    92     000E                     	;# 
    93     000F                     	;# 
    94     0010                     	;# 
    95     0011                     	;# 
    96     0012                     	;# 
    97     0013                     	;# 
    98     0014                     	;# 
    99     0015                     	;# 
   100     0015                     	;# 
   101     0016                     	;# 
   102     0017                     	;# 
   103     0018                     	;# 
   104     0019                     	;# 
   105     001A                     	;# 
   106     001B                     	;# 
   107     001B                     	;# 
   108     001C                     	;# 
   109     001D                     	;# 
   110     001E                     	;# 
   111     001F                     	;# 
   112     0081                     	;# 
   113     0085                     	;# 
   114     0086                     	;# 
   115     0087                     	;# 
   116     0088                     	;# 
   117     0089                     	;# 
   118     008C                     	;# 
   119     008D                     	;# 
   120     008E                     	;# 
   121     008F                     	;# 
   122     0090                     	;# 
   123     0091                     	;# 
   124     0092                     	;# 
   125     0093                     	;# 
   126     0093                     	;# 
   127     0093                     	;# 
   128     0094                     	;# 
   129     0095                     	;# 
   130     0096                     	;# 
   131     0097                     	;# 
   132     0098                     	;# 
   133     0099                     	;# 
   134     009A                     	;# 
   135     009B                     	;# 
   136     009C                     	;# 
   137     009D                     	;# 
   138     009E                     	;# 
   139     009F                     	;# 
   140     0105                     	;# 
   141     0107                     	;# 
   142     0108                     	;# 
   143     0109                     	;# 
   144     010C                     	;# 
   145     010C                     	;# 
   146     010D                     	;# 
   147     010E                     	;# 
   148     010F                     	;# 
   149     0185                     	;# 
   150     0187                     	;# 
   151     0188                     	;# 
   152     0189                     	;# 
   153     018C                     	;# 
   154     018D                     	;# 
   155     0000                     	;# 
   156     0001                     	;# 
   157     0002                     	;# 
   158     0003                     	;# 
   159     0004                     	;# 
   160     0005                     	;# 
   161     0006                     	;# 
   162     0007                     	;# 
   163     0008                     	;# 
   164     0009                     	;# 
   165     000A                     	;# 
   166     000B                     	;# 
   167     000C                     	;# 
   168     000D                     	;# 
   169     000E                     	;# 
   170     000E                     	;# 
   171     000F                     	;# 
   172     0010                     	;# 
   173     0011                     	;# 
   174     0012                     	;# 
   175     0013                     	;# 
   176     0014                     	;# 
   177     0015                     	;# 
   178     0015                     	;# 
   179     0016                     	;# 
   180     0017                     	;# 
   181     0018                     	;# 
   182     0019                     	;# 
   183     001A                     	;# 
   184     001B                     	;# 
   185     001B                     	;# 
   186     001C                     	;# 
   187     001D                     	;# 
   188     001E                     	;# 
   189     001F                     	;# 
   190     0081                     	;# 
   191     0085                     	;# 
   192     0086                     	;# 
   193     0087                     	;# 
   194     0088                     	;# 
   195     0089                     	;# 
   196     008C                     	;# 
   197     008D                     	;# 
   198     008E                     	;# 
   199     008F                     	;# 
   200     0090                     	;# 
   201     0091                     	;# 
   202     0092                     	;# 
   203     0093                     	;# 
   204     0093                     	;# 
   205     0093                     	;# 
   206     0094                     	;# 
   207     0095                     	;# 
   208     0096                     	;# 
   209     0097                     	;# 
   210     0098                     	;# 
   211     0099                     	;# 
   212     009A                     	;# 
   213     009B                     	;# 
   214     009C                     	;# 
   215     009D                     	;# 
   216     009E                     	;# 
   217     009F                     	;# 
   218     0105                     	;# 
   219     0107                     	;# 
   220     0108                     	;# 
   221     0109                     	;# 
   222     010C                     	;# 
   223     010C                     	;# 
   224     010D                     	;# 
   225     010E                     	;# 
   226     010F                     	;# 
   227     0185                     	;# 
   228     0187                     	;# 
   229     0188                     	;# 
   230     0189                     	;# 
   231     018C                     	;# 
   232     018D                     	;# 
   233     0000                     	;# 
   234     0001                     	;# 
   235     0002                     	;# 
   236     0003                     	;# 
   237     0004                     	;# 
   238     0005                     	;# 
   239     0006                     	;# 
   240     0007                     	;# 
   241     0008                     	;# 
   242     0009                     	;# 
   243     000A                     	;# 
   244     000B                     	;# 
   245     000C                     	;# 
   246     000D                     	;# 
   247     000E                     	;# 
   248     000E                     	;# 
   249     000F                     	;# 
   250     0010                     	;# 
   251     0011                     	;# 
   252     0012                     	;# 
   253     0013                     	;# 
   254     0014                     	;# 
   255     0015                     	;# 
   256     0015                     	;# 
   257     0016                     	;# 
   258     0017                     	;# 
   259     0018                     	;# 
   260     0019                     	;# 
   261     001A                     	;# 
   262     001B                     	;# 
   263     001B                     	;# 
   264     001C                     	;# 
   265     001D                     	;# 
   266     001E                     	;# 
   267     001F                     	;# 
   268     0081                     	;# 
   269     0085                     	;# 
   270     0086                     	;# 
   271     0087                     	;# 
   272     0088                     	;# 
   273     0089                     	;# 
   274     008C                     	;# 
   275     008D                     	;# 
   276     008E                     	;# 
   277     008F                     	;# 
   278     0090                     	;# 
   279     0091                     	;# 
   280     0092                     	;# 
   281     0093                     	;# 
   282     0093                     	;# 
   283     0093                     	;# 
   284     0094                     	;# 
   285     0095                     	;# 
   286     0096                     	;# 
   287     0097                     	;# 
   288     0098                     	;# 
   289     0099                     	;# 
   290     009A                     	;# 
   291     009B                     	;# 
   292     009C                     	;# 
   293     009D                     	;# 
   294     009E                     	;# 
   295     009F                     	;# 
   296     0105                     	;# 
   297     0107                     	;# 
   298     0108                     	;# 
   299     0109                     	;# 
   300     010C                     	;# 
   301     010C                     	;# 
   302     010D                     	;# 
   303     010E                     	;# 
   304     010F                     	;# 
   305     0185                     	;# 
   306     0187                     	;# 
   307     0188                     	;# 
   308     0189                     	;# 
   309     018C                     	;# 
   310     018D                     	;# 
   311     0000                     	;# 
   312     0001                     	;# 
   313     0002                     	;# 
   314     0003                     	;# 
   315     0004                     	;# 
   316     0005                     	;# 
   317     0006                     	;# 
   318     0007                     	;# 
   319     0008                     	;# 
   320     0009                     	;# 
   321     000A                     	;# 
   322     000B                     	;# 
   323     000C                     	;# 
   324     000D                     	;# 
   325     000E                     	;# 
   326     000E                     	;# 
   327     000F                     	;# 
   328     0010                     	;# 
   329     0011                     	;# 
   330     0012                     	;# 
   331     0013                     	;# 
   332     0014                     	;# 
   333     0015                     	;# 
   334     0015                     	;# 
   335     0016                     	;# 
   336     0017                     	;# 
   337     0018                     	;# 
   338     0019                     	;# 
   339     001A                     	;# 
   340     001B                     	;# 
   341     001B                     	;# 
   342     001C                     	;# 
   343     001D                     	;# 
   344     001E                     	;# 
   345     001F                     	;# 
   346     0081                     	;# 
   347     0085                     	;# 
   348     0086                     	;# 
   349     0087                     	;# 
   350     0088                     	;# 
   351     0089                     	;# 
   352     008C                     	;# 
   353     008D                     	;# 
   354     008E                     	;# 
   355     008F                     	;# 
   356     0090                     	;# 
   357     0091                     	;# 
   358     0092                     	;# 
   359     0093                     	;# 
   360     0093                     	;# 
   361     0093                     	;# 
   362     0094                     	;# 
   363     0095                     	;# 
   364     0096                     	;# 
   365     0097                     	;# 
   366     0098                     	;# 
   367     0099                     	;# 
   368     009A                     	;# 
   369     009B                     	;# 
   370     009C                     	;# 
   371     009D                     	;# 
   372     009E                     	;# 
   373     009F                     	;# 
   374     0105                     	;# 
   375     0107                     	;# 
   376     0108                     	;# 
   377     0109                     	;# 
   378     010C                     	;# 
   379     010C                     	;# 
   380     010D                     	;# 
   381     010E                     	;# 
   382     010F                     	;# 
   383     0185                     	;# 
   384     0187                     	;# 
   385     0188                     	;# 
   386     0189                     	;# 
   387     018C                     	;# 
   388     018D                     	;# 
   389     0000                     	;# 
   390     0001                     	;# 
   391     0002                     	;# 
   392     0003                     	;# 
   393     0004                     	;# 
   394     0005                     	;# 
   395     0006                     	;# 
   396     0007                     	;# 
   397     0008                     	;# 
   398     0009                     	;# 
   399     000A                     	;# 
   400     000B                     	;# 
   401     000C                     	;# 
   402     000D                     	;# 
   403     000E                     	;# 
   404     000E                     	;# 
   405     000F                     	;# 
   406     0010                     	;# 
   407     0011                     	;# 
   408     0012                     	;# 
   409     0013                     	;# 
   410     0014                     	;# 
   411     0015                     	;# 
   412     0015                     	;# 
   413     0016                     	;# 
   414     0017                     	;# 
   415     0018                     	;# 
   416     0019                     	;# 
   417     001A                     	;# 
   418     001B                     	;# 
   419     001B                     	;# 
   420     001C                     	;# 
   421     001D                     	;# 
   422     001E                     	;# 
   423     001F                     	;# 
   424     0081                     	;# 
   425     0085                     	;# 
   426     0086                     	;# 
   427     0087                     	;# 
   428     0088                     	;# 
   429     0089                     	;# 
   430     008C                     	;# 
   431     008D                     	;# 
   432     008E                     	;# 
   433     008F                     	;# 
   434     0090                     	;# 
   435     0091                     	;# 
   436     0092                     	;# 
   437     0093                     	;# 
   438     0093                     	;# 
   439     0093                     	;# 
   440     0094                     	;# 
   441     0095                     	;# 
   442     0096                     	;# 
   443     0097                     	;# 
   444     0098                     	;# 
   445     0099                     	;# 
   446     009A                     	;# 
   447     009B                     	;# 
   448     009C                     	;# 
   449     009D                     	;# 
   450     009E                     	;# 
   451     009F                     	;# 
   452     0105                     	;# 
   453     0107                     	;# 
   454     0108                     	;# 
   455     0109                     	;# 
   456     010C                     	;# 
   457     010C                     	;# 
   458     010D                     	;# 
   459     010E                     	;# 
   460     010F                     	;# 
   461     0185                     	;# 
   462     0187                     	;# 
   463     0188                     	;# 
   464     0189                     	;# 
   465     018C                     	;# 
   466     018D                     	;# 
   467     0000                     	;# 
   468     0001                     	;# 
   469     0002                     	;# 
   470     0003                     	;# 
   471     0004                     	;# 
   472     0005                     	;# 
   473     0006                     	;# 
   474     0007                     	;# 
   475     0008                     	;# 
   476     0009                     	;# 
   477     000A                     	;# 
   478     000B                     	;# 
   479     000C                     	;# 
   480     000D                     	;# 
   481     000E                     	;# 
   482     000E                     	;# 
   483     000F                     	;# 
   484     0010                     	;# 
   485     0011                     	;# 
   486     0012                     	;# 
   487     0013                     	;# 
   488     0014                     	;# 
   489     0015                     	;# 
   490     0015                     	;# 
   491     0016                     	;# 
   492     0017                     	;# 
   493     0018                     	;# 
   494     0019                     	;# 
   495     001A                     	;# 
   496     001B                     	;# 
   497     001B                     	;# 
   498     001C                     	;# 
   499     001D                     	;# 
   500     001E                     	;# 
   501     001F                     	;# 
   502     0081                     	;# 
   503     0085                     	;# 
   504     0086                     	;# 
   505     0087                     	;# 
   506     0088                     	;# 
   507     0089                     	;# 
   508     008C                     	;# 
   509     008D                     	;# 
   510     008E                     	;# 
   511     008F                     	;# 
   512     0090                     	;# 
   513     0091                     	;# 
   514     0092                     	;# 
   515     0093                     	;# 
   516     0093                     	;# 
   517     0093                     	;# 
   518     0094                     	;# 
   519     0095                     	;# 
   520     0096                     	;# 
   521     0097                     	;# 
   522     0098                     	;# 
   523     0099                     	;# 
   524     009A                     	;# 
   525     009B                     	;# 
   526     009C                     	;# 
   527     009D                     	;# 
   528     009E                     	;# 
   529     009F                     	;# 
   530     0105                     	;# 
   531     0107                     	;# 
   532     0108                     	;# 
   533     0109                     	;# 
   534     010C                     	;# 
   535     010C                     	;# 
   536     010D                     	;# 
   537     010E                     	;# 
   538     010F                     	;# 
   539     0185                     	;# 
   540     0187                     	;# 
   541     0188                     	;# 
   542     0189                     	;# 
   543     018C                     	;# 
   544     018D                     	;# 
   545     0000                     	;# 
   546     0001                     	;# 
   547     0002                     	;# 
   548     0003                     	;# 
   549     0004                     	;# 
   550     0005                     	;# 
   551     0006                     	;# 
   552     0007                     	;# 
   553     0008                     	;# 
   554     0009                     	;# 
   555     000A                     	;# 
   556     000B                     	;# 
   557     000C                     	;# 
   558     000D                     	;# 
   559     000E                     	;# 
   560     000E                     	;# 
   561     000F                     	;# 
   562     0010                     	;# 
   563     0011                     	;# 
   564     0012                     	;# 
   565     0013                     	;# 
   566     0014                     	;# 
   567     0015                     	;# 
   568     0015                     	;# 
   569     0016                     	;# 
   570     0017                     	;# 
   571     0018                     	;# 
   572     0019                     	;# 
   573     001A                     	;# 
   574     001B                     	;# 
   575     001B                     	;# 
   576     001C                     	;# 
   577     001D                     	;# 
   578     001E                     	;# 
   579     001F                     	;# 
   580     0081                     	;# 
   581     0085                     	;# 
   582     0086                     	;# 
   583     0087                     	;# 
   584     0088                     	;# 
   585     0089                     	;# 
   586     008C                     	;# 
   587     008D                     	;# 
   588     008E                     	;# 
   589     008F                     	;# 
   590     0090                     	;# 
   591     0091                     	;# 
   592     0092                     	;# 
   593     0093                     	;# 
   594     0093                     	;# 
   595     0093                     	;# 
   596     0094                     	;# 
   597     0095                     	;# 
   598     0096                     	;# 
   599     0097                     	;# 
   600     0098                     	;# 
   601     0099                     	;# 
   602     009A                     	;# 
   603     009B                     	;# 
   604     009C                     	;# 
   605     009D                     	;# 
   606     009E                     	;# 
   607     009F                     	;# 
   608     0105                     	;# 
   609     0107                     	;# 
   610     0108                     	;# 
   611     0109                     	;# 
   612     010C                     	;# 
   613     010C                     	;# 
   614     010D                     	;# 
   615     010E                     	;# 
   616     010F                     	;# 
   617     0185                     	;# 
   618     0187                     	;# 
   619     0188                     	;# 
   620     0189                     	;# 
   621     018C                     	;# 
   622     018D                     	;# 
   623     0000                     	;# 
   624     0001                     	;# 
   625     0002                     	;# 
   626     0003                     	;# 
   627     0004                     	;# 
   628     0005                     	;# 
   629     0006                     	;# 
   630     0007                     	;# 
   631     0008                     	;# 
   632     0009                     	;# 
   633     000A                     	;# 
   634     000B                     	;# 
   635     000C                     	;# 
   636     000D                     	;# 
   637     000E                     	;# 
   638     000E                     	;# 
   639     000F                     	;# 
   640     0010                     	;# 
   641     0011                     	;# 
   642     0012                     	;# 
   643     0013                     	;# 
   644     0014                     	;# 
   645     0015                     	;# 
   646     0015                     	;# 
   647     0016                     	;# 
   648     0017                     	;# 
   649     0018                     	;# 
   650     0019                     	;# 
   651     001A                     	;# 
   652     001B                     	;# 
   653     001B                     	;# 
   654     001C                     	;# 
   655     001D                     	;# 
   656     001E                     	;# 
   657     001F                     	;# 
   658     0081                     	;# 
   659     0085                     	;# 
   660     0086                     	;# 
   661     0087                     	;# 
   662     0088                     	;# 
   663     0089                     	;# 
   664     008C                     	;# 
   665     008D                     	;# 
   666     008E                     	;# 
   667     008F                     	;# 
   668     0090                     	;# 
   669     0091                     	;# 
   670     0092                     	;# 
   671     0093                     	;# 
   672     0093                     	;# 
   673     0093                     	;# 
   674     0094                     	;# 
   675     0095                     	;# 
   676     0096                     	;# 
   677     0097                     	;# 
   678     0098                     	;# 
   679     0099                     	;# 
   680     009A                     	;# 
   681     009B                     	;# 
   682     009C                     	;# 
   683     009D                     	;# 
   684     009E                     	;# 
   685     009F                     	;# 
   686     0105                     	;# 
   687     0107                     	;# 
   688     0108                     	;# 
   689     0109                     	;# 
   690     010C                     	;# 
   691     010C                     	;# 
   692     010D                     	;# 
   693     010E                     	;# 
   694     010F                     	;# 
   695     0185                     	;# 
   696     0187                     	;# 
   697     0188                     	;# 
   698     0189                     	;# 
   699     018C                     	;# 
   700     018D                     	;# 
   701     0000                     	;# 
   702     0001                     	;# 
   703     0002                     	;# 
   704     0003                     	;# 
   705     0004                     	;# 
   706     0005                     	;# 
   707     0006                     	;# 
   708     0007                     	;# 
   709     0008                     	;# 
   710     0009                     	;# 
   711     000A                     	;# 
   712     000B                     	;# 
   713     000C                     	;# 
   714     000D                     	;# 
   715     000E                     	;# 
   716     000E                     	;# 
   717     000F                     	;# 
   718     0010                     	;# 
   719     0011                     	;# 
   720     0012                     	;# 
   721     0013                     	;# 
   722     0014                     	;# 
   723     0015                     	;# 
   724     0015                     	;# 
   725     0016                     	;# 
   726     0017                     	;# 
   727     0018                     	;# 
   728     0019                     	;# 
   729     001A                     	;# 
   730     001B                     	;# 
   731     001B                     	;# 
   732     001C                     	;# 
   733     001D                     	;# 
   734     001E                     	;# 
   735     001F                     	;# 
   736     0081                     	;# 
   737     0085                     	;# 
   738     0086                     	;# 
   739     0087                     	;# 
   740     0088                     	;# 
   741     0089                     	;# 
   742     008C                     	;# 
   743     008D                     	;# 
   744     008E                     	;# 
   745     008F                     	;# 
   746     0090                     	;# 
   747     0091                     	;# 
   748     0092                     	;# 
   749     0093                     	;# 
   750     0093                     	;# 
   751     0093                     	;# 
   752     0094                     	;# 
   753     0095                     	;# 
   754     0096                     	;# 
   755     0097                     	;# 
   756     0098                     	;# 
   757     0099                     	;# 
   758     009A                     	;# 
   759     009B                     	;# 
   760     009C                     	;# 
   761     009D                     	;# 
   762     009E                     	;# 
   763     009F                     	;# 
   764     0105                     	;# 
   765     0107                     	;# 
   766     0108                     	;# 
   767     0109                     	;# 
   768     010C                     	;# 
   769     010C                     	;# 
   770     010D                     	;# 
   771     010E                     	;# 
   772     010F                     	;# 
   773     0185                     	;# 
   774     0187                     	;# 
   775     0188                     	;# 
   776     0189                     	;# 
   777     018C                     	;# 
   778     018D                     	;# 
   779     0000                     	;# 
   780     0001                     	;# 
   781     0002                     	;# 
   782     0003                     	;# 
   783     0004                     	;# 
   784     0005                     	;# 
   785     0006                     	;# 
   786     0007                     	;# 
   787     0008                     	;# 
   788     0009                     	;# 
   789     000A                     	;# 
   790     000B                     	;# 
   791     000C                     	;# 
   792     000D                     	;# 
   793     000E                     	;# 
   794     000E                     	;# 
   795     000F                     	;# 
   796     0010                     	;# 
   797     0011                     	;# 
   798     0012                     	;# 
   799     0013                     	;# 
   800     0014                     	;# 
   801     0015                     	;# 
   802     0015                     	;# 
   803     0016                     	;# 
   804     0017                     	;# 
   805     0018                     	;# 
   806     0019                     	;# 
   807     001A                     	;# 
   808     001B                     	;# 
   809     001B                     	;# 
   810     001C                     	;# 
   811     001D                     	;# 
   812     001E                     	;# 
   813     001F                     	;# 
   814     0081                     	;# 
   815     0085                     	;# 
   816     0086                     	;# 
   817     0087                     	;# 
   818     0088                     	;# 
   819     0089                     	;# 
   820     008C                     	;# 
   821     008D                     	;# 
   822     008E                     	;# 
   823     008F                     	;# 
   824     0090                     	;# 
   825     0091                     	;# 
   826     0092                     	;# 
   827     0093                     	;# 
   828     0093                     	;# 
   829     0093                     	;# 
   830     0094                     	;# 
   831     0095                     	;# 
   832     0096                     	;# 
   833     0097                     	;# 
   834     0098                     	;# 
   835     0099                     	;# 
   836     009A                     	;# 
   837     009B                     	;# 
   838     009C                     	;# 
   839     009D                     	;# 
   840     009E                     	;# 
   841     009F                     	;# 
   842     0105                     	;# 
   843     0107                     	;# 
   844     0108                     	;# 
   845     0109                     	;# 
   846     010C                     	;# 
   847     010C                     	;# 
   848     010D                     	;# 
   849     010E                     	;# 
   850     010F                     	;# 
   851     0185                     	;# 
   852     0187                     	;# 
   853     0188                     	;# 
   854     0189                     	;# 
   855     018C                     	;# 
   856     018D                     	;# 
   857     0000                     	;# 
   858     0001                     	;# 
   859     0002                     	;# 
   860     0003                     	;# 
   861     0004                     	;# 
   862     0005                     	;# 
   863     0006                     	;# 
   864     0007                     	;# 
   865     0008                     	;# 
   866     0009                     	;# 
   867     000A                     	;# 
   868     000B                     	;# 
   869     000C                     	;# 
   870     000D                     	;# 
   871     000E                     	;# 
   872     000E                     	;# 
   873     000F                     	;# 
   874     0010                     	;# 
   875     0011                     	;# 
   876     0012                     	;# 
   877     0013                     	;# 
   878     0014                     	;# 
   879     0015                     	;# 
   880     0015                     	;# 
   881     0016                     	;# 
   882     0017                     	;# 
   883     0018                     	;# 
   884     0019                     	;# 
   885     001A                     	;# 
   886     001B                     	;# 
   887     001B                     	;# 
   888     001C                     	;# 
   889     001D                     	;# 
   890     001E                     	;# 
   891     001F                     	;# 
   892     0081                     	;# 
   893     0085                     	;# 
   894     0086                     	;# 
   895     0087                     	;# 
   896     0088                     	;# 
   897     0089                     	;# 
   898     008C                     	;# 
   899     008D                     	;# 
   900     008E                     	;# 
   901     008F                     	;# 
   902     0090                     	;# 
   903     0091                     	;# 
   904     0092                     	;# 
   905     0093                     	;# 
   906     0093                     	;# 
   907     0093                     	;# 
   908     0094                     	;# 
   909     0095                     	;# 
   910     0096                     	;# 
   911     0097                     	;# 
   912     0098                     	;# 
   913     0099                     	;# 
   914     009A                     	;# 
   915     009B                     	;# 
   916     009C                     	;# 
   917     009D                     	;# 
   918     009E                     	;# 
   919     009F                     	;# 
   920     0105                     	;# 
   921     0107                     	;# 
   922     0108                     	;# 
   923     0109                     	;# 
   924     010C                     	;# 
   925     010C                     	;# 
   926     010D                     	;# 
   927     010E                     	;# 
   928     010F                     	;# 
   929     0185                     	;# 
   930     0187                     	;# 
   931     0188                     	;# 
   932     0189                     	;# 
   933     018C                     	;# 
   934     018D                     	;# 
   935     0000                     	;# 
   936     0001                     	;# 
   937     0002                     	;# 
   938     0003                     	;# 
   939     0004                     	;# 
   940     0005                     	;# 
   941     0006                     	;# 
   942     0007                     	;# 
   943     0008                     	;# 
   944     0009                     	;# 
   945     000A                     	;# 
   946     000B                     	;# 
   947     000C                     	;# 
   948     000D                     	;# 
   949     000E                     	;# 
   950     000E                     	;# 
   951     000F                     	;# 
   952     0010                     	;# 
   953     0011                     	;# 
   954     0012                     	;# 
   955     0013                     	;# 
   956     0014                     	;# 
   957     0015                     	;# 
   958     0015                     	;# 
   959     0016                     	;# 
   960     0017                     	;# 
   961     0018                     	;# 
   962     0019                     	;# 
   963     001A                     	;# 
   964     001B                     	;# 
   965     001B                     	;# 
   966     001C                     	;# 
   967     001D                     	;# 
   968     001E                     	;# 
   969     001F                     	;# 
   970     0081                     	;# 
   971     0085                     	;# 
   972     0086                     	;# 
   973     0087                     	;# 
   974     0088                     	;# 
   975     0089                     	;# 
   976     008C                     	;# 
   977     008D                     	;# 
   978     008E                     	;# 
   979     008F                     	;# 
   980     0090                     	;# 
   981     0091                     	;# 
   982     0092                     	;# 
   983     0093                     	;# 
   984     0093                     	;# 
   985     0093                     	;# 
   986     0094                     	;# 
   987     0095                     	;# 
   988     0096                     	;# 
   989     0097                     	;# 
   990     0098                     	;# 
   991     0099                     	;# 
   992     009A                     	;# 
   993     009B                     	;# 
   994     009C                     	;# 
   995     009D                     	;# 
   996     009E                     	;# 
   997     009F                     	;# 
   998     0105                     	;# 
   999     0107                     	;# 
  1000     0108                     	;# 
  1001     0109                     	;# 
  1002     010C                     	;# 
  1003     010C                     	;# 
  1004     010D                     	;# 
  1005     010E                     	;# 
  1006     010F                     	;# 
  1007     0185                     	;# 
  1008     0187                     	;# 
  1009     0188                     	;# 
  1010     0189                     	;# 
  1011     018C                     	;# 
  1012     018D                     	;# 
  1013     0000                     	;# 
  1014     0001                     	;# 
  1015     0002                     	;# 
  1016     0003                     	;# 
  1017     0004                     	;# 
  1018     0005                     	;# 
  1019     0006                     	;# 
  1020     0007                     	;# 
  1021     0008                     	;# 
  1022     0009                     	;# 
  1023     000A                     	;# 
  1024     000B                     	;# 
  1025     000C                     	;# 
  1026     000D                     	;# 
  1027     000E                     	;# 
  1028     000E                     	;# 
  1029     000F                     	;# 
  1030     0010                     	;# 
  1031     0011                     	;# 
  1032     0012                     	;# 
  1033     0013                     	;# 
  1034     0014                     	;# 
  1035     0015                     	;# 
  1036     0015                     	;# 
  1037     0016                     	;# 
  1038     0017                     	;# 
  1039     0018                     	;# 
  1040     0019                     	;# 
  1041     001A                     	;# 
  1042     001B                     	;# 
  1043     001B                     	;# 
  1044     001C                     	;# 
  1045     001D                     	;# 
  1046     001E                     	;# 
  1047     001F                     	;# 
  1048     0081                     	;# 
  1049     0085                     	;# 
  1050     0086                     	;# 
  1051     0087                     	;# 
  1052     0088                     	;# 
  1053     0089                     	;# 
  1054     008C                     	;# 
  1055     008D                     	;# 
  1056     008E                     	;# 
  1057     008F                     	;# 
  1058     0090                     	;# 
  1059     0091                     	;# 
  1060     0092                     	;# 
  1061     0093                     	;# 
  1062     0093                     	;# 
  1063     0093                     	;# 
  1064     0094                     	;# 
  1065     0095                     	;# 
  1066     0096                     	;# 
  1067     0097                     	;# 
  1068     0098                     	;# 
  1069     0099                     	;# 
  1070     009A                     	;# 
  1071     009B                     	;# 
  1072     009C                     	;# 
  1073     009D                     	;# 
  1074     009E                     	;# 
  1075     009F                     	;# 
  1076     0105                     	;# 
  1077     0107                     	;# 
  1078     0108                     	;# 
  1079     0109                     	;# 
  1080     010C                     	;# 
  1081     010C                     	;# 
  1082     010D                     	;# 
  1083     010E                     	;# 
  1084     010F                     	;# 
  1085     0185                     	;# 
  1086     0187                     	;# 
  1087     0188                     	;# 
  1088     0189                     	;# 
  1089     018C                     	;# 
  1090     018D                     	;# 
  1091     0000                     	;# 
  1092     0001                     	;# 
  1093     0002                     	;# 
  1094     0003                     	;# 
  1095     0004                     	;# 
  1096     0005                     	;# 
  1097     0006                     	;# 
  1098     0007                     	;# 
  1099     0008                     	;# 
  1100     0009                     	;# 
  1101     000A                     	;# 
  1102     000B                     	;# 
  1103     000C                     	;# 
  1104     000D                     	;# 
  1105     000E                     	;# 
  1106     000E                     	;# 
  1107     000F                     	;# 
  1108     0010                     	;# 
  1109     0011                     	;# 
  1110     0012                     	;# 
  1111     0013                     	;# 
  1112     0014                     	;# 
  1113     0015                     	;# 
  1114     0015                     	;# 
  1115     0016                     	;# 
  1116     0017                     	;# 
  1117     0018                     	;# 
  1118     0019                     	;# 
  1119     001A                     	;# 
  1120     001B                     	;# 
  1121     001B                     	;# 
  1122     001C                     	;# 
  1123     001D                     	;# 
  1124     001E                     	;# 
  1125     001F                     	;# 
  1126     0081                     	;# 
  1127     0085                     	;# 
  1128     0086                     	;# 
  1129     0087                     	;# 
  1130     0088                     	;# 
  1131     0089                     	;# 
  1132     008C                     	;# 
  1133     008D                     	;# 
  1134     008E                     	;# 
  1135     008F                     	;# 
  1136     0090                     	;# 
  1137     0091                     	;# 
  1138     0092                     	;# 
  1139     0093                     	;# 
  1140     0093                     	;# 
  1141     0093                     	;# 
  1142     0094                     	;# 
  1143     0095                     	;# 
  1144     0096                     	;# 
  1145     0097                     	;# 
  1146     0098                     	;# 
  1147     0099                     	;# 
  1148     009A                     	;# 
  1149     009B                     	;# 
  1150     009C                     	;# 
  1151     009D                     	;# 
  1152     009E                     	;# 
  1153     009F                     	;# 
  1154     0105                     	;# 
  1155     0107                     	;# 
  1156     0108                     	;# 
  1157     0109                     	;# 
  1158     010C                     	;# 
  1159     010C                     	;# 
  1160     010D                     	;# 
  1161     010E                     	;# 
  1162     010F                     	;# 
  1163     0185                     	;# 
  1164     0187                     	;# 
  1165     0188                     	;# 
  1166     0189                     	;# 
  1167     018C                     	;# 
  1168     018D                     	;# 
  1169     0000                     	;# 
  1170     0001                     	;# 
  1171     0002                     	;# 
  1172     0003                     	;# 
  1173     0004                     	;# 
  1174     0005                     	;# 
  1175     0006                     	;# 
  1176     0007                     	;# 
  1177     0008                     	;# 
  1178     0009                     	;# 
  1179     000A                     	;# 
  1180     000B                     	;# 
  1181     000C                     	;# 
  1182     000D                     	;# 
  1183     000E                     	;# 
  1184     000E                     	;# 
  1185     000F                     	;# 
  1186     0010                     	;# 
  1187     0011                     	;# 
  1188     0012                     	;# 
  1189     0013                     	;# 
  1190     0014                     	;# 
  1191     0015                     	;# 
  1192     0015                     	;# 
  1193     0016                     	;# 
  1194     0017                     	;# 
  1195     0018                     	;# 
  1196     0019                     	;# 
  1197     001A                     	;# 
  1198     001B                     	;# 
  1199     001B                     	;# 
  1200     001C                     	;# 
  1201     001D                     	;# 
  1202     001E                     	;# 
  1203     001F                     	;# 
  1204     0081                     	;# 
  1205     0085                     	;# 
  1206     0086                     	;# 
  1207     0087                     	;# 
  1208     0088                     	;# 
  1209     0089                     	;# 
  1210     008C                     	;# 
  1211     008D                     	;# 
  1212     008E                     	;# 
  1213     008F                     	;# 
  1214     0090                     	;# 
  1215     0091                     	;# 
  1216     0092                     	;# 
  1217     0093                     	;# 
  1218     0093                     	;# 
  1219     0093                     	;# 
  1220     0094                     	;# 
  1221     0095                     	;# 
  1222     0096                     	;# 
  1223     0097                     	;# 
  1224     0098                     	;# 
  1225     0099                     	;# 
  1226     009A                     	;# 
  1227     009B                     	;# 
  1228     009C                     	;# 
  1229     009D                     	;# 
  1230     009E                     	;# 
  1231     009F                     	;# 
  1232     0105                     	;# 
  1233     0107                     	;# 
  1234     0108                     	;# 
  1235     0109                     	;# 
  1236     010C                     	;# 
  1237     010C                     	;# 
  1238     010D                     	;# 
  1239     010E                     	;# 
  1240     010F                     	;# 
  1241     0185                     	;# 
  1242     0187                     	;# 
  1243     0188                     	;# 
  1244     0189                     	;# 
  1245     018C                     	;# 
  1246     018D                     	;# 
  1247     0000                     	;# 
  1248     0001                     	;# 
  1249     0002                     	;# 
  1250     0003                     	;# 
  1251     0004                     	;# 
  1252     0005                     	;# 
  1253     0006                     	;# 
  1254     0007                     	;# 
  1255     0008                     	;# 
  1256     0009                     	;# 
  1257     000A                     	;# 
  1258     000B                     	;# 
  1259     000C                     	;# 
  1260     000D                     	;# 
  1261     000E                     	;# 
  1262     000E                     	;# 
  1263     000F                     	;# 
  1264     0010                     	;# 
  1265     0011                     	;# 
  1266     0012                     	;# 
  1267     0013                     	;# 
  1268     0014                     	;# 
  1269     0015                     	;# 
  1270     0015                     	;# 
  1271     0016                     	;# 
  1272     0017                     	;# 
  1273     0018                     	;# 
  1274     0019                     	;# 
  1275     001A                     	;# 
  1276     001B                     	;# 
  1277     001B                     	;# 
  1278     001C                     	;# 
  1279     001D                     	;# 
  1280     001E                     	;# 
  1281     001F                     	;# 
  1282     0081                     	;# 
  1283     0085                     	;# 
  1284     0086                     	;# 
  1285     0087                     	;# 
  1286     0088                     	;# 
  1287     0089                     	;# 
  1288     008C                     	;# 
  1289     008D                     	;# 
  1290     008E                     	;# 
  1291     008F                     	;# 
  1292     0090                     	;# 
  1293     0091                     	;# 
  1294     0092                     	;# 
  1295     0093                     	;# 
  1296     0093                     	;# 
  1297     0093                     	;# 
  1298     0094                     	;# 
  1299     0095                     	;# 
  1300     0096                     	;# 
  1301     0097                     	;# 
  1302     0098                     	;# 
  1303     0099                     	;# 
  1304     009A                     	;# 
  1305     009B                     	;# 
  1306     009C                     	;# 
  1307     009D                     	;# 
  1308     009E                     	;# 
  1309     009F                     	;# 
  1310     0105                     	;# 
  1311     0107                     	;# 
  1312     0108                     	;# 
  1313     0109                     	;# 
  1314     010C                     	;# 
  1315     010C                     	;# 
  1316     010D                     	;# 
  1317     010E                     	;# 
  1318     010F                     	;# 
  1319     0185                     	;# 
  1320     0187                     	;# 
  1321     0188                     	;# 
  1322     0189                     	;# 
  1323     018C                     	;# 
  1324     018D                     	;# 
  1325     0000                     	;# 
  1326     0001                     	;# 
  1327     0002                     	;# 
  1328     0003                     	;# 
  1329     0004                     	;# 
  1330     0005                     	;# 
  1331     0006                     	;# 
  1332     0007                     	;# 
  1333     0008                     	;# 
  1334     0009                     	;# 
  1335     000A                     	;# 
  1336     000B                     	;# 
  1337     000C                     	;# 
  1338     000D                     	;# 
  1339     000E                     	;# 
  1340     000E                     	;# 
  1341     000F                     	;# 
  1342     0010                     	;# 
  1343     0011                     	;# 
  1344     0012                     	;# 
  1345     0013                     	;# 
  1346     0014                     	;# 
  1347     0015                     	;# 
  1348     0015                     	;# 
  1349     0016                     	;# 
  1350     0017                     	;# 
  1351     0018                     	;# 
  1352     0019                     	;# 
  1353     001A                     	;# 
  1354     001B                     	;# 
  1355     001B                     	;# 
  1356     001C                     	;# 
  1357     001D                     	;# 
  1358     001E                     	;# 
  1359     001F                     	;# 
  1360     0081                     	;# 
  1361     0085                     	;# 
  1362     0086                     	;# 
  1363     0087                     	;# 
  1364     0088                     	;# 
  1365     0089                     	;# 
  1366     008C                     	;# 
  1367     008D                     	;# 
  1368     008E                     	;# 
  1369     008F                     	;# 
  1370     0090                     	;# 
  1371     0091                     	;# 
  1372     0092                     	;# 
  1373     0093                     	;# 
  1374     0093                     	;# 
  1375     0093                     	;# 
  1376     0094                     	;# 
  1377     0095                     	;# 
  1378     0096                     	;# 
  1379     0097                     	;# 
  1380     0098                     	;# 
  1381     0099                     	;# 
  1382     009A                     	;# 
  1383     009B                     	;# 
  1384     009C                     	;# 
  1385     009D                     	;# 
  1386     009E                     	;# 
  1387     009F                     	;# 
  1388     0105                     	;# 
  1389     0107                     	;# 
  1390     0108                     	;# 
  1391     0109                     	;# 
  1392     010C                     	;# 
  1393     010C                     	;# 
  1394     010D                     	;# 
  1395     010E                     	;# 
  1396     010F                     	;# 
  1397     0185                     	;# 
  1398     0187                     	;# 
  1399     0188                     	;# 
  1400     0189                     	;# 
  1401     018C                     	;# 
  1402     018D                     	;# 
  1403     0000                     	;# 
  1404     0001                     	;# 
  1405     0002                     	;# 
  1406     0003                     	;# 
  1407     0004                     	;# 
  1408     0005                     	;# 
  1409     0006                     	;# 
  1410     0007                     	;# 
  1411     0008                     	;# 
  1412     0009                     	;# 
  1413     000A                     	;# 
  1414     000B                     	;# 
  1415     000C                     	;# 
  1416     000D                     	;# 
  1417     000E                     	;# 
  1418     000E                     	;# 
  1419     000F                     	;# 
  1420     0010                     	;# 
  1421     0011                     	;# 
  1422     0012                     	;# 
  1423     0013                     	;# 
  1424     0014                     	;# 
  1425     0015                     	;# 
  1426     0015                     	;# 
  1427     0016                     	;# 
  1428     0017                     	;# 
  1429     0018                     	;# 
  1430     0019                     	;# 
  1431     001A                     	;# 
  1432     001B                     	;# 
  1433     001B                     	;# 
  1434     001C                     	;# 
  1435     001D                     	;# 
  1436     001E                     	;# 
  1437     001F                     	;# 
  1438     0081                     	;# 
  1439     0085                     	;# 
  1440     0086                     	;# 
  1441     0087                     	;# 
  1442     0088                     	;# 
  1443     0089                     	;# 
  1444     008C                     	;# 
  1445     008D                     	;# 
  1446     008E                     	;# 
  1447     008F                     	;# 
  1448     0090                     	;# 
  1449     0091                     	;# 
  1450     0092                     	;# 
  1451     0093                     	;# 
  1452     0093                     	;# 
  1453     0093                     	;# 
  1454     0094                     	;# 
  1455     0095                     	;# 
  1456     0096                     	;# 
  1457     0097                     	;# 
  1458     0098                     	;# 
  1459     0099                     	;# 
  1460     009A                     	;# 
  1461     009B                     	;# 
  1462     009C                     	;# 
  1463     009D                     	;# 
  1464     009E                     	;# 
  1465     009F                     	;# 
  1466     0105                     	;# 
  1467     0107                     	;# 
  1468     0108                     	;# 
  1469     0109                     	;# 
  1470     010C                     	;# 
  1471     010C                     	;# 
  1472     010D                     	;# 
  1473     010E                     	;# 
  1474     010F                     	;# 
  1475     0185                     	;# 
  1476     0187                     	;# 
  1477     0188                     	;# 
  1478     0189                     	;# 
  1479     018C                     	;# 
  1480     018D                     	;# 
  1481     0000                     	;# 
  1482     0001                     	;# 
  1483     0002                     	;# 
  1484     0003                     	;# 
  1485     0004                     	;# 
  1486     0005                     	;# 
  1487     0006                     	;# 
  1488     0007                     	;# 
  1489     0008                     	;# 
  1490     0009                     	;# 
  1491     000A                     	;# 
  1492     000B                     	;# 
  1493     000C                     	;# 
  1494     000D                     	;# 
  1495     000E                     	;# 
  1496     000E                     	;# 
  1497     000F                     	;# 
  1498     0010                     	;# 
  1499     0011                     	;# 
  1500     0012                     	;# 
  1501     0013                     	;# 
  1502     0014                     	;# 
  1503     0015                     	;# 
  1504     0015                     	;# 
  1505     0016                     	;# 
  1506     0017                     	;# 
  1507     0018                     	;# 
  1508     0019                     	;# 
  1509     001A                     	;# 
  1510     001B                     	;# 
  1511     001B                     	;# 
  1512     001C                     	;# 
  1513     001D                     	;# 
  1514     001E                     	;# 
  1515     001F                     	;# 
  1516     0081                     	;# 
  1517     0085                     	;# 
  1518     0086                     	;# 
  1519     0087                     	;# 
  1520     0088                     	;# 
  1521     0089                     	;# 
  1522     008C                     	;# 
  1523     008D                     	;# 
  1524     008E                     	;# 
  1525     008F                     	;# 
  1526     0090                     	;# 
  1527     0091                     	;# 
  1528     0092                     	;# 
  1529     0093                     	;# 
  1530     0093                     	;# 
  1531     0093                     	;# 
  1532     0094                     	;# 
  1533     0095                     	;# 
  1534     0096                     	;# 
  1535     0097                     	;# 
  1536     0098                     	;# 
  1537     0099                     	;# 
  1538     009A                     	;# 
  1539     009B                     	;# 
  1540     009C                     	;# 
  1541     009D                     	;# 
  1542     009E                     	;# 
  1543     009F                     	;# 
  1544     0105                     	;# 
  1545     0107                     	;# 
  1546     0108                     	;# 
  1547     0109                     	;# 
  1548     010C                     	;# 
  1549     010C                     	;# 
  1550     010D                     	;# 
  1551     010E                     	;# 
  1552     010F                     	;# 
  1553     0185                     	;# 
  1554     0187                     	;# 
  1555     0188                     	;# 
  1556     0189                     	;# 
  1557     018C                     	;# 
  1558     018D                     	;# 
  1559     0000                     	;# 
  1560     0001                     	;# 
  1561     0002                     	;# 
  1562     0003                     	;# 
  1563     0004                     	;# 
  1564     0005                     	;# 
  1565     0006                     	;# 
  1566     0007                     	;# 
  1567     0008                     	;# 
  1568     0009                     	;# 
  1569     000A                     	;# 
  1570     000B                     	;# 
  1571     000C                     	;# 
  1572     000D                     	;# 
  1573     000E                     	;# 
  1574     000E                     	;# 
  1575     000F                     	;# 
  1576     0010                     	;# 
  1577     0011                     	;# 
  1578     0012                     	;# 
  1579     0013                     	;# 
  1580     0014                     	;# 
  1581     0015                     	;# 
  1582     0015                     	;# 
  1583     0016                     	;# 
  1584     0017                     	;# 
  1585     0018                     	;# 
  1586     0019                     	;# 
  1587     001A                     	;# 
  1588     001B                     	;# 
  1589     001B                     	;# 
  1590     001C                     	;# 
  1591     001D                     	;# 
  1592     001E                     	;# 
  1593     001F                     	;# 
  1594     0081                     	;# 
  1595     0085                     	;# 
  1596     0086                     	;# 
  1597     0087                     	;# 
  1598     0088                     	;# 
  1599     0089                     	;# 
  1600     008C                     	;# 
  1601     008D                     	;# 
  1602     008E                     	;# 
  1603     008F                     	;# 
  1604     0090                     	;# 
  1605     0091                     	;# 
  1606     0092                     	;# 
  1607     0093                     	;# 
  1608     0093                     	;# 
  1609     0093                     	;# 
  1610     0094                     	;# 
  1611     0095                     	;# 
  1612     0096                     	;# 
  1613     0097                     	;# 
  1614     0098                     	;# 
  1615     0099                     	;# 
  1616     009A                     	;# 
  1617     009B                     	;# 
  1618     009C                     	;# 
  1619     009D                     	;# 
  1620     009E                     	;# 
  1621     009F                     	;# 
  1622     0105                     	;# 
  1623     0107                     	;# 
  1624     0108                     	;# 
  1625     0109                     	;# 
  1626     010C                     	;# 
  1627     010C                     	;# 
  1628     010D                     	;# 
  1629     010E                     	;# 
  1630     010F                     	;# 
  1631     0185                     	;# 
  1632     0187                     	;# 
  1633     0188                     	;# 
  1634     0189                     	;# 
  1635     018C                     	;# 
  1636     018D                     	;# 
  1637     0000                     	;# 
  1638     0001                     	;# 
  1639     0002                     	;# 
  1640     0003                     	;# 
  1641     0004                     	;# 
  1642     0005                     	;# 
  1643     0006                     	;# 
  1644     0007                     	;# 
  1645     0008                     	;# 
  1646     0009                     	;# 
  1647     000A                     	;# 
  1648     000B                     	;# 
  1649     000C                     	;# 
  1650     000D                     	;# 
  1651     000E                     	;# 
  1652     000E                     	;# 
  1653     000F                     	;# 
  1654     0010                     	;# 
  1655     0011                     	;# 
  1656     0012                     	;# 
  1657     0013                     	;# 
  1658     0014                     	;# 
  1659     0015                     	;# 
  1660     0015                     	;# 
  1661     0016                     	;# 
  1662     0017                     	;# 
  1663     0018                     	;# 
  1664     0019                     	;# 
  1665     001A                     	;# 
  1666     001B                     	;# 
  1667     001B                     	;# 
  1668     001C                     	;# 
  1669     001D                     	;# 
  1670     001E                     	;# 
  1671     001F                     	;# 
  1672     0081                     	;# 
  1673     0085                     	;# 
  1674     0086                     	;# 
  1675     0087                     	;# 
  1676     0088                     	;# 
  1677     0089                     	;# 
  1678     008C                     	;# 
  1679     008D                     	;# 
  1680     008E                     	;# 
  1681     008F                     	;# 
  1682     0090                     	;# 
  1683     0091                     	;# 
  1684     0092                     	;# 
  1685     0093                     	;# 
  1686     0093                     	;# 
  1687     0093                     	;# 
  1688     0094                     	;# 
  1689     0095                     	;# 
  1690     0096                     	;# 
  1691     0097                     	;# 
  1692     0098                     	;# 
  1693     0099                     	;# 
  1694     009A                     	;# 
  1695     009B                     	;# 
  1696     009C                     	;# 
  1697     009D                     	;# 
  1698     009E                     	;# 
  1699     009F                     	;# 
  1700     0105                     	;# 
  1701     0107                     	;# 
  1702     0108                     	;# 
  1703     0109                     	;# 
  1704     010C                     	;# 
  1705     010C                     	;# 
  1706     010D                     	;# 
  1707     010E                     	;# 
  1708     010F                     	;# 
  1709     0185                     	;# 
  1710     0187                     	;# 
  1711     0188                     	;# 
  1712     0189                     	;# 
  1713     018C                     	;# 
  1714     018D                     	;# 
  1715     0000                     	;# 
  1716     0001                     	;# 
  1717     0002                     	;# 
  1718     0003                     	;# 
  1719     0004                     	;# 
  1720     0005                     	;# 
  1721     0006                     	;# 
  1722     0007                     	;# 
  1723     0008                     	;# 
  1724     0009                     	;# 
  1725     000A                     	;# 
  1726     000B                     	;# 
  1727     000C                     	;# 
  1728     000D                     	;# 
  1729     000E                     	;# 
  1730     000E                     	;# 
  1731     000F                     	;# 
  1732     0010                     	;# 
  1733     0011                     	;# 
  1734     0012                     	;# 
  1735     0013                     	;# 
  1736     0014                     	;# 
  1737     0015                     	;# 
  1738     0015                     	;# 
  1739     0016                     	;# 
  1740     0017                     	;# 
  1741     0018                     	;# 
  1742     0019                     	;# 
  1743     001A                     	;# 
  1744     001B                     	;# 
  1745     001B                     	;# 
  1746     001C                     	;# 
  1747     001D                     	;# 
  1748     001E                     	;# 
  1749     001F                     	;# 
  1750     0081                     	;# 
  1751     0085                     	;# 
  1752     0086                     	;# 
  1753     0087                     	;# 
  1754     0088                     	;# 
  1755     0089                     	;# 
  1756     008C                     	;# 
  1757     008D                     	;# 
  1758     008E                     	;# 
  1759     008F                     	;# 
  1760     0090                     	;# 
  1761     0091                     	;# 
  1762     0092                     	;# 
  1763     0093                     	;# 
  1764     0093                     	;# 
  1765     0093                     	;# 
  1766     0094                     	;# 
  1767     0095                     	;# 
  1768     0096                     	;# 
  1769     0097                     	;# 
  1770     0098                     	;# 
  1771     0099                     	;# 
  1772     009A                     	;# 
  1773     009B                     	;# 
  1774     009C                     	;# 
  1775     009D                     	;# 
  1776     009E                     	;# 
  1777     009F                     	;# 
  1778     0105                     	;# 
  1779     0107                     	;# 
  1780     0108                     	;# 
  1781     0109                     	;# 
  1782     010C                     	;# 
  1783     010C                     	;# 
  1784     010D                     	;# 
  1785     010E                     	;# 
  1786     010F                     	;# 
  1787     0185                     	;# 
  1788     0187                     	;# 
  1789     0188                     	;# 
  1790     0189                     	;# 
  1791     018C                     	;# 
  1792     018D                     	;# 
  1793     0000                     	;# 
  1794     0001                     	;# 
  1795     0002                     	;# 
  1796     0003                     	;# 
  1797     0004                     	;# 
  1798     0005                     	;# 
  1799     0006                     	;# 
  1800     0007                     	;# 
  1801     0008                     	;# 
  1802     0009                     	;# 
  1803     000A                     	;# 
  1804     000B                     	;# 
  1805     000C                     	;# 
  1806     000D                     	;# 
  1807     000E                     	;# 
  1808     000E                     	;# 
  1809     000F                     	;# 
  1810     0010                     	;# 
  1811     0011                     	;# 
  1812     0012                     	;# 
  1813     0013                     	;# 
  1814     0014                     	;# 
  1815     0015                     	;# 
  1816     0015                     	;# 
  1817     0016                     	;# 
  1818     0017                     	;# 
  1819     0018                     	;# 
  1820     0019                     	;# 
  1821     001A                     	;# 
  1822     001B                     	;# 
  1823     001B                     	;# 
  1824     001C                     	;# 
  1825     001D                     	;# 
  1826     001E                     	;# 
  1827     001F                     	;# 
  1828     0081                     	;# 
  1829     0085                     	;# 
  1830     0086                     	;# 
  1831     0087                     	;# 
  1832     0088                     	;# 
  1833     0089                     	;# 
  1834     008C                     	;# 
  1835     008D                     	;# 
  1836     008E                     	;# 
  1837     008F                     	;# 
  1838     0090                     	;# 
  1839     0091                     	;# 
  1840     0092                     	;# 
  1841     0093                     	;# 
  1842     0093                     	;# 
  1843     0093                     	;# 
  1844     0094                     	;# 
  1845     0095                     	;# 
  1846     0096                     	;# 
  1847     0097                     	;# 
  1848     0098                     	;# 
  1849     0099                     	;# 
  1850     009A                     	;# 
  1851     009B                     	;# 
  1852     009C                     	;# 
  1853     009D                     	;# 
  1854     009E                     	;# 
  1855     009F                     	;# 
  1856     0105                     	;# 
  1857     0107                     	;# 
  1858     0108                     	;# 
  1859     0109                     	;# 
  1860     010C                     	;# 
  1861     010C                     	;# 
  1862     010D                     	;# 
  1863     010E                     	;# 
  1864     010F                     	;# 
  1865     0185                     	;# 
  1866     0187                     	;# 
  1867     0188                     	;# 
  1868     0189                     	;# 
  1869     018C                     	;# 
  1870     018D                     	;# 
  1871     0000                     	;# 
  1872     0001                     	;# 
  1873     0002                     	;# 
  1874     0003                     	;# 
  1875     0004                     	;# 
  1876     0005                     	;# 
  1877     0006                     	;# 
  1878     0007                     	;# 
  1879     0008                     	;# 
  1880     0009                     	;# 
  1881     000A                     	;# 
  1882     000B                     	;# 
  1883     000C                     	;# 
  1884     000D                     	;# 
  1885     000E                     	;# 
  1886     000E                     	;# 
  1887     000F                     	;# 
  1888     0010                     	;# 
  1889     0011                     	;# 
  1890     0012                     	;# 
  1891     0013                     	;# 
  1892     0014                     	;# 
  1893     0015                     	;# 
  1894     0015                     	;# 
  1895     0016                     	;# 
  1896     0017                     	;# 
  1897     0018                     	;# 
  1898     0019                     	;# 
  1899     001A                     	;# 
  1900     001B                     	;# 
  1901     001B                     	;# 
  1902     001C                     	;# 
  1903     001D                     	;# 
  1904     001E                     	;# 
  1905     001F                     	;# 
  1906     0081                     	;# 
  1907     0085                     	;# 
  1908     0086                     	;# 
  1909     0087                     	;# 
  1910     0088                     	;# 
  1911     0089                     	;# 
  1912     008C                     	;# 
  1913     008D                     	;# 
  1914     008E                     	;# 
  1915     008F                     	;# 
  1916     0090                     	;# 
  1917     0091                     	;# 
  1918     0092                     	;# 
  1919     0093                     	;# 
  1920     0093                     	;# 
  1921     0093                     	;# 
  1922     0094                     	;# 
  1923     0095                     	;# 
  1924     0096                     	;# 
  1925     0097                     	;# 
  1926     0098                     	;# 
  1927     0099                     	;# 
  1928     009A                     	;# 
  1929     009B                     	;# 
  1930     009C                     	;# 
  1931     009D                     	;# 
  1932     009E                     	;# 
  1933     009F                     	;# 
  1934     0105                     	;# 
  1935     0107                     	;# 
  1936     0108                     	;# 
  1937     0109                     	;# 
  1938     010C                     	;# 
  1939     010C                     	;# 
  1940     010D                     	;# 
  1941     010E                     	;# 
  1942     010F                     	;# 
  1943     0185                     	;# 
  1944     0187                     	;# 
  1945     0188                     	;# 
  1946     0189                     	;# 
  1947     018C                     	;# 
  1948     018D                     	;# 
  1949     0000                     	;# 
  1950     0001                     	;# 
  1951     0002                     	;# 
  1952     0003                     	;# 
  1953     0004                     	;# 
  1954     0005                     	;# 
  1955     0006                     	;# 
  1956     0007                     	;# 
  1957     0008                     	;# 
  1958     0009                     	;# 
  1959     000A                     	;# 
  1960     000B                     	;# 
  1961     000C                     	;# 
  1962     000D                     	;# 
  1963     000E                     	;# 
  1964     000E                     	;# 
  1965     000F                     	;# 
  1966     0010                     	;# 
  1967     0011                     	;# 
  1968     0012                     	;# 
  1969     0013                     	;# 
  1970     0014                     	;# 
  1971     0015                     	;# 
  1972     0015                     	;# 
  1973     0016                     	;# 
  1974     0017                     	;# 
  1975     0018                     	;# 
  1976     0019                     	;# 
  1977     001A                     	;# 
  1978     001B                     	;# 
  1979     001B                     	;# 
  1980     001C                     	;# 
  1981     001D                     	;# 
  1982     001E                     	;# 
  1983     001F                     	;# 
  1984     0081                     	;# 
  1985     0085                     	;# 
  1986     0086                     	;# 
  1987     0087                     	;# 
  1988     0088                     	;# 
  1989     0089                     	;# 
  1990     008C                     	;# 
  1991     008D                     	;# 
  1992     008E                     	;# 
  1993     008F                     	;# 
  1994     0090                     	;# 
  1995     0091                     	;# 
  1996     0092                     	;# 
  1997     0093                     	;# 
  1998     0093                     	;# 
  1999     0093                     	;# 
  2000     0094                     	;# 
  2001     0095                     	;# 
  2002     0096                     	;# 
  2003     0097                     	;# 
  2004     0098                     	;# 
  2005     0099                     	;# 
  2006     009A                     	;# 
  2007     009B                     	;# 
  2008     009C                     	;# 
  2009     009D                     	;# 
  2010     009E                     	;# 
  2011     009F                     	;# 
  2012     0105                     	;# 
  2013     0107                     	;# 
  2014     0108                     	;# 
  2015     0109                     	;# 
  2016     010C                     	;# 
  2017     010C                     	;# 
  2018     010D                     	;# 
  2019     010E                     	;# 
  2020     010F                     	;# 
  2021     0185                     	;# 
  2022     0187                     	;# 
  2023     0188                     	;# 
  2024     0189                     	;# 
  2025     018C                     	;# 
  2026     018D                     	;# 
  2027                           
  2028                           	psect	idataCOMMON
  2029     010B                     __pidataCOMMON:
  2030                           
  2031                           ;initializer for _LCD_entry_mode
  2032     010B  3406               	retlw	6
  2033                           
  2034                           	psect	idataBANK0
  2035     010A                     __pidataBANK0:
  2036                           
  2037                           ;initializer for _LCD_display_control
  2038     010A  340C               	retlw	12
  2039                           
  2040                           	psect	strings
  2041     0015                     __pstrings:
  2042     0015                     stringtab:
  2043     0015                     __stringtab:
  2044     0015                     stringcode:	
  2045                           ;	String table - string pointers are 1 byte each
  2046                           
  2047     0015                     stringdir:
  2048     0015  3000               	movlw	high stringdir
  2049     0016  008A               	movwf	10
  2050     0017  0804               	movf	4,w
  2051     0018  0A84               	incf	4,f
  2052     0019  0782               	addwf	2,f
  2053     001A                     __stringbase:
  2054     001A  3400               	retlw	0
  2055     001B                     __end_of__stringtab:
  2056     001B                     _KeyPadChar:
  2057     001B  3431               	retlw	49
  2058     001C  3432               	retlw	50
  2059     001D  3433               	retlw	51
  2060     001E  3441               	retlw	65
  2061     001F  3434               	retlw	52
  2062     0020  3435               	retlw	53
  2063     0021  3436               	retlw	54
  2064     0022  3442               	retlw	66
  2065     0023  3437               	retlw	55
  2066     0024  3438               	retlw	56
  2067     0025  3439               	retlw	57
  2068     0026  3443               	retlw	67
  2069     0027  342A               	retlw	42
  2070     0028  3430               	retlw	48
  2071     0029  3423               	retlw	35
  2072     002A  3444               	retlw	68
  2073     002B  343F               	retlw	63
  2074     002C                     __end_of_KeyPadChar:
  2075     0019                     _TXREG	set	25
  2076     0018                     _RCSTAbits	set	24
  2077     001F                     _ADCON0	set	31
  2078     0006                     _PORTBbits	set	6
  2079     001E                     _ADRESH	set	30
  2080     001A                     _RCREG	set	26
  2081     000C                     _PIR1bits	set	12
  2082     0008                     _PORTDbits	set	8
  2083     0037                     _RB7	set	55
  2084     0036                     _RB6	set	54
  2085     0035                     _RB5	set	53
  2086     0034                     _RB4	set	52
  2087     0033                     _RB3	set	51
  2088     0032                     _RB2	set	50
  2089     0031                     _RB1	set	49
  2090     0030                     _RB0	set	48
  2091     00C4                     _CREN	set	196
  2092     00C1                     _OERR	set	193
  2093     0064                     _TXIF	set	100
  2094     005F                     _GIE	set	95
  2095     005E                     _PEIE	set	94
  2096     00F9                     _GO_nDONE	set	249
  2097     0065                     _RCIF	set	101
  2098     008C                     _PIE1bits	set	140
  2099     0099                     _SPBRG	set	153
  2100     0098                     _TXSTAbits	set	152
  2101     009F                     _ADCON1	set	159
  2102     0086                     _TRISBbits	set	134
  2103     009E                     _ADRESL	set	158
  2104     0088                     _TRISDbits	set	136
  2105     0437                     _TRISB7	set	1079
  2106     0436                     _TRISB6	set	1078
  2107     0435                     _TRISB5	set	1077
  2108     0434                     _TRISB4	set	1076
  2109     0433                     _TRISB3	set	1075
  2110     0432                     _TRISB2	set	1074
  2111     0431                     _TRISB1	set	1073
  2112     0430                     _TRISB0	set	1072
  2113     043F                     _TRISC7	set	1087
  2114     043E                     _TRISC6	set	1086
  2115     002C                     STR_9:
  2116     002C  3420               	retlw	32	;' '
  2117     002D  3420               	retlw	32	;' '
  2118     002E  3420               	retlw	32	;' '
  2119     002F  3420               	retlw	32	;' '
  2120     0030  3420               	retlw	32	;' '
  2121     0031  3420               	retlw	32	;' '
  2122     0032  3420               	retlw	32	;' '
  2123     0033  3420               	retlw	32	;' '
  2124     0034  3420               	retlw	32	;' '
  2125     0035  3420               	retlw	32	;' '
  2126     0036  3420               	retlw	32	;' '
  2127     0037  3420               	retlw	32	;' '
  2128     0038  3420               	retlw	32	;' '
  2129     0039  3420               	retlw	32	;' '
  2130     003A  3420               	retlw	32	;' '
  2131     003B  3420               	retlw	32	;' '
  2132     003C  3400               	retlw	0
  2133     003D                     STR_1:
  2134     003D  3450               	retlw	80	;'P'
  2135     003E  3449               	retlw	73	;'I'
  2136     003F  3443               	retlw	67	;'C'
  2137     0040  3420               	retlw	32	;' '
  2138     0041  3449               	retlw	73	;'I'
  2139     0042  346E               	retlw	110	;'n'
  2140     0043  3469               	retlw	105	;'i'
  2141     0044  3474               	retlw	116	;'t'
  2142     0045  3469               	retlw	105	;'i'
  2143     0046  3461               	retlw	97	;'a'
  2144     0047  346C               	retlw	108	;'l'
  2145     0048  3469               	retlw	105	;'i'
  2146     0049  347A               	retlw	122	;'z'
  2147     004A  3465               	retlw	101	;'e'
  2148     004B  3464               	retlw	100	;'d'
  2149     004C  3400               	retlw	0
  2150     004D                     STR_2:
  2151     004D  3444               	retlw	68	;'D'
  2152     004E  346F               	retlw	111	;'o'
  2153     004F  346F               	retlw	111	;'o'
  2154     0050  3472               	retlw	114	;'r'
  2155     0051  3420               	retlw	32	;' '
  2156     0052  344F               	retlw	79	;'O'
  2157     0053  3470               	retlw	112	;'p'
  2158     0054  3465               	retlw	101	;'e'
  2159     0055  346E               	retlw	110	;'n'
  2160     0056  3469               	retlw	105	;'i'
  2161     0057  346E               	retlw	110	;'n'
  2162     0058  3467               	retlw	103	;'g'
  2163     0059  3400               	retlw	0
  2164     005A                     STR_5:
  2165     005A  3444               	retlw	68	;'D'
  2166     005B  346F               	retlw	111	;'o'
  2167     005C  346F               	retlw	111	;'o'
  2168     005D  3472               	retlw	114	;'r'
  2169     005E  3420               	retlw	32	;' '
  2170     005F  3443               	retlw	67	;'C'
  2171     0060  346C               	retlw	108	;'l'
  2172     0061  346F               	retlw	111	;'o'
  2173     0062  3473               	retlw	115	;'s'
  2174     0063  3469               	retlw	105	;'i'
  2175     0064  346E               	retlw	110	;'n'
  2176     0065  3467               	retlw	103	;'g'
  2177     0066  3400               	retlw	0
  2178     0067                     STR_3:
  2179     0067  3444               	retlw	68	;'D'
  2180     0068  346F               	retlw	111	;'o'
  2181     0069  346F               	retlw	111	;'o'
  2182     006A  3472               	retlw	114	;'r'
  2183     006B  3420               	retlw	32	;' '
  2184     006C  344F               	retlw	79	;'O'
  2185     006D  3470               	retlw	112	;'p'
  2186     006E  3465               	retlw	101	;'e'
  2187     006F  346E               	retlw	110	;'n'
  2188     0070  3465               	retlw	101	;'e'
  2189     0071  3464               	retlw	100	;'d'
  2190     0072  3400               	retlw	0
  2191     0073                     STR_6:
  2192     0073  3444               	retlw	68	;'D'
  2193     0074  346F               	retlw	111	;'o'
  2194     0075  346F               	retlw	111	;'o'
  2195     0076  3472               	retlw	114	;'r'
  2196     0077  3420               	retlw	32	;' '
  2197     0078  3443               	retlw	67	;'C'
  2198     0079  346C               	retlw	108	;'l'
  2199     007A  346F               	retlw	111	;'o'
  2200     007B  3473               	retlw	115	;'s'
  2201     007C  3465               	retlw	101	;'e'
  2202     007D  3464               	retlw	100	;'d'
  2203     007E  3400               	retlw	0
  2204     007F                     STR_4:
  2205     007F  3449               	retlw	73	;'I'
  2206     0080  3452               	retlw	82	;'R'
  2207     0081  3420               	retlw	32	;' '
  2208     0082  3443               	retlw	67	;'C'
  2209     0083  3468               	retlw	104	;'h'
  2210     0084  3465               	retlw	101	;'e'
  2211     0085  3463               	retlw	99	;'c'
  2212     0086  346B               	retlw	107	;'k'
  2213     0087  3469               	retlw	105	;'i'
  2214     0088  346E               	retlw	110	;'n'
  2215     0089  3467               	retlw	103	;'g'
  2216     008A  3400               	retlw	0
  2217     008B                     STR_10:
  2218     008B  340D               	retlw	13
  2219     008C  340A               	retlw	10
  2220     008D  3400               	retlw	0
  2221     008E                     STR_8:
  2222     008E  3443               	retlw	67	;'C'
  2223     008F  3400               	retlw	0
  2224     0090                     STR_7:
  2225     0090  344F               	retlw	79	;'O'
  2226     0091  3400               	retlw	0
  2227                           
  2228                           	psect	cinit
  2229     07DF                     start_initialization:	
  2230                           ; #config settings
  2231                           
  2232     07DF                     __initialization:
  2233                           
  2234                           ; Initialize objects allocated to BANK0
  2235     07DF  120A  118A  210A  120A  118A  	fcall	__pidataBANK0	;fetch initializer
  2236     07E4  00DE               	movwf	__pdataBANK0& (0+127)
  2237                           
  2238                           ; Initialize objects allocated to COMMON
  2239     07E5  120A  118A  210B  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
  2240     07EA  00FD               	movwf	__pdataCOMMON& (0+127)
  2241                           
  2242                           ; Clear objects allocated to BANK1
  2243     07EB  1383               	bcf	3,7	;select IRP bank0
  2244     07EC  30A0               	movlw	low __pbssBANK1
  2245     07ED  0084               	movwf	4
  2246     07EE  30C0               	movlw	low (__pbssBANK1+32)
  2247     07EF  120A  118A  210C  120A  118A  	fcall	clear_ram0
  2248                           
  2249                           ; Clear objects allocated to BANK0
  2250     07F4  3020               	movlw	low __pbssBANK0
  2251     07F5  0084               	movwf	4
  2252     07F6  304C               	movlw	low (__pbssBANK0+44)
  2253     07F7  120A  118A  210C  120A  118A  	fcall	clear_ram0
  2254     07FC                     end_of_initialization:	
  2255                           ;End of C runtime variable initialization code
  2256                           
  2257     07FC                     __end_of__initialization:
  2258     07FC  0183               	clrf	3
  2259     07FD  120A  118A  2F3F   	ljmp	_main	;jump to C main() function
  2260                           
  2261                           	psect	dataCOMMON
  2262     007D                     __pdataCOMMON:
  2263     007D                     _LCD_entry_mode:
  2264     007D                     	ds	1
  2265                           
  2266                           	psect	bssBANK0
  2267     0020                     __pbssBANK0:
  2268     0020                     modff@F522:
  2269     0020                     	ds	4
  2270     0024                     _LEDO:
  2271     0024                     	ds	2
  2272     0026                     _doorClose:
  2273     0026                     	ds	2
  2274     0028                     _StatusChange:
  2275     0028                     	ds	2
  2276     002A                     _doorStatus:
  2277     002A                     	ds	2
  2278     002C                     _pos:
  2279     002C                     	ds	2
  2280     002E                     _StringReceive:
  2281     002E                     	ds	30
  2282                           
  2283                           	psect	dataBANK0
  2284     005E                     __pdataBANK0:
  2285     005E                     _LCD_display_control:
  2286     005E                     	ds	1
  2287                           
  2288                           	psect	bssBANK1
  2289     00A0                     __pbssBANK1:
  2290     00A0                     _StringDisplay:
  2291     00A0                     	ds	32
  2292                           
  2293                           	psect	clrtext
  2294     010C                     clear_ram0:	
  2295                           ;	Called with FSR containing the base address, and
  2296                           ;	W with the last address+1
  2297                           
  2298     010C  0064               	clrwdt	;clear the watchdog before getting into this loop
  2299     010D                     clrloop0:
  2300     010D  0180               	clrf	0	;clear RAM location pointed to by FSR
  2301     010E  0A84               	incf	4,f	;increment pointer
  2302     010F  0604               	xorwf	4,w	;XOR with final address
  2303     0110  1903               	btfsc	3,2	;have we reached the end yet?
  2304     0111  3400               	retlw	0	;all done for this memory range, return
  2305     0112  0604               	xorwf	4,w	;XOR again to restore value
  2306     0113  290D               	goto	clrloop0	;do the next byte
  2307                           
  2308                           	psect	cstackCOMMON
  2309     0071                     __pcstackCOMMON:
  2310     0071                     ?_LCD_write_command:
  2311     0071                     ?_LCD_write_data:	
  2312                           ; 1 bytes @ 0x0
  2313                           
  2314     0071                     ?_LCD_pulse_clock:	
  2315                           ; 1 bytes @ 0x0
  2316                           
  2317     0071                     ?_setDoorStatus:	
  2318                           ; 1 bytes @ 0x0
  2319                           
  2320     0071                     ?_picInit:	
  2321                           ; 1 bytes @ 0x0
  2322                           
  2323     0071                     ?_closeDoor:	
  2324                           ; 1 bytes @ 0x0
  2325                           
  2326     0071                     ?_openDoor:	
  2327                           ; 1 bytes @ 0x0
  2328                           
  2329     0071                     ?_InitUART:	
  2330                           ; 1 bytes @ 0x0
  2331                           
  2332     0071                     ?_strchr:	
  2333                           ; 1 bytes @ 0x0
  2334                           
  2335     0071                     ?_LCD_clear:	
  2336                           ; 1 bytes @ 0x0
  2337                           
  2338     0071                     ?_LCD_init:	
  2339                           ; 1 bytes @ 0x0
  2340                           
  2341     0071                     ?_LCD_write_string:	
  2342                           ; 1 bytes @ 0x0
  2343                           
  2344     0071                     ?_ISR:	
  2345                           ; 1 bytes @ 0x0
  2346                           
  2347     0071                     ?_main:	
  2348                           ; 1 bytes @ 0x0
  2349                           
  2350     0071                     ?_ClearStringReceive:	
  2351                           ; 1 bytes @ 0x0
  2352                           
  2353     0071                     ??_ClearStringReceive:	
  2354                           ; 1 bytes @ 0x0
  2355                           
  2356     0071                     ?i1_LCD_pulse_clock:	
  2357                           ; 1 bytes @ 0x0
  2358                           
  2359     0071                     ??i1_LCD_pulse_clock:	
  2360                           ; 1 bytes @ 0x0
  2361                           
  2362     0071                     ?i1_LCD_write_command:	
  2363                           ; 1 bytes @ 0x0
  2364                           
  2365     0071                     ?i1_LCD_write_data:	
  2366                           ; 1 bytes @ 0x0
  2367                           
  2368     0071                     ?i1_LCD_write_string:	
  2369                           ; 1 bytes @ 0x0
  2370                           
  2371     0071                     ?_strlen:	
  2372                           ; 1 bytes @ 0x0
  2373                           
  2374     0071                     ?_strncmp:	
  2375                           ; 2 bytes @ 0x0
  2376                           
  2377     0071                     strncmp@r:	
  2378                           ; 2 bytes @ 0x0
  2379                           
  2380     0071                     ClearStringReceive@i:	
  2381                           ; 1 bytes @ 0x0
  2382                           
  2383     0071                     strchr@c:	
  2384                           ; 2 bytes @ 0x0
  2385                           
  2386                           
  2387                           ; 2 bytes @ 0x0
  2388     0071                     	ds	1
  2389     0072                     ??i1_LCD_write_command:
  2390     0072                     ??i1_LCD_write_data:	
  2391                           ; 1 bytes @ 0x1
  2392                           
  2393     0072                     strncmp@n:	
  2394                           ; 1 bytes @ 0x1
  2395                           
  2396                           
  2397                           ; 2 bytes @ 0x1
  2398     0072                     	ds	1
  2399     0073                     ??_strlen:
  2400     0073                     ??_strchr:	
  2401                           ; 1 bytes @ 0x2
  2402                           
  2403     0073                     strchr@s:	
  2404                           ; 1 bytes @ 0x2
  2405                           
  2406     0073                     strlen@a:	
  2407                           ; 1 bytes @ 0x2
  2408                           
  2409                           
  2410                           ; 1 bytes @ 0x2
  2411     0073                     	ds	1
  2412     0074                     ??_strncmp:
  2413     0074                     strlen@s:	
  2414                           ; 1 bytes @ 0x3
  2415                           
  2416     0074                     i1LCD_write_command@command:	
  2417                           ; 1 bytes @ 0x3
  2418                           
  2419     0074                     i1LCD_write_data@data:	
  2420                           ; 1 bytes @ 0x3
  2421                           
  2422                           
  2423                           ; 1 bytes @ 0x3
  2424     0074                     	ds	1
  2425     0075                     ?i1_LCD_cursor_set:
  2426     0075                     ??i1_LCD_write_string:	
  2427                           ; 1 bytes @ 0x4
  2428                           
  2429     0075                     i1LCD_cursor_set@column:	
  2430                           ; 1 bytes @ 0x4
  2431                           
  2432     0075                     i1LCD_write_string@string:	
  2433                           ; 1 bytes @ 0x4
  2434                           
  2435                           
  2436                           ; 1 bytes @ 0x4
  2437     0075                     	ds	1
  2438     0076                     ??i1_LCD_cursor_set:
  2439     0076                     strncmp@l:	
  2440                           ; 1 bytes @ 0x5
  2441                           
  2442     0076                     i1LCD_cursor_set@row:	
  2443                           ; 1 bytes @ 0x5
  2444                           
  2445     0076                     i1LCD_write_string@i:	
  2446                           ; 1 bytes @ 0x5
  2447                           
  2448                           
  2449                           ; 1 bytes @ 0x5
  2450     0076                     	ds	1
  2451     0077                     ?_strstr:
  2452     0077                     strstr@n:	
  2453                           ; 1 bytes @ 0x6
  2454                           
  2455                           
  2456                           ; 1 bytes @ 0x6
  2457     0077                     	ds	1
  2458     0078                     ??_strstr:
  2459                           
  2460                           ; 1 bytes @ 0x7
  2461     0078                     	ds	2
  2462     007A                     strstr@nl:
  2463                           
  2464                           ; 2 bytes @ 0x9
  2465     007A                     	ds	2
  2466     007C                     strstr@h:
  2467                           
  2468                           ; 1 bytes @ 0xB
  2469     007C                     	ds	1
  2470     007D                     ??_setDoorStatus:
  2471                           
  2472                           	psect	cstackBANK0
  2473     004C                     __pcstackBANK0:	
  2474                           ; 1 bytes @ 0xC
  2475                           
  2476     004C                     ??_ISR:
  2477                           
  2478                           ; 1 bytes @ 0x0
  2479     004C                     	ds	4
  2480     0050                     ??_LCD_pulse_clock:
  2481     0050                     ??_InitUART:	
  2482                           ; 1 bytes @ 0x4
  2483                           
  2484                           
  2485                           ; 1 bytes @ 0x4
  2486     0050                     	ds	1
  2487     0051                     ??_LCD_write_command:
  2488     0051                     ??_LCD_write_data:	
  2489                           ; 1 bytes @ 0x5
  2490                           
  2491                           
  2492                           ; 1 bytes @ 0x5
  2493     0051                     	ds	2
  2494     0053                     LCD_write_command@command:
  2495     0053                     LCD_write_data@data:	
  2496                           ; 1 bytes @ 0x7
  2497                           
  2498                           
  2499                           ; 1 bytes @ 0x7
  2500     0053                     	ds	1
  2501     0054                     ?_LCD_cursor_set:
  2502     0054                     ??_LCD_clear:	
  2503                           ; 1 bytes @ 0x8
  2504                           
  2505     0054                     ??_LCD_write_string:	
  2506                           ; 1 bytes @ 0x8
  2507                           
  2508     0054                     LCD_cursor_set@column:	
  2509                           ; 1 bytes @ 0x8
  2510                           
  2511     0054                     LCD_write_string@i:	
  2512                           ; 1 bytes @ 0x8
  2513                           
  2514                           
  2515                           ; 1 bytes @ 0x8
  2516     0054                     	ds	1
  2517     0055                     ??_LCD_cursor_set:
  2518     0055                     ??_LCD_init:	
  2519                           ; 1 bytes @ 0x9
  2520                           
  2521     0055                     LCD_cursor_set@row:	
  2522                           ; 1 bytes @ 0x9
  2523                           
  2524     0055                     LCD_write_string@string:	
  2525                           ; 1 bytes @ 0x9
  2526                           
  2527                           
  2528                           ; 1 bytes @ 0x9
  2529     0055                     	ds	1
  2530     0056                     ??_closeDoor:
  2531     0056                     ??_openDoor:	
  2532                           ; 1 bytes @ 0xA
  2533                           
  2534                           
  2535                           ; 1 bytes @ 0xA
  2536     0056                     	ds	3
  2537     0059                     ??_picInit:
  2538                           
  2539                           ; 1 bytes @ 0xD
  2540     0059                     	ds	3
  2541     005C                     ??_main:
  2542     005C                     main@adcResult:	
  2543                           ; 1 bytes @ 0x10
  2544                           
  2545                           
  2546                           ; 2 bytes @ 0x10
  2547     005C                     	ds	2
  2548                           
  2549                           	psect	maintext
  2550     073F                     __pmaintext:	
  2551 ;;
  2552 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2553 ;;
  2554 ;; *************** function _main *****************
  2555 ;; Defined at:
  2556 ;;		line 86 in file "main.c"
  2557 ;; Parameters:    Size  Location     Type
  2558 ;;		None
  2559 ;; Auto vars:     Size  Location     Type
  2560 ;;  adcResult       2   16[BANK0 ] unsigned int 
  2561 ;; Return value:  Size  Location     Type
  2562 ;;                  1    wreg      void 
  2563 ;; Registers used:
  2564 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2565 ;; Tracked objects:
  2566 ;;		On entry : B00/0
  2567 ;;		On exit  : 0/0
  2568 ;;		Unchanged: 0/0
  2569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2570 ;;      Params:         0       0       0       0       0
  2571 ;;      Locals:         0       2       0       0       0
  2572 ;;      Temps:          0       0       0       0       0
  2573 ;;      Totals:         0       2       0       0       0
  2574 ;;Total ram usage:        2 bytes
  2575 ;; Hardware stack levels required when called: 10
  2576 ;; This function calls:
  2577 ;;		_LCD_cursor_set
  2578 ;;		_closeDoor
  2579 ;;		_openDoor
  2580 ;;		_picInit
  2581 ;; This function is called by:
  2582 ;;		Startup code after reset
  2583 ;; This function uses a non-reentrant model
  2584 ;;
  2585                           
  2586     073F                     _main:	
  2587                           ;psect for function _main
  2588                           
  2589     073F                     l2296:	
  2590                           ;incstack = 0
  2591 ;; hardware stack exceeded
  2592                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2593                           
  2594                           
  2595                           ;main.c: 87:     picInit();
  2596     073F  120A  118A  2311  120A  118A  	fcall	_picInit
  2597     0744                     l2298:
  2598                           
  2599                           ;main.c: 93:         GO_nDONE = 1;
  2600     0744  1283               	bcf	3,5	;RP0=0, select bank0
  2601     0745  1303               	bcf	3,6	;RP1=0, select bank0
  2602     0746  149F               	bsf	31,1	;volatile
  2603     0747                     l260:	
  2604                           ;main.c: 98:         while(GO_nDONE);
  2605                           
  2606     0747  189F               	btfsc	31,1	;volatile
  2607     0748  2F4A               	goto	u2051
  2608     0749  2F4B               	goto	u2050
  2609     074A                     u2051:
  2610     074A  2F47               	goto	l260
  2611     074B                     u2050:
  2612     074B                     l2300:
  2613                           
  2614                           ;main.c: 100:         unsigned int adcResult = ADRESH << 8 | ADRESL;
  2615     074B  081E               	movf	30,w	;volatile
  2616     074C  00DD               	movwf	main@adcResult+1
  2617     074D  1683               	bsf	3,5	;RP0=1, select bank1
  2618     074E  1303               	bcf	3,6	;RP1=0, select bank1
  2619     074F  081E               	movf	30,w	;volatile
  2620     0750  1283               	bcf	3,5	;RP0=0, select bank0
  2621     0751  1303               	bcf	3,6	;RP1=0, select bank0
  2622     0752  00DC               	movwf	main@adcResult
  2623                           
  2624                           ;main.c: 101:         if(adcResult > 300 && doorStatus == 1){
  2625     0753  3001               	movlw	1
  2626     0754  025D               	subwf	main@adcResult+1,w
  2627     0755  302D               	movlw	45
  2628     0756  1903               	skipnz
  2629     0757  025C               	subwf	main@adcResult,w
  2630     0758  1C03               	skipc
  2631     0759  2F5B               	goto	u2061
  2632     075A  2F5C               	goto	u2060
  2633     075B                     u2061:
  2634     075B  2F67               	goto	l2306
  2635     075C                     u2060:
  2636     075C                     l2302:
  2637     075C  032A               	decf	_doorStatus,w
  2638     075D  042B               	iorwf	_doorStatus+1,w
  2639     075E  1D03               	btfss	3,2
  2640     075F  2F61               	goto	u2071
  2641     0760  2F62               	goto	u2070
  2642     0761                     u2071:
  2643     0761  2F67               	goto	l2306
  2644     0762                     u2070:
  2645     0762                     l2304:
  2646                           
  2647                           ;main.c: 102:             closeDoor();
  2648     0762  120A  118A  2412  120A  118A  	fcall	_closeDoor
  2649     0767                     l2306:
  2650                           
  2651                           ;main.c: 104:         if(adcResult < 300 && doorStatus == 0){
  2652     0767  3001               	movlw	1
  2653     0768  1283               	bcf	3,5	;RP0=0, select bank0
  2654     0769  1303               	bcf	3,6	;RP1=0, select bank0
  2655     076A  025D               	subwf	main@adcResult+1,w
  2656     076B  302C               	movlw	44
  2657     076C  1903               	skipnz
  2658     076D  025C               	subwf	main@adcResult,w
  2659     076E  1803               	skipnc
  2660     076F  2F71               	goto	u2081
  2661     0770  2F72               	goto	u2080
  2662     0771                     u2081:
  2663     0771  2F7D               	goto	l2312
  2664     0772                     u2080:
  2665     0772                     l2308:
  2666     0772  082A               	movf	_doorStatus,w
  2667     0773  042B               	iorwf	_doorStatus+1,w
  2668     0774  1D03               	btfss	3,2
  2669     0775  2F77               	goto	u2091
  2670     0776  2F78               	goto	u2090
  2671     0777                     u2091:
  2672     0777  2F7D               	goto	l2312
  2673     0778                     u2090:
  2674     0778                     l2310:
  2675                           
  2676                           ;main.c: 105:             openDoor();
  2677     0778  120A  118A  2281  120A  118A  	fcall	_openDoor
  2678     077D                     l2312:
  2679                           
  2680                           ;main.c: 129:         LCD_cursor_set(1, 1);
  2681     077D  1283               	bcf	3,5	;RP0=0, select bank0
  2682     077E  1303               	bcf	3,6	;RP1=0, select bank0
  2683     077F  01D4               	clrf	LCD_cursor_set@column
  2684     0780  0AD4               	incf	LCD_cursor_set@column,f
  2685     0781  3001               	movlw	1
  2686     0782  120A  118A  2250  120A  118A  	fcall	_LCD_cursor_set
  2687     0787                     l2314:
  2688                           
  2689                           ;main.c: 130:         if(doorStatus == 0 && doorClose == 0 && PORTBbits.RB7 == 1){
  2690     0787  1283               	bcf	3,5	;RP0=0, select bank0
  2691     0788  1303               	bcf	3,6	;RP1=0, select bank0
  2692     0789  082A               	movf	_doorStatus,w
  2693     078A  042B               	iorwf	_doorStatus+1,w
  2694     078B  1D03               	btfss	3,2
  2695     078C  2F8E               	goto	u2101
  2696     078D  2F8F               	goto	u2100
  2697     078E                     u2101:
  2698     078E  2FA3               	goto	l2322
  2699     078F                     u2100:
  2700     078F                     l2316:
  2701     078F  0826               	movf	_doorClose,w
  2702     0790  0427               	iorwf	_doorClose+1,w
  2703     0791  1D03               	btfss	3,2
  2704     0792  2F94               	goto	u2111
  2705     0793  2F95               	goto	u2110
  2706     0794                     u2111:
  2707     0794  2FA3               	goto	l2322
  2708     0795                     u2110:
  2709     0795                     l2318:
  2710     0795  1F86               	btfss	6,7	;volatile
  2711     0796  2F98               	goto	u2121
  2712     0797  2F99               	goto	u2120
  2713     0798                     u2121:
  2714     0798  2FA3               	goto	l2322
  2715     0799                     u2120:
  2716     0799                     l2320:
  2717                           
  2718                           ;main.c: 132:             openDoor();
  2719     0799  120A  118A  2281  120A  118A  	fcall	_openDoor
  2720                           
  2721                           ;main.c: 134:             closeDoor();
  2722     079E  120A  118A  2412  120A  118A  	fcall	_closeDoor
  2723     07A3                     l2322:
  2724                           
  2725                           ;main.c: 137:         if(doorClose == 0 && doorStatus == 1 && StatusChange == 1){
  2726     07A3  1283               	bcf	3,5	;RP0=0, select bank0
  2727     07A4  1303               	bcf	3,6	;RP1=0, select bank0
  2728     07A5  0826               	movf	_doorClose,w
  2729     07A6  0427               	iorwf	_doorClose+1,w
  2730     07A7  1D03               	btfss	3,2
  2731     07A8  2FAA               	goto	u2131
  2732     07A9  2FAB               	goto	u2130
  2733     07AA                     u2131:
  2734     07AA  2FC0               	goto	l2332
  2735     07AB                     u2130:
  2736     07AB                     l2324:
  2737     07AB  032A               	decf	_doorStatus,w
  2738     07AC  042B               	iorwf	_doorStatus+1,w
  2739     07AD  1D03               	btfss	3,2
  2740     07AE  2FB0               	goto	u2141
  2741     07AF  2FB1               	goto	u2140
  2742     07B0                     u2141:
  2743     07B0  2FC0               	goto	l2332
  2744     07B1                     u2140:
  2745     07B1                     l2326:
  2746     07B1  0328               	decf	_StatusChange,w
  2747     07B2  0429               	iorwf	_StatusChange+1,w
  2748     07B3  1D03               	btfss	3,2
  2749     07B4  2FB6               	goto	u2151
  2750     07B5  2FB7               	goto	u2150
  2751     07B6                     u2151:
  2752     07B6  2FC0               	goto	l2332
  2753     07B7                     u2150:
  2754     07B7                     l2328:
  2755                           
  2756                           ;main.c: 138:             closeDoor();
  2757     07B7  120A  118A  2412  120A  118A  	fcall	_closeDoor
  2758     07BC                     l2330:
  2759                           
  2760                           ;main.c: 139:             StatusChange = 0;
  2761     07BC  1283               	bcf	3,5	;RP0=0, select bank0
  2762     07BD  1303               	bcf	3,6	;RP1=0, select bank0
  2763     07BE  01A8               	clrf	_StatusChange
  2764     07BF  01A9               	clrf	_StatusChange+1
  2765     07C0                     l2332:
  2766                           
  2767                           ;main.c: 141:         if(doorClose == 1 && doorStatus == 0 && StatusChange == 1){
  2768     07C0  0326               	decf	_doorClose,w
  2769     07C1  0427               	iorwf	_doorClose+1,w
  2770     07C2  1D03               	btfss	3,2
  2771     07C3  2FC5               	goto	u2161
  2772     07C4  2FC6               	goto	u2160
  2773     07C5                     u2161:
  2774     07C5  2F44               	goto	l2298
  2775     07C6                     u2160:
  2776     07C6                     l2334:
  2777     07C6  082A               	movf	_doorStatus,w
  2778     07C7  042B               	iorwf	_doorStatus+1,w
  2779     07C8  1D03               	btfss	3,2
  2780     07C9  2FCB               	goto	u2171
  2781     07CA  2FCC               	goto	u2170
  2782     07CB                     u2171:
  2783     07CB  2F44               	goto	l2298
  2784     07CC                     u2170:
  2785     07CC                     l2336:
  2786     07CC  0328               	decf	_StatusChange,w
  2787     07CD  0429               	iorwf	_StatusChange+1,w
  2788     07CE  1D03               	btfss	3,2
  2789     07CF  2FD1               	goto	u2181
  2790     07D0  2FD2               	goto	u2180
  2791     07D1                     u2181:
  2792     07D1  2F44               	goto	l2298
  2793     07D2                     u2180:
  2794     07D2                     l2338:
  2795                           
  2796                           ;main.c: 142:             openDoor();
  2797     07D2  120A  118A  2281  120A  118A  	fcall	_openDoor
  2798     07D7                     l2340:
  2799                           
  2800                           ;main.c: 151:             StatusChange = 0;
  2801     07D7  1283               	bcf	3,5	;RP0=0, select bank0
  2802     07D8  1303               	bcf	3,6	;RP1=0, select bank0
  2803     07D9  01A8               	clrf	_StatusChange
  2804     07DA  01A9               	clrf	_StatusChange+1
  2805     07DB  2F44               	goto	l2298
  2806     07DC  120A  118A  2812   	ljmp	start
  2807     07DF                     __end_of_main:
  2808                           
  2809                           	psect	text1
  2810     0311                     __ptext1:	
  2811 ;; *************** function _picInit *****************
  2812 ;; Defined at:
  2813 ;;		line 178 in file "main.c"
  2814 ;; Parameters:    Size  Location     Type
  2815 ;;		None
  2816 ;; Auto vars:     Size  Location     Type
  2817 ;;  adcResult       2    0        unsigned int 
  2818 ;; Return value:  Size  Location     Type
  2819 ;;                  1    wreg      void 
  2820 ;; Registers used:
  2821 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2822 ;; Tracked objects:
  2823 ;;		On entry : 0/0
  2824 ;;		On exit  : 0/0
  2825 ;;		Unchanged: 0/0
  2826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2827 ;;      Params:         0       0       0       0       0
  2828 ;;      Locals:         0       0       0       0       0
  2829 ;;      Temps:          0       3       0       0       0
  2830 ;;      Totals:         0       3       0       0       0
  2831 ;;Total ram usage:        3 bytes
  2832 ;; Hardware stack levels used: 1
  2833 ;; Hardware stack levels required when called: 9
  2834 ;; This function calls:
  2835 ;;		_InitUART
  2836 ;;		_LCD_clear
  2837 ;;		_LCD_cursor_set
  2838 ;;		_LCD_init
  2839 ;;		_LCD_write_string
  2840 ;;		_closeDoor
  2841 ;; This function is called by:
  2842 ;;		_main
  2843 ;; This function uses a non-reentrant model
  2844 ;;
  2845                           
  2846     0311                     _picInit:	
  2847                           ;psect for function _picInit
  2848                           
  2849     0311                     l2056:	
  2850                           ;incstack = 0
  2851 ;; hardware stack exceeded
  2852                           ; Regs used in _picInit: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2853                           
  2854                           
  2855                           ;main.c: 179:     TRISBbits.TRISB7 = 1;
  2856     0311  1683               	bsf	3,5	;RP0=1, select bank1
  2857     0312  1303               	bcf	3,6	;RP1=0, select bank1
  2858     0313  1786               	bsf	6,7	;volatile
  2859                           
  2860                           ;main.c: 180:     TRISBbits.TRISB4 = 1;
  2861     0314  1606               	bsf	6,4	;volatile
  2862                           
  2863                           ;main.c: 181:     TRISBbits.TRISB6 = 0;
  2864     0315  1306               	bcf	6,6	;volatile
  2865                           
  2866                           ;main.c: 182:     TRISBbits.TRISB5 = 0;
  2867     0316  1286               	bcf	6,5	;volatile
  2868     0317                     l2058:
  2869                           
  2870                           ;main.c: 183:     ADCON1 = 0x80;
  2871     0317  3080               	movlw	128
  2872     0318  009F               	movwf	31	;volatile
  2873                           
  2874                           ;main.c: 184:     ADCON0 = 0x01;
  2875     0319  3001               	movlw	1
  2876     031A  1283               	bcf	3,5	;RP0=0, select bank0
  2877     031B  1303               	bcf	3,6	;RP1=0, select bank0
  2878     031C  009F               	movwf	31	;volatile
  2879     031D                     l2060:
  2880                           
  2881                           ;main.c: 186:     InitUART();
  2882     031D  120A  118A  215B  120A  118A  	fcall	_InitUART
  2883                           
  2884                           ;main.c: 188:     LCD_init();
  2885     0322  120A  118A  2476  120A  118A  	fcall	_LCD_init
  2886                           
  2887                           ;main.c: 189:     LCD_clear();
  2888     0327  120A  118A  2144  120A  118A  	fcall	_LCD_clear
  2889     032C                     l2062:
  2890                           
  2891                           ;main.c: 190:     LCD_cursor_set(1, 1);
  2892     032C  1283               	bcf	3,5	;RP0=0, select bank0
  2893     032D  1303               	bcf	3,6	;RP1=0, select bank0
  2894     032E  01D4               	clrf	LCD_cursor_set@column
  2895     032F  0AD4               	incf	LCD_cursor_set@column,f
  2896     0330  3001               	movlw	1
  2897     0331  120A  118A  2250  120A  118A  	fcall	_LCD_cursor_set
  2898     0336                     l2064:
  2899                           
  2900                           ;main.c: 193:     GO_nDONE = 1;
  2901     0336  1283               	bcf	3,5	;RP0=0, select bank0
  2902     0337  1303               	bcf	3,6	;RP1=0, select bank0
  2903     0338  149F               	bsf	31,1	;volatile
  2904     0339                     l273:	
  2905                           ;main.c: 198:     while(GO_nDONE);
  2906                           
  2907     0339  189F               	btfsc	31,1	;volatile
  2908     033A  2B3C               	goto	u1781
  2909     033B  2B3D               	goto	u1780
  2910     033C                     u1781:
  2911     033C  2B39               	goto	l273
  2912     033D                     u1780:
  2913     033D                     l2066:
  2914     033D  081E               	movf	30,w	;volatile
  2915     033E  1683               	bsf	3,5	;RP0=1, select bank1
  2916     033F  1303               	bcf	3,6	;RP1=0, select bank1
  2917     0340  081E               	movf	30,w	;volatile
  2918     0341                     l2068:
  2919                           
  2920                           ;main.c: 202:     LCD_write_string("PIC Initialized");
  2921     0341  3023               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2922     0342  120A  118A  21CF  120A  118A  	fcall	_LCD_write_string
  2923     0347                     l2070:
  2924                           
  2925                           ;main.c: 203:     _delay((unsigned long)((1000)*(4000000/4000.0)));
  2926     0347  3006               	movlw	6
  2927     0348  1283               	bcf	3,5	;RP0=0, select bank0
  2928     0349  1303               	bcf	3,6	;RP1=0, select bank0
  2929     034A  00DB               	movwf	??_picInit+2
  2930     034B  3013               	movlw	19
  2931     034C  00DA               	movwf	??_picInit+1
  2932     034D  30AD               	movlw	173
  2933     034E  00D9               	movwf	??_picInit
  2934     034F                     u2197:
  2935     034F  0BD9               	decfsz	??_picInit,f
  2936     0350  2B4F               	goto	u2197
  2937     0351  0BDA               	decfsz	??_picInit+1,f
  2938     0352  2B4F               	goto	u2197
  2939     0353  0BDB               	decfsz	??_picInit+2,f
  2940     0354  2B4F               	goto	u2197
  2941     0355                     l2072:
  2942                           
  2943                           ;main.c: 204:     LCD_clear();
  2944     0355  120A  118A  2144  120A  118A  	fcall	_LCD_clear
  2945     035A                     l2074:
  2946                           
  2947                           ;main.c: 205:     closeDoor();
  2948     035A  120A  118A  2412  120A  118A  	fcall	_closeDoor
  2949     035F                     l276:
  2950     035F  0008               	return
  2951     0360                     __end_of_picInit:
  2952                           
  2953                           	psect	text2
  2954     0412                     __ptext2:	
  2955 ;; *************** function _closeDoor *****************
  2956 ;; Defined at:
  2957 ;;		line 224 in file "main.c"
  2958 ;; Parameters:    Size  Location     Type
  2959 ;;		None
  2960 ;; Auto vars:     Size  Location     Type
  2961 ;;		None
  2962 ;; Return value:  Size  Location     Type
  2963 ;;                  1    wreg      void 
  2964 ;; Registers used:
  2965 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2966 ;; Tracked objects:
  2967 ;;		On entry : 0/0
  2968 ;;		On exit  : 0/0
  2969 ;;		Unchanged: 0/0
  2970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2971 ;;      Params:         0       0       0       0       0
  2972 ;;      Locals:         0       0       0       0       0
  2973 ;;      Temps:          0       3       0       0       0
  2974 ;;      Totals:         0       3       0       0       0
  2975 ;;Total ram usage:        3 bytes
  2976 ;; Hardware stack levels used: 1
  2977 ;; Hardware stack levels required when called: 8
  2978 ;; This function calls:
  2979 ;;		_LCD_clear
  2980 ;;		_LCD_cursor_set
  2981 ;;		_LCD_write_string
  2982 ;; This function is called by:
  2983 ;;		_main
  2984 ;;		_picInit
  2985 ;; This function uses a non-reentrant model
  2986 ;;
  2987                           
  2988     0412                     _closeDoor:	
  2989                           ;psect for function _closeDoor
  2990                           
  2991     0412                     l1916:	
  2992                           ;incstack = 0
  2993 ;; hardware stack exceeded
  2994                           ; Regs used in _closeDoor: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2995                           
  2996                           
  2997                           ;main.c: 225:     LCD_clear();
  2998     0412  120A  118A  2144  120A  118A  	fcall	_LCD_clear
  2999     0417                     l1918:
  3000                           
  3001                           ;main.c: 226:     LCD_cursor_set(1, 1);
  3002     0417  1283               	bcf	3,5	;RP0=0, select bank0
  3003     0418  1303               	bcf	3,6	;RP1=0, select bank0
  3004     0419  01D4               	clrf	LCD_cursor_set@column
  3005     041A  0AD4               	incf	LCD_cursor_set@column,f
  3006     041B  3001               	movlw	1
  3007     041C  120A  118A  2250  120A  118A  	fcall	_LCD_cursor_set
  3008     0421                     l1920:
  3009                           
  3010                           ;main.c: 227:     LCD_write_string("IR Checking");
  3011     0421  3065               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  3012     0422  120A  118A  21CF  120A  118A  	fcall	_LCD_write_string
  3013     0427                     l1922:
  3014                           
  3015                           ;main.c: 228:     if(PORTBbits.RB7 != 0){
  3016     0427  1283               	bcf	3,5	;RP0=0, select bank0
  3017     0428  1303               	bcf	3,6	;RP1=0, select bank0
  3018     0429  1F86               	btfss	6,7	;volatile
  3019     042A  2C2C               	goto	u1631
  3020     042B  2C2D               	goto	u1630
  3021     042C                     u1631:
  3022     042C  2C31               	goto	l1926
  3023     042D                     u1630:
  3024     042D                     l283:	
  3025                           ;main.c: 231:         }
  3026                           
  3027                           
  3028                           ;main.c: 229:         while(PORTBbits.RB7 != 0){
  3029     042D  1B86               	btfsc	6,7	;volatile
  3030     042E  2C30               	goto	u1641
  3031     042F  2C31               	goto	u1640
  3032     0430                     u1641:
  3033     0430  2C2D               	goto	l283
  3034     0431                     u1640:
  3035     0431                     l1926:
  3036                           
  3037                           ;main.c: 233:     LCD_clear();
  3038     0431  120A  118A  2144  120A  118A  	fcall	_LCD_clear
  3039     0436                     l1928:
  3040                           
  3041                           ;main.c: 234:     doorStatus = 0;
  3042     0436  1283               	bcf	3,5	;RP0=0, select bank0
  3043     0437  1303               	bcf	3,6	;RP1=0, select bank0
  3044     0438  01AA               	clrf	_doorStatus
  3045     0439  01AB               	clrf	_doorStatus+1
  3046     043A                     l1930:
  3047                           
  3048                           ;main.c: 235:     LCD_cursor_set(1, 1);
  3049     043A  01D4               	clrf	LCD_cursor_set@column
  3050     043B  0AD4               	incf	LCD_cursor_set@column,f
  3051     043C  3001               	movlw	1
  3052     043D  120A  118A  2250  120A  118A  	fcall	_LCD_cursor_set
  3053     0442                     l1932:
  3054                           
  3055                           ;main.c: 236:     LCD_write_string("Door Closing");
  3056     0442  3040               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  3057     0443  120A  118A  21CF  120A  118A  	fcall	_LCD_write_string
  3058     0448                     l1934:
  3059                           
  3060                           ;main.c: 237:     PORTBbits.RB6 = 0;
  3061     0448  1283               	bcf	3,5	;RP0=0, select bank0
  3062     0449  1303               	bcf	3,6	;RP1=0, select bank0
  3063     044A  1306               	bcf	6,6	;volatile
  3064     044B                     l1936:
  3065                           
  3066                           ;main.c: 238:     PORTBbits.RB5 = 1;
  3067     044B  1686               	bsf	6,5	;volatile
  3068     044C                     l1938:
  3069                           
  3070                           ;main.c: 239:     _delay((unsigned long)((750)*(4000000/4000.0)));
  3071     044C  3004               	movlw	4
  3072     044D  1283               	bcf	3,5	;RP0=0, select bank0
  3073     044E  1303               	bcf	3,6	;RP1=0, select bank0
  3074     044F  00D8               	movwf	??_closeDoor+2
  3075     0450  30CF               	movlw	207
  3076     0451  00D7               	movwf	??_closeDoor+1
  3077     0452  3001               	movlw	1
  3078     0453  00D6               	movwf	??_closeDoor
  3079     0454                     u2207:
  3080     0454  0BD6               	decfsz	??_closeDoor,f
  3081     0455  2C54               	goto	u2207
  3082     0456  0BD7               	decfsz	??_closeDoor+1,f
  3083     0457  2C54               	goto	u2207
  3084     0458  0BD8               	decfsz	??_closeDoor+2,f
  3085     0459  2C54               	goto	u2207
  3086     045A                     l1940:
  3087                           
  3088                           ;main.c: 240:     LCD_clear();
  3089     045A  120A  118A  2144  120A  118A  	fcall	_LCD_clear
  3090     045F                     l1942:
  3091                           
  3092                           ;main.c: 241:     LCD_cursor_set(1, 1);
  3093     045F  1283               	bcf	3,5	;RP0=0, select bank0
  3094     0460  1303               	bcf	3,6	;RP1=0, select bank0
  3095     0461  01D4               	clrf	LCD_cursor_set@column
  3096     0462  0AD4               	incf	LCD_cursor_set@column,f
  3097     0463  3001               	movlw	1
  3098     0464  120A  118A  2250  120A  118A  	fcall	_LCD_cursor_set
  3099     0469                     l1944:
  3100                           
  3101                           ;main.c: 242:     LCD_write_string("Door Closed");
  3102     0469  3059               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  3103     046A  120A  118A  21CF  120A  118A  	fcall	_LCD_write_string
  3104     046F                     l1946:
  3105                           
  3106                           ;main.c: 243:     PORTBbits.RB6 = 0;
  3107     046F  1283               	bcf	3,5	;RP0=0, select bank0
  3108     0470  1303               	bcf	3,6	;RP1=0, select bank0
  3109     0471  1306               	bcf	6,6	;volatile
  3110     0472                     l1948:
  3111                           
  3112                           ;main.c: 244:     PORTBbits.RB5 = 0;
  3113     0472  1286               	bcf	6,5	;volatile
  3114     0473                     l1950:
  3115                           
  3116                           ;main.c: 245:     StatusChange = 0;
  3117     0473  01A8               	clrf	_StatusChange
  3118     0474  01A9               	clrf	_StatusChange+1
  3119     0475                     l286:
  3120     0475  0008               	return
  3121     0476                     __end_of_closeDoor:
  3122                           
  3123                           	psect	text3
  3124     0476                     __ptext3:	
  3125 ;; *************** function _LCD_init *****************
  3126 ;; Defined at:
  3127 ;;		line 18 in file "LCD_init.c"
  3128 ;; Parameters:    Size  Location     Type
  3129 ;;		None
  3130 ;; Auto vars:     Size  Location     Type
  3131 ;;		None
  3132 ;; Return value:  Size  Location     Type
  3133 ;;                  1    wreg      void 
  3134 ;; Registers used:
  3135 ;;		wreg, status,2, status,0, pclath, cstack
  3136 ;; Tracked objects:
  3137 ;;		On entry : 0/0
  3138 ;;		On exit  : 0/0
  3139 ;;		Unchanged: 0/0
  3140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3141 ;;      Params:         0       0       0       0       0
  3142 ;;      Locals:         0       0       0       0       0
  3143 ;;      Temps:          0       2       0       0       0
  3144 ;;      Totals:         0       2       0       0       0
  3145 ;;Total ram usage:        2 bytes
  3146 ;; Hardware stack levels used: 1
  3147 ;; Hardware stack levels required when called: 8
  3148 ;; This function calls:
  3149 ;;		_LCD_clear
  3150 ;;		_LCD_pulse_clock
  3151 ;;		_LCD_write_command
  3152 ;; This function is called by:
  3153 ;;		_picInit
  3154 ;; This function uses a non-reentrant model
  3155 ;;
  3156                           
  3157     0476                     _LCD_init:	
  3158                           ;psect for function _LCD_init
  3159                           
  3160     0476                     l1878:	
  3161                           ;incstack = 0
  3162 ;; hardware stack exceeded
  3163                           ; Regs used in _LCD_init: [wreg+status,2+status,0+pclath+cstack]
  3164                           
  3165                           
  3166                           ;LCD_init.c: 21:     TRISDbits.TRISD2 = 0; PORTDbits.RD2 = 0;
  3167     0476  1683               	bsf	3,5	;RP0=1, select bank1
  3168     0477  1303               	bcf	3,6	;RP1=0, select bank1
  3169     0478  1108               	bcf	8,2	;volatile
  3170     0479  1283               	bcf	3,5	;RP0=0, select bank0
  3171     047A  1303               	bcf	3,6	;RP1=0, select bank0
  3172     047B  1108               	bcf	8,2	;volatile
  3173                           
  3174                           ;LCD_init.c: 22:     TRISDbits.TRISD3 = 0; PORTDbits.RD3 = 0;
  3175     047C  1683               	bsf	3,5	;RP0=1, select bank1
  3176     047D  1303               	bcf	3,6	;RP1=0, select bank1
  3177     047E  1188               	bcf	8,3	;volatile
  3178     047F  1283               	bcf	3,5	;RP0=0, select bank0
  3179     0480  1303               	bcf	3,6	;RP1=0, select bank0
  3180     0481  1188               	bcf	8,3	;volatile
  3181                           
  3182                           ;LCD_init.c: 23:     TRISDbits.TRISD4 = 0; PORTDbits.RD4 = 0;
  3183     0482  1683               	bsf	3,5	;RP0=1, select bank1
  3184     0483  1303               	bcf	3,6	;RP1=0, select bank1
  3185     0484  1208               	bcf	8,4	;volatile
  3186     0485  1283               	bcf	3,5	;RP0=0, select bank0
  3187     0486  1303               	bcf	3,6	;RP1=0, select bank0
  3188     0487  1208               	bcf	8,4	;volatile
  3189                           
  3190                           ;LCD_init.c: 24:     TRISDbits.TRISD5 = 0; PORTDbits.RD5 = 0;
  3191     0488  1683               	bsf	3,5	;RP0=1, select bank1
  3192     0489  1303               	bcf	3,6	;RP1=0, select bank1
  3193     048A  1288               	bcf	8,5	;volatile
  3194     048B  1283               	bcf	3,5	;RP0=0, select bank0
  3195     048C  1303               	bcf	3,6	;RP1=0, select bank0
  3196     048D  1288               	bcf	8,5	;volatile
  3197                           
  3198                           ;LCD_init.c: 25:     TRISDbits.TRISD6 = 0; PORTDbits.RD6 = 0;
  3199     048E  1683               	bsf	3,5	;RP0=1, select bank1
  3200     048F  1303               	bcf	3,6	;RP1=0, select bank1
  3201     0490  1308               	bcf	8,6	;volatile
  3202     0491  1283               	bcf	3,5	;RP0=0, select bank0
  3203     0492  1303               	bcf	3,6	;RP1=0, select bank0
  3204     0493  1308               	bcf	8,6	;volatile
  3205                           
  3206                           ;LCD_init.c: 26:     TRISDbits.TRISD7 = 0; PORTDbits.RD7 = 0;
  3207     0494  1683               	bsf	3,5	;RP0=1, select bank1
  3208     0495  1303               	bcf	3,6	;RP1=0, select bank1
  3209     0496  1388               	bcf	8,7	;volatile
  3210     0497  1283               	bcf	3,5	;RP0=0, select bank0
  3211     0498  1303               	bcf	3,6	;RP1=0, select bank0
  3212     0499  1388               	bcf	8,7	;volatile
  3213     049A                     l1880:
  3214                           
  3215                           ;LCD_init.c: 33:     _delay((unsigned long)((60)*(4000000/4000.0)));
  3216     049A  304E               	movlw	78
  3217     049B  1283               	bcf	3,5	;RP0=0, select bank0
  3218     049C  1303               	bcf	3,6	;RP1=0, select bank0
  3219     049D  00D6               	movwf	??_LCD_init+1
  3220     049E  30EA               	movlw	234
  3221     049F  00D5               	movwf	??_LCD_init
  3222     04A0                     u2217:
  3223     04A0  0BD5               	decfsz	??_LCD_init,f
  3224     04A1  2CA0               	goto	u2217
  3225     04A2  0BD6               	decfsz	??_LCD_init+1,f
  3226     04A3  2CA0               	goto	u2217
  3227     04A4  0000               	nop
  3228     04A5                     l1882:
  3229                           
  3230                           ;LCD_init.c: 36:     PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; PORTDbits.
      +                          RD4 = 1;
  3231     04A5  1283               	bcf	3,5	;RP0=0, select bank0
  3232     04A6  1303               	bcf	3,6	;RP1=0, select bank0
  3233     04A7  1388               	bcf	8,7	;volatile
  3234     04A8                     l1884:
  3235     04A8  1308               	bcf	8,6	;volatile
  3236     04A9                     l1886:
  3237     04A9  1688               	bsf	8,5	;volatile
  3238     04AA                     l1888:
  3239     04AA  1608               	bsf	8,4	;volatile
  3240     04AB                     l1890:
  3241                           
  3242                           ;LCD_init.c: 39:     LCD_pulse_clock();
  3243     04AB  120A  118A  211F  120A  118A  	fcall	_LCD_pulse_clock
  3244     04B0                     l1892:
  3245                           
  3246                           ;LCD_init.c: 42:     _delay((unsigned long)((6)*(4000000/4000.0)));
  3247     04B0  3008               	movlw	8
  3248     04B1  1283               	bcf	3,5	;RP0=0, select bank0
  3249     04B2  1303               	bcf	3,6	;RP1=0, select bank0
  3250     04B3  00D6               	movwf	??_LCD_init+1
  3251     04B4  30C9               	movlw	201
  3252     04B5  00D5               	movwf	??_LCD_init
  3253     04B6                     u2227:
  3254     04B6  0BD5               	decfsz	??_LCD_init,f
  3255     04B7  2CB6               	goto	u2227
  3256     04B8  0BD6               	decfsz	??_LCD_init+1,f
  3257     04B9  2CB6               	goto	u2227
  3258                           
  3259                           ;LCD_init.c: 45:     LCD_pulse_clock();
  3260     04BA  120A  118A  211F  120A  118A  	fcall	_LCD_pulse_clock
  3261     04BF                     l1894:
  3262                           
  3263                           ;LCD_init.c: 48:     _delay((unsigned long)((150)*(4000000/4000000.0)));
  3264     04BF  3031               	movlw	49
  3265     04C0  1283               	bcf	3,5	;RP0=0, select bank0
  3266     04C1  1303               	bcf	3,6	;RP1=0, select bank0
  3267     04C2  00D5               	movwf	??_LCD_init
  3268     04C3                     u2237:
  3269     04C3  0BD5               	decfsz	??_LCD_init,f
  3270     04C4  2CC3               	goto	u2237
  3271     04C5                     l1896:
  3272                           
  3273                           ;LCD_init.c: 51:     LCD_pulse_clock();
  3274     04C5  120A  118A  211F  120A  118A  	fcall	_LCD_pulse_clock
  3275     04CA                     l1898:
  3276                           
  3277                           ;LCD_init.c: 54:     PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; PORTDbits.
      +                          RD4 = 0;
  3278     04CA  1283               	bcf	3,5	;RP0=0, select bank0
  3279     04CB  1303               	bcf	3,6	;RP1=0, select bank0
  3280     04CC  1388               	bcf	8,7	;volatile
  3281     04CD                     l1900:
  3282     04CD  1308               	bcf	8,6	;volatile
  3283     04CE                     l1902:
  3284     04CE  1688               	bsf	8,5	;volatile
  3285     04CF                     l1904:
  3286     04CF  1208               	bcf	8,4	;volatile
  3287     04D0                     l1906:
  3288                           
  3289                           ;LCD_init.c: 57:     LCD_pulse_clock();
  3290     04D0  120A  118A  211F  120A  118A  	fcall	_LCD_pulse_clock
  3291     04D5                     l1908:
  3292                           
  3293                           ;LCD_init.c: 60:     LCD_write_command(0x28);
  3294     04D5  3028               	movlw	40
  3295     04D6  120A  118A  2617  120A  118A  	fcall	_LCD_write_command
  3296     04DB                     l1910:
  3297                           
  3298                           ;LCD_init.c: 61:     LCD_write_command(LCD_display_control);
  3299     04DB  1283               	bcf	3,5	;RP0=0, select bank0
  3300     04DC  1303               	bcf	3,6	;RP1=0, select bank0
  3301     04DD  085E               	movf	_LCD_display_control,w
  3302     04DE  120A  118A  2617  120A  118A  	fcall	_LCD_write_command
  3303     04E3                     l1912:
  3304                           
  3305                           ;LCD_init.c: 62:     LCD_write_command(LCD_entry_mode);
  3306     04E3  087D               	movf	_LCD_entry_mode,w
  3307     04E4  120A  118A  2617  120A  118A  	fcall	_LCD_write_command
  3308     04E9                     l1914:
  3309                           
  3310                           ;LCD_init.c: 63:     LCD_clear();
  3311     04E9  120A  118A  2144  120A  118A  	fcall	_LCD_clear
  3312     04EE                     l103:
  3313     04EE  0008               	return
  3314     04EF                     __end_of_LCD_init:
  3315                           
  3316                           	psect	text4
  3317     015B                     __ptext4:	
  3318 ;; *************** function _InitUART *****************
  3319 ;; Defined at:
  3320 ;;		line 10 in file "esp8266.c"
  3321 ;; Parameters:    Size  Location     Type
  3322 ;;		None
  3323 ;; Auto vars:     Size  Location     Type
  3324 ;;		None
  3325 ;; Return value:  Size  Location     Type
  3326 ;;                  1    wreg      void 
  3327 ;; Registers used:
  3328 ;;		status,2
  3329 ;; Tracked objects:
  3330 ;;		On entry : 0/0
  3331 ;;		On exit  : 0/0
  3332 ;;		Unchanged: 0/0
  3333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3334 ;;      Params:         0       0       0       0       0
  3335 ;;      Locals:         0       0       0       0       0
  3336 ;;      Temps:          0       0       0       0       0
  3337 ;;      Totals:         0       0       0       0       0
  3338 ;;Total ram usage:        0 bytes
  3339 ;; Hardware stack levels used: 1
  3340 ;; Hardware stack levels required when called: 5
  3341 ;; This function calls:
  3342 ;;		Nothing
  3343 ;; This function is called by:
  3344 ;;		_picInit
  3345 ;; This function uses a non-reentrant model
  3346 ;;
  3347                           
  3348     015B                     _InitUART:	
  3349                           ;psect for function _InitUART
  3350                           
  3351     015B                     l1952:	
  3352                           ;incstack = 0
  3353                           ; Regs used in _InitUART: [status,2]
  3354                           
  3355                           
  3356                           ;esp8266.c: 13:     TRISC6 = 0;
  3357     015B  1683               	bsf	3,5	;RP0=1, select bank1
  3358     015C  1303               	bcf	3,6	;RP1=0, select bank1
  3359     015D  1307               	bcf	7,6	;volatile
  3360                           
  3361                           ;esp8266.c: 14:     TRISC7 = 1;
  3362     015E  1787               	bsf	7,7	;volatile
  3363                           
  3364                           ;esp8266.c: 16:     TXSTAbits.BRGH = 1;
  3365     015F  1518               	bsf	24,2	;volatile
  3366     0160                     l1954:
  3367                           
  3368                           ;esp8266.c: 17:     SPBRG = 0;
  3369     0160  0199               	clrf	25	;volatile
  3370     0161                     l1956:
  3371                           
  3372                           ;esp8266.c: 19:     TXSTAbits.SYNC = 0;
  3373     0161  1218               	bcf	24,4	;volatile
  3374     0162                     l1958:
  3375                           
  3376                           ;esp8266.c: 20:     RCSTAbits.SPEN = 1;
  3377     0162  1283               	bcf	3,5	;RP0=0, select bank0
  3378     0163  1303               	bcf	3,6	;RP1=0, select bank0
  3379     0164  1798               	bsf	24,7	;volatile
  3380     0165                     l1960:
  3381                           
  3382                           ;esp8266.c: 22:     TXSTAbits.TXEN = 1;
  3383     0165  1683               	bsf	3,5	;RP0=1, select bank1
  3384     0166  1303               	bcf	3,6	;RP1=0, select bank1
  3385     0167  1698               	bsf	24,5	;volatile
  3386     0168                     l1962:
  3387                           
  3388                           ;esp8266.c: 23:     TXSTAbits.TX9 = 0;
  3389     0168  1318               	bcf	24,6	;volatile
  3390     0169                     l1964:
  3391                           
  3392                           ;esp8266.c: 25:     RCSTAbits.CREN = 1;
  3393     0169  1283               	bcf	3,5	;RP0=0, select bank0
  3394     016A  1303               	bcf	3,6	;RP1=0, select bank0
  3395     016B  1618               	bsf	24,4	;volatile
  3396     016C                     l1966:
  3397                           
  3398                           ;esp8266.c: 27:     RCSTAbits.RX9 = 0;
  3399     016C  1318               	bcf	24,6	;volatile
  3400     016D                     l1968:
  3401                           
  3402                           ;esp8266.c: 30:     PIE1bits.RCIE = 1;
  3403     016D  1683               	bsf	3,5	;RP0=1, select bank1
  3404     016E  1303               	bcf	3,6	;RP1=0, select bank1
  3405     016F  168C               	bsf	12,5	;volatile
  3406     0170                     l1970:
  3407                           
  3408                           ;esp8266.c: 31:     PEIE = 1;
  3409     0170  170B               	bsf	11,6	;volatile
  3410     0171                     l1972:
  3411                           
  3412                           ;esp8266.c: 32:     GIE = 1;
  3413     0171  178B               	bsf	11,7	;volatile
  3414     0172                     l328:
  3415     0172  0008               	return
  3416     0173                     __end_of_InitUART:
  3417                           
  3418                           	psect	text5
  3419     0281                     __ptext5:	
  3420 ;; *************** function _openDoor *****************
  3421 ;; Defined at:
  3422 ;;		line 208 in file "main.c"
  3423 ;; Parameters:    Size  Location     Type
  3424 ;;		None
  3425 ;; Auto vars:     Size  Location     Type
  3426 ;;		None
  3427 ;; Return value:  Size  Location     Type
  3428 ;;                  1    wreg      void 
  3429 ;; Registers used:
  3430 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3431 ;; Tracked objects:
  3432 ;;		On entry : 0/0
  3433 ;;		On exit  : 0/0
  3434 ;;		Unchanged: 0/0
  3435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3436 ;;      Params:         0       0       0       0       0
  3437 ;;      Locals:         0       0       0       0       0
  3438 ;;      Temps:          0       3       0       0       0
  3439 ;;      Totals:         0       3       0       0       0
  3440 ;;Total ram usage:        3 bytes
  3441 ;; Hardware stack levels used: 1
  3442 ;; Hardware stack levels required when called: 8
  3443 ;; This function calls:
  3444 ;;		_LCD_clear
  3445 ;;		_LCD_cursor_set
  3446 ;;		_LCD_write_string
  3447 ;; This function is called by:
  3448 ;;		_main
  3449 ;; This function uses a non-reentrant model
  3450 ;;
  3451                           
  3452     0281                     _openDoor:	
  3453                           ;psect for function _openDoor
  3454                           
  3455     0281                     l2076:	
  3456                           ;incstack = 0
  3457 ;; hardware stack exceeded
  3458                           ; Regs used in _openDoor: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3459                           
  3460                           
  3461                           ;main.c: 209:     LCD_clear();
  3462     0281  120A  118A  2144  120A  118A  	fcall	_LCD_clear
  3463     0286                     l2078:
  3464                           
  3465                           ;main.c: 210:     doorStatus = 1;
  3466     0286  3001               	movlw	1
  3467     0287  1283               	bcf	3,5	;RP0=0, select bank0
  3468     0288  1303               	bcf	3,6	;RP1=0, select bank0
  3469     0289  00AA               	movwf	_doorStatus
  3470     028A  3000               	movlw	0
  3471     028B  00AB               	movwf	_doorStatus+1
  3472     028C                     l2080:
  3473                           
  3474                           ;main.c: 211:     LCD_cursor_set(1, 1);
  3475     028C  01D4               	clrf	LCD_cursor_set@column
  3476     028D  0AD4               	incf	LCD_cursor_set@column,f
  3477     028E  3001               	movlw	1
  3478     028F  120A  118A  2250  120A  118A  	fcall	_LCD_cursor_set
  3479     0294                     l2082:
  3480                           
  3481                           ;main.c: 212:     LCD_write_string("Door Opening");
  3482     0294  3033               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  3483     0295  120A  118A  21CF  120A  118A  	fcall	_LCD_write_string
  3484     029A                     l2084:
  3485                           
  3486                           ;main.c: 213:     PORTBbits.RB6 = 1;
  3487     029A  1283               	bcf	3,5	;RP0=0, select bank0
  3488     029B  1303               	bcf	3,6	;RP1=0, select bank0
  3489     029C  1706               	bsf	6,6	;volatile
  3490     029D                     l2086:
  3491                           
  3492                           ;main.c: 214:     PORTBbits.RB5 = 0;
  3493     029D  1286               	bcf	6,5	;volatile
  3494     029E                     l2088:
  3495                           
  3496                           ;main.c: 215:     _delay((unsigned long)((750)*(4000000/4000.0)));
  3497     029E  3004               	movlw	4
  3498     029F  1283               	bcf	3,5	;RP0=0, select bank0
  3499     02A0  1303               	bcf	3,6	;RP1=0, select bank0
  3500     02A1  00D8               	movwf	??_openDoor+2
  3501     02A2  30CF               	movlw	207
  3502     02A3  00D7               	movwf	??_openDoor+1
  3503     02A4  3001               	movlw	1
  3504     02A5  00D6               	movwf	??_openDoor
  3505     02A6                     u2247:
  3506     02A6  0BD6               	decfsz	??_openDoor,f
  3507     02A7  2AA6               	goto	u2247
  3508     02A8  0BD7               	decfsz	??_openDoor+1,f
  3509     02A9  2AA6               	goto	u2247
  3510     02AA  0BD8               	decfsz	??_openDoor+2,f
  3511     02AB  2AA6               	goto	u2247
  3512     02AC                     l2090:
  3513                           
  3514                           ;main.c: 216:     LCD_clear();
  3515     02AC  120A  118A  2144  120A  118A  	fcall	_LCD_clear
  3516     02B1                     l2092:
  3517                           
  3518                           ;main.c: 217:     LCD_cursor_set(1, 1);
  3519     02B1  1283               	bcf	3,5	;RP0=0, select bank0
  3520     02B2  1303               	bcf	3,6	;RP1=0, select bank0
  3521     02B3  01D4               	clrf	LCD_cursor_set@column
  3522     02B4  0AD4               	incf	LCD_cursor_set@column,f
  3523     02B5  3001               	movlw	1
  3524     02B6  120A  118A  2250  120A  118A  	fcall	_LCD_cursor_set
  3525                           
  3526                           ;main.c: 218:     LCD_write_string("Door Opened");
  3527     02BB  304D               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  3528     02BC  120A  118A  21CF  120A  118A  	fcall	_LCD_write_string
  3529     02C1                     l2094:
  3530                           
  3531                           ;main.c: 219:     PORTBbits.RB6 = 1;
  3532     02C1  1283               	bcf	3,5	;RP0=0, select bank0
  3533     02C2  1303               	bcf	3,6	;RP1=0, select bank0
  3534     02C3  1706               	bsf	6,6	;volatile
  3535     02C4                     l2096:
  3536                           
  3537                           ;main.c: 220:     PORTBbits.RB5 = 1;
  3538     02C4  1686               	bsf	6,5	;volatile
  3539     02C5                     l2098:
  3540                           
  3541                           ;main.c: 221:     StatusChange = 0;
  3542     02C5  01A8               	clrf	_StatusChange
  3543     02C6  01A9               	clrf	_StatusChange+1
  3544     02C7                     l279:
  3545     02C7  0008               	return
  3546     02C8                     __end_of_openDoor:
  3547                           
  3548                           	psect	text6
  3549     01CF                     __ptext6:	
  3550 ;; *************** function _LCD_write_string *****************
  3551 ;; Defined at:
  3552 ;;		line 9 in file "LCD_write_string.c"
  3553 ;; Parameters:    Size  Location     Type
  3554 ;;  string          1    wreg     PTR unsigned char 
  3555 ;;		 -> STR_9(17), STR_6(12), STR_5(13), STR_4(12), 
  3556 ;;		 -> STR_3(12), STR_2(13), STR_1(16), 
  3557 ;; Auto vars:     Size  Location     Type
  3558 ;;  string          1    9[BANK0 ] PTR unsigned char 
  3559 ;;		 -> STR_9(17), STR_6(12), STR_5(13), STR_4(12), 
  3560 ;;		 -> STR_3(12), STR_2(13), STR_1(16), 
  3561 ;;  i               1    8[BANK0 ] unsigned char 
  3562 ;; Return value:  Size  Location     Type
  3563 ;;                  1    wreg      void 
  3564 ;; Registers used:
  3565 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3566 ;; Tracked objects:
  3567 ;;		On entry : 0/0
  3568 ;;		On exit  : 0/0
  3569 ;;		Unchanged: 0/0
  3570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3571 ;;      Params:         0       0       0       0       0
  3572 ;;      Locals:         0       2       0       0       0
  3573 ;;      Temps:          0       0       0       0       0
  3574 ;;      Totals:         0       2       0       0       0
  3575 ;;Total ram usage:        2 bytes
  3576 ;; Hardware stack levels used: 1
  3577 ;; Hardware stack levels required when called: 7
  3578 ;; This function calls:
  3579 ;;		_LCD_write_data
  3580 ;; This function is called by:
  3581 ;;		_picInit
  3582 ;;		_openDoor
  3583 ;;		_closeDoor
  3584 ;; This function uses a non-reentrant model
  3585 ;;
  3586                           
  3587     01CF                     _LCD_write_string:	
  3588                           ;psect for function _LCD_write_string
  3589                           
  3590                           
  3591                           ;incstack = 0
  3592 ;; hardware stack exceeded
  3593                           ; Regs used in _LCD_write_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3594                           ;LCD_write_string@string stored from wreg
  3595     01CF  1283               	bcf	3,5	;RP0=0, select bank0
  3596     01D0  1303               	bcf	3,6	;RP1=0, select bank0
  3597     01D1  00D5               	movwf	LCD_write_string@string
  3598     01D2                     l1794:
  3599                           
  3600                           ;LCD_write_string.c: 12:     for(uint8_t i=0 ; string[i] != '\0' ; i++){
  3601     01D2  01D4               	clrf	LCD_write_string@i
  3602     01D3  29E7               	goto	l1800
  3603     01D4                     l1796:
  3604                           
  3605                           ;LCD_write_string.c: 13:         LCD_write_data(string[i]);
  3606     01D4  0854               	movf	LCD_write_string@i,w
  3607     01D5  0755               	addwf	LCD_write_string@string,w
  3608     01D6  0084               	movwf	4
  3609     01D7  120A  118A  2015  120A  118A  	fcall	stringdir
  3610     01DC  120A  118A  26AB  120A  118A  	fcall	_LCD_write_data
  3611     01E1                     l1798:
  3612                           
  3613                           ;LCD_write_string.c: 14:     }
  3614     01E1  3001               	movlw	1
  3615     01E2  00FF               	movwf	btemp+1
  3616     01E3  087F               	movf	btemp+1,w
  3617     01E4  1283               	bcf	3,5	;RP0=0, select bank0
  3618     01E5  1303               	bcf	3,6	;RP1=0, select bank0
  3619     01E6  07D4               	addwf	LCD_write_string@i,f
  3620     01E7                     l1800:
  3621     01E7  0854               	movf	LCD_write_string@i,w
  3622     01E8  0755               	addwf	LCD_write_string@string,w
  3623     01E9  0084               	movwf	4
  3624     01EA  120A  118A  2015  120A  118A  	fcall	stringdir
  3625     01EF  3A00               	xorlw	0
  3626     01F0  1D03               	skipz
  3627     01F1  29F3               	goto	u1421
  3628     01F2  29F4               	goto	u1420
  3629     01F3                     u1421:
  3630     01F3  29D4               	goto	l1796
  3631     01F4                     u1420:
  3632     01F4                     l171:
  3633     01F4  0008               	return
  3634     01F5                     __end_of_LCD_write_string:
  3635                           
  3636                           	psect	text7
  3637     06AB                     __ptext7:	
  3638 ;; *************** function _LCD_write_data *****************
  3639 ;; Defined at:
  3640 ;;		line 9 in file "LCD_write_data.c"
  3641 ;; Parameters:    Size  Location     Type
  3642 ;;  data            1    wreg     unsigned char 
  3643 ;; Auto vars:     Size  Location     Type
  3644 ;;  data            1    7[BANK0 ] unsigned char 
  3645 ;; Return value:  Size  Location     Type
  3646 ;;                  1    wreg      void 
  3647 ;; Registers used:
  3648 ;;		wreg, status,2, status,0, pclath, cstack
  3649 ;; Tracked objects:
  3650 ;;		On entry : 0/0
  3651 ;;		On exit  : 0/0
  3652 ;;		Unchanged: 0/0
  3653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3654 ;;      Params:         0       0       0       0       0
  3655 ;;      Locals:         0       1       0       0       0
  3656 ;;      Temps:          0       2       0       0       0
  3657 ;;      Totals:         0       3       0       0       0
  3658 ;;Total ram usage:        3 bytes
  3659 ;; Hardware stack levels used: 1
  3660 ;; Hardware stack levels required when called: 6
  3661 ;; This function calls:
  3662 ;;		_LCD_pulse_clock
  3663 ;; This function is called by:
  3664 ;;		_LCD_write_string
  3665 ;;		_LCD_add_character
  3666 ;;		_LCD_write_char
  3667 ;;		_LCD_write_float
  3668 ;;		_LCD_write_variable
  3669 ;; This function uses a non-reentrant model
  3670 ;;
  3671                           
  3672     06AB                     _LCD_write_data:	
  3673                           ;psect for function _LCD_write_data
  3674                           
  3675                           
  3676                           ;incstack = 0
  3677 ;; hardware stack exceeded
  3678                           ; Regs used in _LCD_write_data: [wreg+status,2+status,0+pclath+cstack]
  3679                           ;LCD_write_data@data stored from wreg
  3680     06AB  1283               	bcf	3,5	;RP0=0, select bank0
  3681     06AC  1303               	bcf	3,6	;RP1=0, select bank0
  3682     06AD  00D3               	movwf	LCD_write_data@data
  3683     06AE                     l1748:
  3684                           
  3685                           ;LCD_write_data.c: 11:     PORTDbits.RD2 = 1;
  3686     06AE  1508               	bsf	8,2	;volatile
  3687     06AF                     l1750:
  3688                           
  3689                           ;LCD_write_data.c: 14:     PORTDbits.RD7 = (data & 0b10000000) >> 7;
  3690     06AF  0853               	movf	LCD_write_data@data,w
  3691     06B0  00D1               	movwf	??_LCD_write_data
  3692     06B1  3007               	movlw	7
  3693     06B2                     u1325:
  3694     06B2  1003               	clrc
  3695     06B3  0CD1               	rrf	??_LCD_write_data,f
  3696     06B4  3EFF               	addlw	-1
  3697     06B5  1D03               	skipz
  3698     06B6  2EB2               	goto	u1325
  3699     06B7  0851               	movf	??_LCD_write_data,w
  3700     06B8  3901               	andlw	1
  3701     06B9  00D2               	movwf	??_LCD_write_data+1
  3702     06BA  0CD2               	rrf	??_LCD_write_data+1,f
  3703     06BB  0CD2               	rrf	??_LCD_write_data+1,f
  3704     06BC  0808               	movf	8,w	;volatile
  3705     06BD  0652               	xorwf	??_LCD_write_data+1,w
  3706     06BE  397F               	andlw	-129
  3707     06BF  0652               	xorwf	??_LCD_write_data+1,w
  3708     06C0  0088               	movwf	8	;volatile
  3709                           
  3710                           ;LCD_write_data.c: 15:     PORTDbits.RD6 = (data & 0b01000000) >> 6;
  3711     06C1  0853               	movf	LCD_write_data@data,w
  3712     06C2  00D1               	movwf	??_LCD_write_data
  3713     06C3  3006               	movlw	6
  3714     06C4                     u1335:
  3715     06C4  1003               	clrc
  3716     06C5  0CD1               	rrf	??_LCD_write_data,f
  3717     06C6  3EFF               	addlw	-1
  3718     06C7  1D03               	skipz
  3719     06C8  2EC4               	goto	u1335
  3720     06C9  0851               	movf	??_LCD_write_data,w
  3721     06CA  3901               	andlw	1
  3722     06CB  00D2               	movwf	??_LCD_write_data+1
  3723     06CC  0ED2               	swapf	??_LCD_write_data+1,f
  3724     06CD  0DD2               	rlf	??_LCD_write_data+1,f
  3725     06CE  0DD2               	rlf	??_LCD_write_data+1,f
  3726     06CF  0808               	movf	8,w	;volatile
  3727     06D0  0652               	xorwf	??_LCD_write_data+1,w
  3728     06D1  39BF               	andlw	-65
  3729     06D2  0652               	xorwf	??_LCD_write_data+1,w
  3730     06D3  0088               	movwf	8	;volatile
  3731                           
  3732                           ;LCD_write_data.c: 16:     PORTDbits.RD5 = (data & 0b00100000) >> 5;
  3733     06D4  0853               	movf	LCD_write_data@data,w
  3734     06D5  00D1               	movwf	??_LCD_write_data
  3735     06D6  3005               	movlw	5
  3736     06D7                     u1345:
  3737     06D7  1003               	clrc
  3738     06D8  0CD1               	rrf	??_LCD_write_data,f
  3739     06D9  3EFF               	addlw	-1
  3740     06DA  1D03               	skipz
  3741     06DB  2ED7               	goto	u1345
  3742     06DC  0851               	movf	??_LCD_write_data,w
  3743     06DD  3901               	andlw	1
  3744     06DE  00D2               	movwf	??_LCD_write_data+1
  3745     06DF  0ED2               	swapf	??_LCD_write_data+1,f
  3746     06E0  0DD2               	rlf	??_LCD_write_data+1,f
  3747     06E1  0808               	movf	8,w	;volatile
  3748     06E2  0652               	xorwf	??_LCD_write_data+1,w
  3749     06E3  39DF               	andlw	-33
  3750     06E4  0652               	xorwf	??_LCD_write_data+1,w
  3751     06E5  0088               	movwf	8	;volatile
  3752                           
  3753                           ;LCD_write_data.c: 17:     PORTDbits.RD4 = (data & 0b00010000) >> 4;
  3754     06E6  0853               	movf	LCD_write_data@data,w
  3755     06E7  00D1               	movwf	??_LCD_write_data
  3756     06E8  3004               	movlw	4
  3757     06E9                     u1355:
  3758     06E9  1003               	clrc
  3759     06EA  0CD1               	rrf	??_LCD_write_data,f
  3760     06EB  3EFF               	addlw	-1
  3761     06EC  1D03               	skipz
  3762     06ED  2EE9               	goto	u1355
  3763     06EE  0851               	movf	??_LCD_write_data,w
  3764     06EF  3901               	andlw	1
  3765     06F0  00D2               	movwf	??_LCD_write_data+1
  3766     06F1  0ED2               	swapf	??_LCD_write_data+1,f
  3767     06F2  0808               	movf	8,w	;volatile
  3768     06F3  0652               	xorwf	??_LCD_write_data+1,w
  3769     06F4  39EF               	andlw	-17
  3770     06F5  0652               	xorwf	??_LCD_write_data+1,w
  3771     06F6  0088               	movwf	8	;volatile
  3772     06F7                     l1752:
  3773                           
  3774                           ;LCD_write_data.c: 20:     LCD_pulse_clock();
  3775     06F7  120A  118A  211F  120A  118A  	fcall	_LCD_pulse_clock
  3776     06FC                     l1754:
  3777                           
  3778                           ;LCD_write_data.c: 23:     PORTDbits.RD7 = (data & 0b00001000) >> 3;
  3779     06FC  1283               	bcf	3,5	;RP0=0, select bank0
  3780     06FD  1303               	bcf	3,6	;RP1=0, select bank0
  3781     06FE  0853               	movf	LCD_write_data@data,w
  3782     06FF  00D1               	movwf	??_LCD_write_data
  3783     0700  3003               	movlw	3
  3784     0701                     u1365:
  3785     0701  1003               	clrc
  3786     0702  0CD1               	rrf	??_LCD_write_data,f
  3787     0703  3EFF               	addlw	-1
  3788     0704  1D03               	skipz
  3789     0705  2F01               	goto	u1365
  3790     0706  0851               	movf	??_LCD_write_data,w
  3791     0707  3901               	andlw	1
  3792     0708  00D2               	movwf	??_LCD_write_data+1
  3793     0709  0CD2               	rrf	??_LCD_write_data+1,f
  3794     070A  0CD2               	rrf	??_LCD_write_data+1,f
  3795     070B  0808               	movf	8,w	;volatile
  3796     070C  0652               	xorwf	??_LCD_write_data+1,w
  3797     070D  397F               	andlw	-129
  3798     070E  0652               	xorwf	??_LCD_write_data+1,w
  3799     070F  0088               	movwf	8	;volatile
  3800     0710                     l1756:
  3801                           
  3802                           ;LCD_write_data.c: 24:     PORTDbits.RD6 = (data & 0b00000100) >> 2;
  3803     0710  0853               	movf	LCD_write_data@data,w
  3804     0711  00D1               	movwf	??_LCD_write_data
  3805     0712  3002               	movlw	2
  3806     0713                     u1375:
  3807     0713  1003               	clrc
  3808     0714  0CD1               	rrf	??_LCD_write_data,f
  3809     0715  3EFF               	addlw	-1
  3810     0716  1D03               	skipz
  3811     0717  2F13               	goto	u1375
  3812     0718  0851               	movf	??_LCD_write_data,w
  3813     0719  3901               	andlw	1
  3814     071A  00D2               	movwf	??_LCD_write_data+1
  3815     071B  0ED2               	swapf	??_LCD_write_data+1,f
  3816     071C  0DD2               	rlf	??_LCD_write_data+1,f
  3817     071D  0DD2               	rlf	??_LCD_write_data+1,f
  3818     071E  0808               	movf	8,w	;volatile
  3819     071F  0652               	xorwf	??_LCD_write_data+1,w
  3820     0720  39BF               	andlw	-65
  3821     0721  0652               	xorwf	??_LCD_write_data+1,w
  3822     0722  0088               	movwf	8	;volatile
  3823     0723                     l1758:
  3824                           
  3825                           ;LCD_write_data.c: 25:     PORTDbits.RD5 = (data & 0b00000010) >> 1;
  3826     0723  0853               	movf	LCD_write_data@data,w
  3827     0724  00D1               	movwf	??_LCD_write_data
  3828     0725  1003               	clrc
  3829     0726  0C51               	rrf	??_LCD_write_data,w
  3830     0727  3901               	andlw	1
  3831     0728  00D2               	movwf	??_LCD_write_data+1
  3832     0729  0ED2               	swapf	??_LCD_write_data+1,f
  3833     072A  0DD2               	rlf	??_LCD_write_data+1,f
  3834     072B  0808               	movf	8,w	;volatile
  3835     072C  0652               	xorwf	??_LCD_write_data+1,w
  3836     072D  39DF               	andlw	-33
  3837     072E  0652               	xorwf	??_LCD_write_data+1,w
  3838     072F  0088               	movwf	8	;volatile
  3839     0730                     l1760:
  3840                           
  3841                           ;LCD_write_data.c: 26:     PORTDbits.RD4 = (data & 0b00000001) ;
  3842     0730  0853               	movf	LCD_write_data@data,w
  3843     0731  3901               	andlw	1
  3844     0732  00D1               	movwf	??_LCD_write_data
  3845     0733  0ED1               	swapf	??_LCD_write_data,f
  3846     0734  0808               	movf	8,w	;volatile
  3847     0735  0651               	xorwf	??_LCD_write_data,w
  3848     0736  39EF               	andlw	-17
  3849     0737  0651               	xorwf	??_LCD_write_data,w
  3850     0738  0088               	movwf	8	;volatile
  3851     0739                     l1762:
  3852                           
  3853                           ;LCD_write_data.c: 29:     LCD_pulse_clock();
  3854     0739  120A  118A  211F  120A  118A  	fcall	_LCD_pulse_clock
  3855     073E                     l146:
  3856     073E  0008               	return
  3857     073F                     __end_of_LCD_write_data:
  3858                           
  3859                           	psect	text8
  3860     0250                     __ptext8:	
  3861 ;; *************** function _LCD_cursor_set *****************
  3862 ;; Defined at:
  3863 ;;		line 9 in file "LCD_cursor_set.c"
  3864 ;; Parameters:    Size  Location     Type
  3865 ;;  row             1    wreg     unsigned char 
  3866 ;;  column          1    8[BANK0 ] unsigned char 
  3867 ;; Auto vars:     Size  Location     Type
  3868 ;;  row             1    9[BANK0 ] unsigned char 
  3869 ;; Return value:  Size  Location     Type
  3870 ;;                  1    wreg      void 
  3871 ;; Registers used:
  3872 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3873 ;; Tracked objects:
  3874 ;;		On entry : 0/0
  3875 ;;		On exit  : 0/0
  3876 ;;		Unchanged: 0/0
  3877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3878 ;;      Params:         0       1       0       0       0
  3879 ;;      Locals:         0       1       0       0       0
  3880 ;;      Temps:          0       0       0       0       0
  3881 ;;      Totals:         0       2       0       0       0
  3882 ;;Total ram usage:        2 bytes
  3883 ;; Hardware stack levels used: 1
  3884 ;; Hardware stack levels required when called: 7
  3885 ;; This function calls:
  3886 ;;		_LCD_write_command
  3887 ;; This function is called by:
  3888 ;;		_main
  3889 ;;		_picInit
  3890 ;;		_openDoor
  3891 ;;		_closeDoor
  3892 ;;		_LCD_add_character
  3893 ;; This function uses a non-reentrant model
  3894 ;;
  3895                           
  3896     0250                     _LCD_cursor_set:	
  3897                           ;psect for function _LCD_cursor_set
  3898                           
  3899                           
  3900                           ;incstack = 0
  3901 ;; hardware stack exceeded
  3902                           ; Regs used in _LCD_cursor_set: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3903                           ;LCD_cursor_set@row stored from wreg
  3904     0250  1283               	bcf	3,5	;RP0=0, select bank0
  3905     0251  1303               	bcf	3,6	;RP1=0, select bank0
  3906     0252  00D5               	movwf	LCD_cursor_set@row
  3907     0253                     l1770:
  3908                           
  3909                           ;LCD_cursor_set.c: 12:     if(row == 1) column += (0x80 - 1);
  3910     0253  0355               	decf	LCD_cursor_set@row,w
  3911     0254  1D03               	btfss	3,2
  3912     0255  2A57               	goto	u1381
  3913     0256  2A58               	goto	u1380
  3914     0257                     u1381:
  3915     0257  2A5C               	goto	l1774
  3916     0258                     u1380:
  3917     0258                     l1772:
  3918     0258  307F               	movlw	127
  3919     0259  00FF               	movwf	btemp+1
  3920     025A  087F               	movf	btemp+1,w
  3921     025B  07D4               	addwf	LCD_cursor_set@column,f
  3922     025C                     l1774:
  3923                           
  3924                           ;LCD_cursor_set.c: 13:     if(row == 2) column += (0xC0 - 1);
  3925     025C  3002               	movlw	2
  3926     025D  0655               	xorwf	LCD_cursor_set@row,w
  3927     025E  1D03               	btfss	3,2
  3928     025F  2A61               	goto	u1391
  3929     0260  2A62               	goto	u1390
  3930     0261                     u1391:
  3931     0261  2A66               	goto	l1778
  3932     0262                     u1390:
  3933     0262                     l1776:
  3934     0262  30BF               	movlw	191
  3935     0263  00FF               	movwf	btemp+1
  3936     0264  087F               	movf	btemp+1,w
  3937     0265  07D4               	addwf	LCD_cursor_set@column,f
  3938     0266                     l1778:
  3939                           
  3940                           ;LCD_cursor_set.c: 14:     if(row == 3) column += (0x80 + 19);
  3941     0266  3003               	movlw	3
  3942     0267  0655               	xorwf	LCD_cursor_set@row,w
  3943     0268  1D03               	btfss	3,2
  3944     0269  2A6B               	goto	u1401
  3945     026A  2A6C               	goto	u1400
  3946     026B                     u1401:
  3947     026B  2A70               	goto	l1782
  3948     026C                     u1400:
  3949     026C                     l1780:
  3950     026C  3093               	movlw	147
  3951     026D  00FF               	movwf	btemp+1
  3952     026E  087F               	movf	btemp+1,w
  3953     026F  07D4               	addwf	LCD_cursor_set@column,f
  3954     0270                     l1782:
  3955                           
  3956                           ;LCD_cursor_set.c: 15:     if(row == 4) column += (0xC0 + 19);
  3957     0270  3004               	movlw	4
  3958     0271  0655               	xorwf	LCD_cursor_set@row,w
  3959     0272  1D03               	btfss	3,2
  3960     0273  2A75               	goto	u1411
  3961     0274  2A76               	goto	u1410
  3962     0275                     u1411:
  3963     0275  2A7A               	goto	l1786
  3964     0276                     u1410:
  3965     0276                     l1784:
  3966     0276  30D3               	movlw	211
  3967     0277  00FF               	movwf	btemp+1
  3968     0278  087F               	movf	btemp+1,w
  3969     0279  07D4               	addwf	LCD_cursor_set@column,f
  3970     027A                     l1786:
  3971                           
  3972                           ;LCD_cursor_set.c: 18:    LCD_write_command(column);
  3973     027A  0854               	movf	LCD_cursor_set@column,w
  3974     027B  120A  118A  2617  120A  118A  	fcall	_LCD_write_command
  3975     0280                     l84:
  3976     0280  0008               	return
  3977     0281                     __end_of_LCD_cursor_set:
  3978                           
  3979                           	psect	text9
  3980     0144                     __ptext9:	
  3981 ;; *************** function _LCD_clear *****************
  3982 ;; Defined at:
  3983 ;;		line 7 in file "LCD_clear.c"
  3984 ;; Parameters:    Size  Location     Type
  3985 ;;		None
  3986 ;; Auto vars:     Size  Location     Type
  3987 ;;		None
  3988 ;; Return value:  Size  Location     Type
  3989 ;;                  1    wreg      void 
  3990 ;; Registers used:
  3991 ;;		wreg, status,2, status,0, pclath, cstack
  3992 ;; Tracked objects:
  3993 ;;		On entry : 0/0
  3994 ;;		On exit  : 0/0
  3995 ;;		Unchanged: 0/0
  3996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3997 ;;      Params:         0       0       0       0       0
  3998 ;;      Locals:         0       0       0       0       0
  3999 ;;      Temps:          0       1       0       0       0
  4000 ;;      Totals:         0       1       0       0       0
  4001 ;;Total ram usage:        1 bytes
  4002 ;; Hardware stack levels used: 1
  4003 ;; Hardware stack levels required when called: 7
  4004 ;; This function calls:
  4005 ;;		_LCD_write_command
  4006 ;; This function is called by:
  4007 ;;		_LCD_init
  4008 ;;		_picInit
  4009 ;;		_openDoor
  4010 ;;		_closeDoor
  4011 ;; This function uses a non-reentrant model
  4012 ;;
  4013                           
  4014     0144                     _LCD_clear:	
  4015                           ;psect for function _LCD_clear
  4016                           
  4017     0144                     l1788:	
  4018                           ;incstack = 0
  4019 ;; hardware stack exceeded
  4020                           ; Regs used in _LCD_clear: [wreg+status,2+status,0+pclath+cstack]
  4021                           
  4022                           
  4023                           ;LCD_clear.c: 10:     LCD_write_command(0x01);
  4024     0144  3001               	movlw	1
  4025     0145  120A  118A  2617  120A  118A  	fcall	_LCD_write_command
  4026     014A                     l1790:
  4027                           
  4028                           ;LCD_clear.c: 13:     _delay((unsigned long)(((1600 - 40))*(4000000/4000000.0)));
  4029     014A  30DE               	movlw	222
  4030     014B  1283               	bcf	3,5	;RP0=0, select bank0
  4031     014C  1303               	bcf	3,6	;RP1=0, select bank0
  4032     014D  00D4               	movwf	??_LCD_clear
  4033     014E                     u2257:
  4034     014E  294F               	nop2
  4035     014F  2950               	nop2
  4036     0150  0BD4               	decfsz	??_LCD_clear,f
  4037     0151  294E               	goto	u2257
  4038     0152  2953               	nop2
  4039     0153  0000               	nop
  4040     0154                     l1792:
  4041                           
  4042                           ;LCD_clear.c: 16:     LCD_write_command(LCD_entry_mode);
  4043     0154  087D               	movf	_LCD_entry_mode,w
  4044     0155  120A  118A  2617  120A  118A  	fcall	_LCD_write_command
  4045     015A                     l20:
  4046     015A  0008               	return
  4047     015B                     __end_of_LCD_clear:
  4048                           
  4049                           	psect	text10
  4050     0617                     __ptext10:	
  4051 ;; *************** function _LCD_write_command *****************
  4052 ;; Defined at:
  4053 ;;		line 9 in file "LCD_write_command.c"
  4054 ;; Parameters:    Size  Location     Type
  4055 ;;  command         1    wreg     unsigned char 
  4056 ;; Auto vars:     Size  Location     Type
  4057 ;;  command         1    7[BANK0 ] unsigned char 
  4058 ;; Return value:  Size  Location     Type
  4059 ;;                  1    wreg      void 
  4060 ;; Registers used:
  4061 ;;		wreg, status,2, status,0, pclath, cstack
  4062 ;; Tracked objects:
  4063 ;;		On entry : 0/0
  4064 ;;		On exit  : 0/0
  4065 ;;		Unchanged: 0/0
  4066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4067 ;;      Params:         0       0       0       0       0
  4068 ;;      Locals:         0       1       0       0       0
  4069 ;;      Temps:          0       2       0       0       0
  4070 ;;      Totals:         0       3       0       0       0
  4071 ;;Total ram usage:        3 bytes
  4072 ;; Hardware stack levels used: 1
  4073 ;; Hardware stack levels required when called: 6
  4074 ;; This function calls:
  4075 ;;		_LCD_pulse_clock
  4076 ;; This function is called by:
  4077 ;;		_LCD_clear
  4078 ;;		_LCD_cursor_set
  4079 ;;		_LCD_init
  4080 ;;		_LCD_add_character
  4081 ;;		_LCD_configure_cursor_blink
  4082 ;;		_LCD_configure_cursor_display
  4083 ;;		_LCD_configure_entry_id
  4084 ;;		_LCD_configure_entry_shift
  4085 ;;		_LCD_configure_lcd_display
  4086 ;;		_LCD_cursor_decrement
  4087 ;;		_LCD_cursor_increment
  4088 ;;		_LCD_shift_left
  4089 ;;		_LCD_shift_reset
  4090 ;;		_LCD_shift_right
  4091 ;; This function uses a non-reentrant model
  4092 ;;
  4093                           
  4094     0617                     _LCD_write_command:	
  4095                           ;psect for function _LCD_write_command
  4096                           
  4097                           
  4098                           ;incstack = 0
  4099 ;; hardware stack exceeded
  4100                           ; Regs used in _LCD_write_command: [wreg+status,2+status,0+pclath+cstack]
  4101                           ;LCD_write_command@command stored from wreg
  4102     0617  1283               	bcf	3,5	;RP0=0, select bank0
  4103     0618  1303               	bcf	3,6	;RP1=0, select bank0
  4104     0619  00D3               	movwf	LCD_write_command@command
  4105     061A                     l1732:
  4106                           
  4107                           ;LCD_write_command.c: 11:     PORTDbits.RD2 = 0;
  4108     061A  1108               	bcf	8,2	;volatile
  4109     061B                     l1734:
  4110                           
  4111                           ;LCD_write_command.c: 14:     PORTDbits.RD7 = (command & 0b10000000) >> 7;
  4112     061B  0853               	movf	LCD_write_command@command,w
  4113     061C  00D1               	movwf	??_LCD_write_command
  4114     061D  3007               	movlw	7
  4115     061E                     u1265:
  4116     061E  1003               	clrc
  4117     061F  0CD1               	rrf	??_LCD_write_command,f
  4118     0620  3EFF               	addlw	-1
  4119     0621  1D03               	skipz
  4120     0622  2E1E               	goto	u1265
  4121     0623  0851               	movf	??_LCD_write_command,w
  4122     0624  3901               	andlw	1
  4123     0625  00D2               	movwf	??_LCD_write_command+1
  4124     0626  0CD2               	rrf	??_LCD_write_command+1,f
  4125     0627  0CD2               	rrf	??_LCD_write_command+1,f
  4126     0628  0808               	movf	8,w	;volatile
  4127     0629  0652               	xorwf	??_LCD_write_command+1,w
  4128     062A  397F               	andlw	-129
  4129     062B  0652               	xorwf	??_LCD_write_command+1,w
  4130     062C  0088               	movwf	8	;volatile
  4131                           
  4132                           ;LCD_write_command.c: 15:     PORTDbits.RD6 = (command & 0b01000000) >> 6;
  4133     062D  0853               	movf	LCD_write_command@command,w
  4134     062E  00D1               	movwf	??_LCD_write_command
  4135     062F  3006               	movlw	6
  4136     0630                     u1275:
  4137     0630  1003               	clrc
  4138     0631  0CD1               	rrf	??_LCD_write_command,f
  4139     0632  3EFF               	addlw	-1
  4140     0633  1D03               	skipz
  4141     0634  2E30               	goto	u1275
  4142     0635  0851               	movf	??_LCD_write_command,w
  4143     0636  3901               	andlw	1
  4144     0637  00D2               	movwf	??_LCD_write_command+1
  4145     0638  0ED2               	swapf	??_LCD_write_command+1,f
  4146     0639  0DD2               	rlf	??_LCD_write_command+1,f
  4147     063A  0DD2               	rlf	??_LCD_write_command+1,f
  4148     063B  0808               	movf	8,w	;volatile
  4149     063C  0652               	xorwf	??_LCD_write_command+1,w
  4150     063D  39BF               	andlw	-65
  4151     063E  0652               	xorwf	??_LCD_write_command+1,w
  4152     063F  0088               	movwf	8	;volatile
  4153                           
  4154                           ;LCD_write_command.c: 16:     PORTDbits.RD5 = (command & 0b00100000) >> 5;
  4155     0640  0853               	movf	LCD_write_command@command,w
  4156     0641  00D1               	movwf	??_LCD_write_command
  4157     0642  3005               	movlw	5
  4158     0643                     u1285:
  4159     0643  1003               	clrc
  4160     0644  0CD1               	rrf	??_LCD_write_command,f
  4161     0645  3EFF               	addlw	-1
  4162     0646  1D03               	skipz
  4163     0647  2E43               	goto	u1285
  4164     0648  0851               	movf	??_LCD_write_command,w
  4165     0649  3901               	andlw	1
  4166     064A  00D2               	movwf	??_LCD_write_command+1
  4167     064B  0ED2               	swapf	??_LCD_write_command+1,f
  4168     064C  0DD2               	rlf	??_LCD_write_command+1,f
  4169     064D  0808               	movf	8,w	;volatile
  4170     064E  0652               	xorwf	??_LCD_write_command+1,w
  4171     064F  39DF               	andlw	-33
  4172     0650  0652               	xorwf	??_LCD_write_command+1,w
  4173     0651  0088               	movwf	8	;volatile
  4174                           
  4175                           ;LCD_write_command.c: 17:     PORTDbits.RD4 = (command & 0b00010000) >> 4;
  4176     0652  0853               	movf	LCD_write_command@command,w
  4177     0653  00D1               	movwf	??_LCD_write_command
  4178     0654  3004               	movlw	4
  4179     0655                     u1295:
  4180     0655  1003               	clrc
  4181     0656  0CD1               	rrf	??_LCD_write_command,f
  4182     0657  3EFF               	addlw	-1
  4183     0658  1D03               	skipz
  4184     0659  2E55               	goto	u1295
  4185     065A  0851               	movf	??_LCD_write_command,w
  4186     065B  3901               	andlw	1
  4187     065C  00D2               	movwf	??_LCD_write_command+1
  4188     065D  0ED2               	swapf	??_LCD_write_command+1,f
  4189     065E  0808               	movf	8,w	;volatile
  4190     065F  0652               	xorwf	??_LCD_write_command+1,w
  4191     0660  39EF               	andlw	-17
  4192     0661  0652               	xorwf	??_LCD_write_command+1,w
  4193     0662  0088               	movwf	8	;volatile
  4194     0663                     l1736:
  4195                           
  4196                           ;LCD_write_command.c: 20:     LCD_pulse_clock();
  4197     0663  120A  118A  211F  120A  118A  	fcall	_LCD_pulse_clock
  4198     0668                     l1738:
  4199                           
  4200                           ;LCD_write_command.c: 23:     PORTDbits.RD7 = (command & 0b00001000) >> 3;
  4201     0668  1283               	bcf	3,5	;RP0=0, select bank0
  4202     0669  1303               	bcf	3,6	;RP1=0, select bank0
  4203     066A  0853               	movf	LCD_write_command@command,w
  4204     066B  00D1               	movwf	??_LCD_write_command
  4205     066C  3003               	movlw	3
  4206     066D                     u1305:
  4207     066D  1003               	clrc
  4208     066E  0CD1               	rrf	??_LCD_write_command,f
  4209     066F  3EFF               	addlw	-1
  4210     0670  1D03               	skipz
  4211     0671  2E6D               	goto	u1305
  4212     0672  0851               	movf	??_LCD_write_command,w
  4213     0673  3901               	andlw	1
  4214     0674  00D2               	movwf	??_LCD_write_command+1
  4215     0675  0CD2               	rrf	??_LCD_write_command+1,f
  4216     0676  0CD2               	rrf	??_LCD_write_command+1,f
  4217     0677  0808               	movf	8,w	;volatile
  4218     0678  0652               	xorwf	??_LCD_write_command+1,w
  4219     0679  397F               	andlw	-129
  4220     067A  0652               	xorwf	??_LCD_write_command+1,w
  4221     067B  0088               	movwf	8	;volatile
  4222     067C                     l1740:
  4223                           
  4224                           ;LCD_write_command.c: 24:     PORTDbits.RD6 = (command & 0b00000100) >> 2;
  4225     067C  0853               	movf	LCD_write_command@command,w
  4226     067D  00D1               	movwf	??_LCD_write_command
  4227     067E  3002               	movlw	2
  4228     067F                     u1315:
  4229     067F  1003               	clrc
  4230     0680  0CD1               	rrf	??_LCD_write_command,f
  4231     0681  3EFF               	addlw	-1
  4232     0682  1D03               	skipz
  4233     0683  2E7F               	goto	u1315
  4234     0684  0851               	movf	??_LCD_write_command,w
  4235     0685  3901               	andlw	1
  4236     0686  00D2               	movwf	??_LCD_write_command+1
  4237     0687  0ED2               	swapf	??_LCD_write_command+1,f
  4238     0688  0DD2               	rlf	??_LCD_write_command+1,f
  4239     0689  0DD2               	rlf	??_LCD_write_command+1,f
  4240     068A  0808               	movf	8,w	;volatile
  4241     068B  0652               	xorwf	??_LCD_write_command+1,w
  4242     068C  39BF               	andlw	-65
  4243     068D  0652               	xorwf	??_LCD_write_command+1,w
  4244     068E  0088               	movwf	8	;volatile
  4245     068F                     l1742:
  4246                           
  4247                           ;LCD_write_command.c: 25:     PORTDbits.RD5 = (command & 0b00000010) >> 1;
  4248     068F  0853               	movf	LCD_write_command@command,w
  4249     0690  00D1               	movwf	??_LCD_write_command
  4250     0691  1003               	clrc
  4251     0692  0C51               	rrf	??_LCD_write_command,w
  4252     0693  3901               	andlw	1
  4253     0694  00D2               	movwf	??_LCD_write_command+1
  4254     0695  0ED2               	swapf	??_LCD_write_command+1,f
  4255     0696  0DD2               	rlf	??_LCD_write_command+1,f
  4256     0697  0808               	movf	8,w	;volatile
  4257     0698  0652               	xorwf	??_LCD_write_command+1,w
  4258     0699  39DF               	andlw	-33
  4259     069A  0652               	xorwf	??_LCD_write_command+1,w
  4260     069B  0088               	movwf	8	;volatile
  4261     069C                     l1744:
  4262                           
  4263                           ;LCD_write_command.c: 26:     PORTDbits.RD4 = (command & 0b00000001) ;
  4264     069C  0853               	movf	LCD_write_command@command,w
  4265     069D  3901               	andlw	1
  4266     069E  00D1               	movwf	??_LCD_write_command
  4267     069F  0ED1               	swapf	??_LCD_write_command,f
  4268     06A0  0808               	movf	8,w	;volatile
  4269     06A1  0651               	xorwf	??_LCD_write_command,w
  4270     06A2  39EF               	andlw	-17
  4271     06A3  0651               	xorwf	??_LCD_write_command,w
  4272     06A4  0088               	movwf	8	;volatile
  4273     06A5                     l1746:
  4274                           
  4275                           ;LCD_write_command.c: 29:     LCD_pulse_clock();
  4276     06A5  120A  118A  211F  120A  118A  	fcall	_LCD_pulse_clock
  4277     06AA                     l139:
  4278     06AA  0008               	return
  4279     06AB                     __end_of_LCD_write_command:
  4280                           
  4281                           	psect	text11
  4282     011F                     __ptext11:	
  4283 ;; *************** function _LCD_pulse_clock *****************
  4284 ;; Defined at:
  4285 ;;		line 8 in file "LCD_pulse_clock.c"
  4286 ;; Parameters:    Size  Location     Type
  4287 ;;		None
  4288 ;; Auto vars:     Size  Location     Type
  4289 ;;		None
  4290 ;; Return value:  Size  Location     Type
  4291 ;;                  1    wreg      void 
  4292 ;; Registers used:
  4293 ;;		wreg
  4294 ;; Tracked objects:
  4295 ;;		On entry : 0/0
  4296 ;;		On exit  : 0/0
  4297 ;;		Unchanged: 0/0
  4298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4299 ;;      Params:         0       0       0       0       0
  4300 ;;      Locals:         0       0       0       0       0
  4301 ;;      Temps:          0       1       0       0       0
  4302 ;;      Totals:         0       1       0       0       0
  4303 ;;Total ram usage:        1 bytes
  4304 ;; Hardware stack levels used: 1
  4305 ;; Hardware stack levels required when called: 5
  4306 ;; This function calls:
  4307 ;;		Nothing
  4308 ;; This function is called by:
  4309 ;;		_LCD_init
  4310 ;;		_LCD_write_command
  4311 ;;		_LCD_write_data
  4312 ;; This function uses a non-reentrant model
  4313 ;;
  4314                           
  4315     011F                     _LCD_pulse_clock:	
  4316                           ;psect for function _LCD_pulse_clock
  4317                           
  4318     011F                     l1726:	
  4319                           ;incstack = 0
  4320 ;; hardware stack exceeded
  4321                           ; Regs used in _LCD_pulse_clock: [wreg]
  4322                           
  4323                           
  4324                           ;LCD_pulse_clock.c: 10:   PORTDbits.RD3 = 1;
  4325     011F  1283               	bcf	3,5	;RP0=0, select bank0
  4326     0120  1303               	bcf	3,6	;RP1=0, select bank0
  4327     0121  1588               	bsf	8,3	;volatile
  4328     0122                     l1728:
  4329                           
  4330                           ;LCD_pulse_clock.c: 11:   _delay((unsigned long)((40)*(4000000/4000000.0)));
  4331     0122  300C               	movlw	12
  4332     0123  1283               	bcf	3,5	;RP0=0, select bank0
  4333     0124  1303               	bcf	3,6	;RP1=0, select bank0
  4334     0125  00D0               	movwf	??_LCD_pulse_clock
  4335     0126                     u2267:
  4336     0126  0BD0               	decfsz	??_LCD_pulse_clock,f
  4337     0127  2926               	goto	u2267
  4338     0128  0000               	nop
  4339     0129                     l1730:
  4340                           
  4341                           ;LCD_pulse_clock.c: 12:   PORTDbits.RD3 = 0;
  4342     0129  1283               	bcf	3,5	;RP0=0, select bank0
  4343     012A  1303               	bcf	3,6	;RP1=0, select bank0
  4344     012B  1188               	bcf	8,3	;volatile
  4345     012C                     l110:
  4346     012C  0008               	return
  4347     012D                     __end_of_LCD_pulse_clock:
  4348                           
  4349                           	psect	text12
  4350     01F5                     __ptext12:	
  4351 ;; *************** function _ISR *****************
  4352 ;; Defined at:
  4353 ;;		line 75 in file "main.c"
  4354 ;; Parameters:    Size  Location     Type
  4355 ;;		None
  4356 ;; Auto vars:     Size  Location     Type
  4357 ;;		None
  4358 ;; Return value:  Size  Location     Type
  4359 ;;                  1    wreg      void 
  4360 ;; Registers used:
  4361 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4362 ;; Tracked objects:
  4363 ;;		On entry : 0/0
  4364 ;;		On exit  : 0/0
  4365 ;;		Unchanged: 0/0
  4366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4367 ;;      Params:         0       0       0       0       0
  4368 ;;      Locals:         0       0       0       0       0
  4369 ;;      Temps:          0       4       0       0       0
  4370 ;;      Totals:         0       4       0       0       0
  4371 ;;Total ram usage:        4 bytes
  4372 ;; Hardware stack levels used: 1
  4373 ;; Hardware stack levels required when called: 4
  4374 ;; This function calls:
  4375 ;;		_setDoorStatus
  4376 ;; This function is called by:
  4377 ;;		Interrupt level 1
  4378 ;; This function uses a non-reentrant model
  4379 ;;
  4380                           
  4381     01F5                     _ISR:	
  4382                           ;psect for function _ISR
  4383                           
  4384     01F5                     i1l2284:
  4385                           
  4386                           ;main.c: 76:     if (PIR1bits.RCIF == 1 && pos < 30) {
  4387     01F5  1E8C               	btfss	12,5	;volatile
  4388     01F6  29F8               	goto	u203_21
  4389     01F7  29F9               	goto	u203_20
  4390     01F8                     u203_21:
  4391     01F8  2A0F               	goto	i1l2294
  4392     01F9                     u203_20:
  4393     01F9                     i1l2286:
  4394     01F9  3000               	movlw	0
  4395     01FA  022D               	subwf	_pos+1,w
  4396     01FB  301E               	movlw	30
  4397     01FC  1903               	skipnz
  4398     01FD  022C               	subwf	_pos,w
  4399     01FE  1803               	skipnc
  4400     01FF  2A01               	goto	u204_21
  4401     0200  2A02               	goto	u204_20
  4402     0201                     u204_21:
  4403     0201  2A0F               	goto	i1l2294
  4404     0202                     u204_20:
  4405     0202                     i1l2288:
  4406                           
  4407                           ;main.c: 77:         StringReceive[pos] = RCREG;
  4408     0202  082C               	movf	_pos,w
  4409     0203  3E2E               	addlw	(low (_StringReceive| 0))& (0+255)
  4410     0204  0084               	movwf	4
  4411     0205  081A               	movf	26,w	;volatile
  4412     0206  1383               	bcf	3,7	;select IRP bank0
  4413     0207  0080               	movwf	0
  4414     0208                     i1l2290:
  4415                           
  4416                           ;main.c: 78:         pos++;
  4417     0208  3001               	movlw	1
  4418     0209  07AC               	addwf	_pos,f
  4419     020A  1803               	skipnc
  4420     020B  0AAD               	incf	_pos+1,f
  4421     020C  3000               	movlw	0
  4422     020D  07AD               	addwf	_pos+1,f
  4423     020E                     i1l2292:
  4424                           
  4425                           ;main.c: 79:         RCIF = 0;
  4426     020E  128C               	bcf	12,5	;volatile
  4427     020F                     i1l2294:
  4428                           
  4429                           ;main.c: 83:     setDoorStatus();
  4430     020F  120A  118A  2360  120A  118A  	fcall	_setDoorStatus
  4431     0214                     i1l254:
  4432     0214  1283               	bcf	3,5	;RP0=0, select bank0
  4433     0215  1303               	bcf	3,6	;RP1=0, select bank0
  4434     0216  084F               	movf	??_ISR+3,w
  4435     0217  00FF               	movwf	btemp+1
  4436     0218  084E               	movf	??_ISR+2,w
  4437     0219  008A               	movwf	10
  4438     021A  084D               	movf	??_ISR+1,w
  4439     021B  0084               	movwf	4
  4440     021C  0E4C               	swapf	??_ISR,w
  4441     021D  0083               	movwf	3
  4442     021E  0EFE               	swapf	btemp,f
  4443     021F  0E7E               	swapf	btemp,w
  4444     0220  0009               	retfie
  4445     0221                     __end_of_ISR:
  4446                           
  4447                           	psect	intentry
  4448     0004                     __pintentry:	
  4449                           ;incstack = 0
  4450 ;; hardware stack exceeded
  4451                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4452                           
  4453     0004                     interrupt_function:
  4454     007E                     saved_w	set	btemp
  4455     0004  00FE               	movwf	btemp
  4456     0005  0E03               	swapf	3,w
  4457     0006  1283               	bcf	3,5	;RP0=0, select bank0
  4458     0007  1303               	bcf	3,6	;RP1=0, select bank0
  4459     0008  00CC               	movwf	??_ISR
  4460     0009  0804               	movf	4,w
  4461     000A  00CD               	movwf	??_ISR+1
  4462     000B  080A               	movf	10,w
  4463     000C  00CE               	movwf	??_ISR+2
  4464     000D  087F               	movf	btemp+1,w
  4465     000E  00CF               	movwf	??_ISR+3
  4466     000F  120A  118A  29F5   	ljmp	_ISR
  4467                           
  4468                           	psect	text13
  4469     0360                     __ptext13:	
  4470 ;; *************** function _setDoorStatus *****************
  4471 ;; Defined at:
  4472 ;;		line 254 in file "main.c"
  4473 ;; Parameters:    Size  Location     Type
  4474 ;;		None
  4475 ;; Auto vars:     Size  Location     Type
  4476 ;;		None
  4477 ;; Return value:  Size  Location     Type
  4478 ;;                  1    wreg      void 
  4479 ;; Registers used:
  4480 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4481 ;; Tracked objects:
  4482 ;;		On entry : 0/0
  4483 ;;		On exit  : 0/0
  4484 ;;		Unchanged: 0/0
  4485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4486 ;;      Params:         0       0       0       0       0
  4487 ;;      Locals:         0       0       0       0       0
  4488 ;;      Temps:          0       0       0       0       0
  4489 ;;      Totals:         0       0       0       0       0
  4490 ;;Total ram usage:        0 bytes
  4491 ;; Hardware stack levels used: 1
  4492 ;; Hardware stack levels required when called: 3
  4493 ;; This function calls:
  4494 ;;		_ClearStringReceive
  4495 ;;		_strstr
  4496 ;;		i1_LCD_cursor_set
  4497 ;;		i1_LCD_write_string
  4498 ;; This function is called by:
  4499 ;;		_ISR
  4500 ;; This function uses a non-reentrant model
  4501 ;;
  4502                           
  4503     0360                     _setDoorStatus:	
  4504                           ;psect for function _setDoorStatus
  4505                           
  4506     0360                     i1l2034:	
  4507                           ;incstack = 0
  4508 ;; hardware stack exceeded
  4509                           ; Regs used in _setDoorStatus: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4510                           
  4511                           
  4512                           ;main.c: 255:     if(strstr(StringReceive, "O") != ((void*)0)){
  4513     0360  3076               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  4514     0361  00F7               	movwf	strstr@n
  4515     0362  302E               	movlw	(low (_StringReceive| 0))& (0+255)
  4516     0363  120A  118A  22C8  120A  118A  	fcall	_strstr
  4517     0368  3A00               	xorlw	0
  4518     0369  1903               	skipnz
  4519     036A  2B6C               	goto	u175_21
  4520     036B  2B6D               	goto	u175_20
  4521     036C                     u175_21:
  4522     036C  2B7C               	goto	i1l2040
  4523     036D                     u175_20:
  4524     036D                     i1l2036:
  4525                           
  4526                           ;main.c: 256:         doorClose = 1;
  4527     036D  3001               	movlw	1
  4528     036E  1283               	bcf	3,5	;RP0=0, select bank0
  4529     036F  1303               	bcf	3,6	;RP1=0, select bank0
  4530     0370  00A6               	movwf	_doorClose
  4531     0371  3000               	movlw	0
  4532     0372  00A7               	movwf	_doorClose+1
  4533                           
  4534                           ;main.c: 257:         StatusChange = 1;
  4535     0373  3001               	movlw	1
  4536     0374  00A8               	movwf	_StatusChange
  4537     0375  3000               	movlw	0
  4538     0376  00A9               	movwf	_StatusChange+1
  4539     0377                     i1l2038:
  4540                           
  4541                           ;main.c: 258:         ClearStringReceive();
  4542     0377  120A  118A  218E  120A  118A  	fcall	_ClearStringReceive
  4543     037C                     i1l2040:
  4544     037C  3074               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  4545     037D  00F7               	movwf	strstr@n
  4546     037E  302E               	movlw	(low (_StringReceive| 0))& (0+255)
  4547     037F  120A  118A  22C8  120A  118A  	fcall	_strstr
  4548     0384  3A00               	xorlw	0
  4549     0385  1903               	skipnz
  4550     0386  2B88               	goto	u176_21
  4551     0387  2B89               	goto	u176_20
  4552     0388                     u176_21:
  4553     0388  2B96               	goto	i1l2048
  4554     0389                     u176_20:
  4555     0389                     i1l2042:
  4556                           
  4557                           ;main.c: 260:         doorClose = 0;
  4558     0389  1283               	bcf	3,5	;RP0=0, select bank0
  4559     038A  1303               	bcf	3,6	;RP1=0, select bank0
  4560     038B  01A6               	clrf	_doorClose
  4561     038C  01A7               	clrf	_doorClose+1
  4562     038D                     i1l2044:
  4563                           
  4564                           ;main.c: 261:         StatusChange = 1;
  4565     038D  3001               	movlw	1
  4566     038E  00A8               	movwf	_StatusChange
  4567     038F  3000               	movlw	0
  4568     0390  00A9               	movwf	_StatusChange+1
  4569     0391                     i1l2046:
  4570                           
  4571                           ;main.c: 262:         ClearStringReceive();
  4572     0391  120A  118A  218E  120A  118A  	fcall	_ClearStringReceive
  4573     0396                     i1l2048:
  4574                           
  4575                           ;main.c: 265:     if(pos >= 30){
  4576     0396  3000               	movlw	0
  4577     0397  1283               	bcf	3,5	;RP0=0, select bank0
  4578     0398  1303               	bcf	3,6	;RP1=0, select bank0
  4579     0399  022D               	subwf	_pos+1,w
  4580     039A  301E               	movlw	30
  4581     039B  1903               	skipnz
  4582     039C  022C               	subwf	_pos,w
  4583     039D  1C03               	skipc
  4584     039E  2BA0               	goto	u177_21
  4585     039F  2BA1               	goto	u177_20
  4586     03A0                     u177_21:
  4587     03A0  2BB4               	goto	i1l297
  4588     03A1                     u177_20:
  4589     03A1                     i1l2050:
  4590                           
  4591                           ;main.c: 266:         ClearStringReceive();
  4592     03A1  120A  118A  218E  120A  118A  	fcall	_ClearStringReceive
  4593     03A6                     i1l2052:
  4594                           
  4595                           ;main.c: 267:         LCD_cursor_set(2, 1);
  4596     03A6  01F5               	clrf	i1LCD_cursor_set@column
  4597     03A7  0AF5               	incf	i1LCD_cursor_set@column,f
  4598     03A8  3002               	movlw	2
  4599     03A9  120A  118A  2221  120A  118A  	fcall	i1_LCD_cursor_set
  4600     03AE                     i1l2054:
  4601                           
  4602                           ;main.c: 268:         LCD_write_string("                ");
  4603     03AE  3012               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  4604     03AF  120A  118A  21AD  120A  118A  	fcall	i1_LCD_write_string
  4605     03B4                     i1l297:
  4606     03B4  0008               	return
  4607     03B5                     __end_of_setDoorStatus:
  4608                           
  4609                           	psect	text14
  4610     01AD                     __ptext14:	
  4611 ;; *************** function i1_LCD_write_string *****************
  4612 ;; Defined at:
  4613 ;;		line 9 in file "LCD_write_string.c"
  4614 ;; Parameters:    Size  Location     Type
  4615 ;;  string          1    wreg     PTR unsigned char 
  4616 ;;		 -> STR_9(17), STR_6(12), STR_5(13), STR_4(12), 
  4617 ;;		 -> STR_3(12), STR_2(13), STR_1(16), 
  4618 ;; Auto vars:     Size  Location     Type
  4619 ;;  string          1    4[COMMON] PTR unsigned char 
  4620 ;;		 -> STR_9(17), STR_6(12), STR_5(13), STR_4(12), 
  4621 ;;		 -> STR_3(12), STR_2(13), STR_1(16), 
  4622 ;;  i               1    5[COMMON] unsigned char 
  4623 ;; Return value:  Size  Location     Type
  4624 ;;                  1    wreg      void 
  4625 ;; Registers used:
  4626 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4627 ;; Tracked objects:
  4628 ;;		On entry : 0/0
  4629 ;;		On exit  : 0/0
  4630 ;;		Unchanged: 0/0
  4631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4632 ;;      Params:         0       0       0       0       0
  4633 ;;      Locals:         2       0       0       0       0
  4634 ;;      Temps:          0       0       0       0       0
  4635 ;;      Totals:         2       0       0       0       0
  4636 ;;Total ram usage:        2 bytes
  4637 ;; Hardware stack levels used: 1
  4638 ;; Hardware stack levels required when called: 2
  4639 ;; This function calls:
  4640 ;;		i1_LCD_write_data
  4641 ;; This function is called by:
  4642 ;;		_setDoorStatus
  4643 ;; This function uses a non-reentrant model
  4644 ;;
  4645                           
  4646     01AD                     i1_LCD_write_string:	
  4647                           ;psect for function i1_LCD_write_string
  4648                           
  4649                           
  4650                           ;incstack = 0
  4651 ;; hardware stack exceeded
  4652                           ; Regs used in i1_LCD_write_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4653                           ;i1LCD_write_string@string stored from wreg
  4654     01AD  00F5               	movwf	i1LCD_write_string@string
  4655     01AE                     i1l2024:
  4656                           
  4657                           ;LCD_write_string.c: 12:     for(uint8_t i=0 ; string[i] != '\0' ; i++){
  4658     01AE  01F6               	clrf	i1LCD_write_string@i
  4659     01AF  29C1               	goto	i1l2030
  4660     01B0                     i1l2026:
  4661                           
  4662                           ;LCD_write_string.c: 13:         LCD_write_data(string[i]);
  4663     01B0  0876               	movf	i1LCD_write_string@i,w
  4664     01B1  0775               	addwf	i1LCD_write_string@string,w
  4665     01B2  0084               	movwf	4
  4666     01B3  120A  118A  2015  120A  118A  	fcall	stringdir
  4667     01B8  120A  118A  2583  120A  118A  	fcall	i1_LCD_write_data
  4668     01BD                     i1l2028:
  4669                           
  4670                           ;LCD_write_string.c: 14:     }
  4671     01BD  3001               	movlw	1
  4672     01BE  00FF               	movwf	btemp+1
  4673     01BF  087F               	movf	btemp+1,w
  4674     01C0  07F6               	addwf	i1LCD_write_string@i,f
  4675     01C1                     i1l2030:
  4676     01C1  0876               	movf	i1LCD_write_string@i,w
  4677     01C2  0775               	addwf	i1LCD_write_string@string,w
  4678     01C3  0084               	movwf	4
  4679     01C4  120A  118A  2015  120A  118A  	fcall	stringdir
  4680     01C9  3A00               	xorlw	0
  4681     01CA  1D03               	skipz
  4682     01CB  29CD               	goto	u174_21
  4683     01CC  29CE               	goto	u174_20
  4684     01CD                     u174_21:
  4685     01CD  29B0               	goto	i1l2026
  4686     01CE                     u174_20:
  4687     01CE                     i1l171:
  4688     01CE  0008               	return
  4689     01CF                     __end_ofi1_LCD_write_string:
  4690                           
  4691                           	psect	text15
  4692     0583                     __ptext15:	
  4693 ;; *************** function i1_LCD_write_data *****************
  4694 ;; Defined at:
  4695 ;;		line 9 in file "LCD_write_data.c"
  4696 ;; Parameters:    Size  Location     Type
  4697 ;;  data            1    wreg     unsigned char 
  4698 ;; Auto vars:     Size  Location     Type
  4699 ;;  data            1    3[COMMON] unsigned char 
  4700 ;; Return value:  Size  Location     Type
  4701 ;;                  1    wreg      void 
  4702 ;; Registers used:
  4703 ;;		wreg, status,2, status,0, pclath, cstack
  4704 ;; Tracked objects:
  4705 ;;		On entry : 0/0
  4706 ;;		On exit  : 0/0
  4707 ;;		Unchanged: 0/0
  4708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4709 ;;      Params:         0       0       0       0       0
  4710 ;;      Locals:         1       0       0       0       0
  4711 ;;      Temps:          2       0       0       0       0
  4712 ;;      Totals:         3       0       0       0       0
  4713 ;;Total ram usage:        3 bytes
  4714 ;; Hardware stack levels used: 1
  4715 ;; Hardware stack levels required when called: 1
  4716 ;; This function calls:
  4717 ;;		i1_LCD_pulse_clock
  4718 ;; This function is called by:
  4719 ;;		i1_LCD_write_string
  4720 ;; This function uses a non-reentrant model
  4721 ;;
  4722                           
  4723     0583                     i1_LCD_write_data:	
  4724                           ;psect for function i1_LCD_write_data
  4725                           
  4726                           
  4727                           ;incstack = 0
  4728 ;; hardware stack exceeded
  4729                           ; Regs used in i1_LCD_write_data: [wreg+status,2+status,0+pclath+cstack]
  4730                           ;i1LCD_write_data@data stored from wreg
  4731     0583  00F4               	movwf	i1LCD_write_data@data
  4732     0584                     i1l1862:
  4733                           
  4734                           ;LCD_write_data.c: 11:     PORTDbits.RD2 = 1;
  4735     0584  1283               	bcf	3,5	;RP0=0, select bank0
  4736     0585  1303               	bcf	3,6	;RP1=0, select bank0
  4737     0586  1508               	bsf	8,2	;volatile
  4738     0587                     i1l1864:
  4739                           
  4740                           ;LCD_write_data.c: 14:     PORTDbits.RD7 = (data & 0b10000000) >> 7;
  4741     0587  0874               	movf	i1LCD_write_data@data,w
  4742     0588  00F2               	movwf	??i1_LCD_write_data
  4743     0589  3007               	movlw	7
  4744     058A                     u157_25:
  4745     058A  1003               	clrc
  4746     058B  0CF2               	rrf	??i1_LCD_write_data,f
  4747     058C  3EFF               	addlw	-1
  4748     058D  1D03               	skipz
  4749     058E  2D8A               	goto	u157_25
  4750     058F  0872               	movf	??i1_LCD_write_data,w
  4751     0590  3901               	andlw	1
  4752     0591  00F3               	movwf	??i1_LCD_write_data+1
  4753     0592  0CF3               	rrf	??i1_LCD_write_data+1,f
  4754     0593  0CF3               	rrf	??i1_LCD_write_data+1,f
  4755     0594  0808               	movf	8,w	;volatile
  4756     0595  0673               	xorwf	??i1_LCD_write_data+1,w
  4757     0596  397F               	andlw	-129
  4758     0597  0673               	xorwf	??i1_LCD_write_data+1,w
  4759     0598  0088               	movwf	8	;volatile
  4760                           
  4761                           ;LCD_write_data.c: 15:     PORTDbits.RD6 = (data & 0b01000000) >> 6;
  4762     0599  0874               	movf	i1LCD_write_data@data,w
  4763     059A  00F2               	movwf	??i1_LCD_write_data
  4764     059B  3006               	movlw	6
  4765     059C                     u158_25:
  4766     059C  1003               	clrc
  4767     059D  0CF2               	rrf	??i1_LCD_write_data,f
  4768     059E  3EFF               	addlw	-1
  4769     059F  1D03               	skipz
  4770     05A0  2D9C               	goto	u158_25
  4771     05A1  0872               	movf	??i1_LCD_write_data,w
  4772     05A2  3901               	andlw	1
  4773     05A3  00F3               	movwf	??i1_LCD_write_data+1
  4774     05A4  0EF3               	swapf	??i1_LCD_write_data+1,f
  4775     05A5  0DF3               	rlf	??i1_LCD_write_data+1,f
  4776     05A6  0DF3               	rlf	??i1_LCD_write_data+1,f
  4777     05A7  0808               	movf	8,w	;volatile
  4778     05A8  0673               	xorwf	??i1_LCD_write_data+1,w
  4779     05A9  39BF               	andlw	-65
  4780     05AA  0673               	xorwf	??i1_LCD_write_data+1,w
  4781     05AB  0088               	movwf	8	;volatile
  4782                           
  4783                           ;LCD_write_data.c: 16:     PORTDbits.RD5 = (data & 0b00100000) >> 5;
  4784     05AC  0874               	movf	i1LCD_write_data@data,w
  4785     05AD  00F2               	movwf	??i1_LCD_write_data
  4786     05AE  3005               	movlw	5
  4787     05AF                     u159_25:
  4788     05AF  1003               	clrc
  4789     05B0  0CF2               	rrf	??i1_LCD_write_data,f
  4790     05B1  3EFF               	addlw	-1
  4791     05B2  1D03               	skipz
  4792     05B3  2DAF               	goto	u159_25
  4793     05B4  0872               	movf	??i1_LCD_write_data,w
  4794     05B5  3901               	andlw	1
  4795     05B6  00F3               	movwf	??i1_LCD_write_data+1
  4796     05B7  0EF3               	swapf	??i1_LCD_write_data+1,f
  4797     05B8  0DF3               	rlf	??i1_LCD_write_data+1,f
  4798     05B9  0808               	movf	8,w	;volatile
  4799     05BA  0673               	xorwf	??i1_LCD_write_data+1,w
  4800     05BB  39DF               	andlw	-33
  4801     05BC  0673               	xorwf	??i1_LCD_write_data+1,w
  4802     05BD  0088               	movwf	8	;volatile
  4803                           
  4804                           ;LCD_write_data.c: 17:     PORTDbits.RD4 = (data & 0b00010000) >> 4;
  4805     05BE  0874               	movf	i1LCD_write_data@data,w
  4806     05BF  00F2               	movwf	??i1_LCD_write_data
  4807     05C0  3004               	movlw	4
  4808     05C1                     u160_25:
  4809     05C1  1003               	clrc
  4810     05C2  0CF2               	rrf	??i1_LCD_write_data,f
  4811     05C3  3EFF               	addlw	-1
  4812     05C4  1D03               	skipz
  4813     05C5  2DC1               	goto	u160_25
  4814     05C6  0872               	movf	??i1_LCD_write_data,w
  4815     05C7  3901               	andlw	1
  4816     05C8  00F3               	movwf	??i1_LCD_write_data+1
  4817     05C9  0EF3               	swapf	??i1_LCD_write_data+1,f
  4818     05CA  0808               	movf	8,w	;volatile
  4819     05CB  0673               	xorwf	??i1_LCD_write_data+1,w
  4820     05CC  39EF               	andlw	-17
  4821     05CD  0673               	xorwf	??i1_LCD_write_data+1,w
  4822     05CE  0088               	movwf	8	;volatile
  4823     05CF                     i1l1866:
  4824                           
  4825                           ;LCD_write_data.c: 20:     LCD_pulse_clock();
  4826     05CF  120A  118A  2114  120A  118A  	fcall	i1_LCD_pulse_clock
  4827     05D4                     i1l1868:
  4828                           
  4829                           ;LCD_write_data.c: 23:     PORTDbits.RD7 = (data & 0b00001000) >> 3;
  4830     05D4  0874               	movf	i1LCD_write_data@data,w
  4831     05D5  00F2               	movwf	??i1_LCD_write_data
  4832     05D6  3003               	movlw	3
  4833     05D7                     u161_25:
  4834     05D7  1003               	clrc
  4835     05D8  0CF2               	rrf	??i1_LCD_write_data,f
  4836     05D9  3EFF               	addlw	-1
  4837     05DA  1D03               	skipz
  4838     05DB  2DD7               	goto	u161_25
  4839     05DC  0872               	movf	??i1_LCD_write_data,w
  4840     05DD  3901               	andlw	1
  4841     05DE  00F3               	movwf	??i1_LCD_write_data+1
  4842     05DF  0CF3               	rrf	??i1_LCD_write_data+1,f
  4843     05E0  0CF3               	rrf	??i1_LCD_write_data+1,f
  4844     05E1  1283               	bcf	3,5	;RP0=0, select bank0
  4845     05E2  1303               	bcf	3,6	;RP1=0, select bank0
  4846     05E3  0808               	movf	8,w	;volatile
  4847     05E4  0673               	xorwf	??i1_LCD_write_data+1,w
  4848     05E5  397F               	andlw	-129
  4849     05E6  0673               	xorwf	??i1_LCD_write_data+1,w
  4850     05E7  0088               	movwf	8	;volatile
  4851     05E8                     i1l1870:
  4852                           
  4853                           ;LCD_write_data.c: 24:     PORTDbits.RD6 = (data & 0b00000100) >> 2;
  4854     05E8  0874               	movf	i1LCD_write_data@data,w
  4855     05E9  00F2               	movwf	??i1_LCD_write_data
  4856     05EA  3002               	movlw	2
  4857     05EB                     u162_25:
  4858     05EB  1003               	clrc
  4859     05EC  0CF2               	rrf	??i1_LCD_write_data,f
  4860     05ED  3EFF               	addlw	-1
  4861     05EE  1D03               	skipz
  4862     05EF  2DEB               	goto	u162_25
  4863     05F0  0872               	movf	??i1_LCD_write_data,w
  4864     05F1  3901               	andlw	1
  4865     05F2  00F3               	movwf	??i1_LCD_write_data+1
  4866     05F3  0EF3               	swapf	??i1_LCD_write_data+1,f
  4867     05F4  0DF3               	rlf	??i1_LCD_write_data+1,f
  4868     05F5  0DF3               	rlf	??i1_LCD_write_data+1,f
  4869     05F6  0808               	movf	8,w	;volatile
  4870     05F7  0673               	xorwf	??i1_LCD_write_data+1,w
  4871     05F8  39BF               	andlw	-65
  4872     05F9  0673               	xorwf	??i1_LCD_write_data+1,w
  4873     05FA  0088               	movwf	8	;volatile
  4874     05FB                     i1l1872:
  4875                           
  4876                           ;LCD_write_data.c: 25:     PORTDbits.RD5 = (data & 0b00000010) >> 1;
  4877     05FB  0874               	movf	i1LCD_write_data@data,w
  4878     05FC  00F2               	movwf	??i1_LCD_write_data
  4879     05FD  1003               	clrc
  4880     05FE  0C72               	rrf	??i1_LCD_write_data,w
  4881     05FF  3901               	andlw	1
  4882     0600  00F3               	movwf	??i1_LCD_write_data+1
  4883     0601  0EF3               	swapf	??i1_LCD_write_data+1,f
  4884     0602  0DF3               	rlf	??i1_LCD_write_data+1,f
  4885     0603  0808               	movf	8,w	;volatile
  4886     0604  0673               	xorwf	??i1_LCD_write_data+1,w
  4887     0605  39DF               	andlw	-33
  4888     0606  0673               	xorwf	??i1_LCD_write_data+1,w
  4889     0607  0088               	movwf	8	;volatile
  4890     0608                     i1l1874:
  4891                           
  4892                           ;LCD_write_data.c: 26:     PORTDbits.RD4 = (data & 0b00000001) ;
  4893     0608  0874               	movf	i1LCD_write_data@data,w
  4894     0609  3901               	andlw	1
  4895     060A  00F2               	movwf	??i1_LCD_write_data
  4896     060B  0EF2               	swapf	??i1_LCD_write_data,f
  4897     060C  0808               	movf	8,w	;volatile
  4898     060D  0672               	xorwf	??i1_LCD_write_data,w
  4899     060E  39EF               	andlw	-17
  4900     060F  0672               	xorwf	??i1_LCD_write_data,w
  4901     0610  0088               	movwf	8	;volatile
  4902     0611                     i1l1876:
  4903                           
  4904                           ;LCD_write_data.c: 29:     LCD_pulse_clock();
  4905     0611  120A  118A  2114  120A  118A  	fcall	i1_LCD_pulse_clock
  4906     0616                     i1l146:
  4907     0616  0008               	return
  4908     0617                     __end_ofi1_LCD_write_data:
  4909                           
  4910                           	psect	text16
  4911     0221                     __ptext16:	
  4912 ;; *************** function i1_LCD_cursor_set *****************
  4913 ;; Defined at:
  4914 ;;		line 9 in file "LCD_cursor_set.c"
  4915 ;; Parameters:    Size  Location     Type
  4916 ;;  row             1    wreg     unsigned char 
  4917 ;;  column          1    4[COMMON] unsigned char 
  4918 ;; Auto vars:     Size  Location     Type
  4919 ;;  row             1    5[COMMON] unsigned char 
  4920 ;; Return value:  Size  Location     Type
  4921 ;;                  1    wreg      void 
  4922 ;; Registers used:
  4923 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4924 ;; Tracked objects:
  4925 ;;		On entry : 0/0
  4926 ;;		On exit  : 0/0
  4927 ;;		Unchanged: 0/0
  4928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4929 ;;      Params:         1       0       0       0       0
  4930 ;;      Locals:         1       0       0       0       0
  4931 ;;      Temps:          0       0       0       0       0
  4932 ;;      Totals:         2       0       0       0       0
  4933 ;;Total ram usage:        2 bytes
  4934 ;; Hardware stack levels used: 1
  4935 ;; Hardware stack levels required when called: 2
  4936 ;; This function calls:
  4937 ;;		i1_LCD_write_command
  4938 ;; This function is called by:
  4939 ;;		_setDoorStatus
  4940 ;; This function uses a non-reentrant model
  4941 ;;
  4942                           
  4943     0221                     i1_LCD_cursor_set:	
  4944                           ;psect for function i1_LCD_cursor_set
  4945                           
  4946                           
  4947                           ;incstack = 0
  4948 ;; hardware stack exceeded
  4949                           ; Regs used in i1_LCD_cursor_set: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4950                           ;i1LCD_cursor_set@row stored from wreg
  4951     0221  00F6               	movwf	i1LCD_cursor_set@row
  4952     0222                     i1l2006:
  4953                           
  4954                           ;LCD_cursor_set.c: 12:     if(row == 1) column += (0x80 - 1);
  4955     0222  0376               	decf	i1LCD_cursor_set@row,w
  4956     0223  1D03               	btfss	3,2
  4957     0224  2A26               	goto	u170_21
  4958     0225  2A27               	goto	u170_20
  4959     0226                     u170_21:
  4960     0226  2A2B               	goto	i1l2010
  4961     0227                     u170_20:
  4962     0227                     i1l2008:
  4963     0227  307F               	movlw	127
  4964     0228  00FF               	movwf	btemp+1
  4965     0229  087F               	movf	btemp+1,w
  4966     022A  07F5               	addwf	i1LCD_cursor_set@column,f
  4967     022B                     i1l2010:
  4968                           
  4969                           ;LCD_cursor_set.c: 13:     if(row == 2) column += (0xC0 - 1);
  4970     022B  3002               	movlw	2
  4971     022C  0676               	xorwf	i1LCD_cursor_set@row,w
  4972     022D  1D03               	btfss	3,2
  4973     022E  2A30               	goto	u171_21
  4974     022F  2A31               	goto	u171_20
  4975     0230                     u171_21:
  4976     0230  2A35               	goto	i1l2014
  4977     0231                     u171_20:
  4978     0231                     i1l2012:
  4979     0231  30BF               	movlw	191
  4980     0232  00FF               	movwf	btemp+1
  4981     0233  087F               	movf	btemp+1,w
  4982     0234  07F5               	addwf	i1LCD_cursor_set@column,f
  4983     0235                     i1l2014:
  4984                           
  4985                           ;LCD_cursor_set.c: 14:     if(row == 3) column += (0x80 + 19);
  4986     0235  3003               	movlw	3
  4987     0236  0676               	xorwf	i1LCD_cursor_set@row,w
  4988     0237  1D03               	btfss	3,2
  4989     0238  2A3A               	goto	u172_21
  4990     0239  2A3B               	goto	u172_20
  4991     023A                     u172_21:
  4992     023A  2A3F               	goto	i1l2018
  4993     023B                     u172_20:
  4994     023B                     i1l2016:
  4995     023B  3093               	movlw	147
  4996     023C  00FF               	movwf	btemp+1
  4997     023D  087F               	movf	btemp+1,w
  4998     023E  07F5               	addwf	i1LCD_cursor_set@column,f
  4999     023F                     i1l2018:
  5000                           
  5001                           ;LCD_cursor_set.c: 15:     if(row == 4) column += (0xC0 + 19);
  5002     023F  3004               	movlw	4
  5003     0240  0676               	xorwf	i1LCD_cursor_set@row,w
  5004     0241  1D03               	btfss	3,2
  5005     0242  2A44               	goto	u173_21
  5006     0243  2A45               	goto	u173_20
  5007     0244                     u173_21:
  5008     0244  2A49               	goto	i1l2022
  5009     0245                     u173_20:
  5010     0245                     i1l2020:
  5011     0245  30D3               	movlw	211
  5012     0246  00FF               	movwf	btemp+1
  5013     0247  087F               	movf	btemp+1,w
  5014     0248  07F5               	addwf	i1LCD_cursor_set@column,f
  5015     0249                     i1l2022:
  5016                           
  5017                           ;LCD_cursor_set.c: 18:    LCD_write_command(column);
  5018     0249  0875               	movf	i1LCD_cursor_set@column,w
  5019     024A  120A  118A  24EF  120A  118A  	fcall	i1_LCD_write_command
  5020     024F                     i1l84:
  5021     024F  0008               	return
  5022     0250                     __end_ofi1_LCD_cursor_set:
  5023                           
  5024                           	psect	text17
  5025     04EF                     __ptext17:	
  5026 ;; *************** function i1_LCD_write_command *****************
  5027 ;; Defined at:
  5028 ;;		line 9 in file "LCD_write_command.c"
  5029 ;; Parameters:    Size  Location     Type
  5030 ;;  command         1    wreg     unsigned char 
  5031 ;; Auto vars:     Size  Location     Type
  5032 ;;  command         1    3[COMMON] unsigned char 
  5033 ;; Return value:  Size  Location     Type
  5034 ;;                  1    wreg      void 
  5035 ;; Registers used:
  5036 ;;		wreg, status,2, status,0, pclath, cstack
  5037 ;; Tracked objects:
  5038 ;;		On entry : 0/0
  5039 ;;		On exit  : 0/0
  5040 ;;		Unchanged: 0/0
  5041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5042 ;;      Params:         0       0       0       0       0
  5043 ;;      Locals:         1       0       0       0       0
  5044 ;;      Temps:          2       0       0       0       0
  5045 ;;      Totals:         3       0       0       0       0
  5046 ;;Total ram usage:        3 bytes
  5047 ;; Hardware stack levels used: 1
  5048 ;; Hardware stack levels required when called: 1
  5049 ;; This function calls:
  5050 ;;		i1_LCD_pulse_clock
  5051 ;; This function is called by:
  5052 ;;		i1_LCD_cursor_set
  5053 ;; This function uses a non-reentrant model
  5054 ;;
  5055                           
  5056     04EF                     i1_LCD_write_command:	
  5057                           ;psect for function i1_LCD_write_command
  5058                           
  5059                           
  5060                           ;incstack = 0
  5061 ;; hardware stack exceeded
  5062                           ; Regs used in i1_LCD_write_command: [wreg+status,2+status,0+pclath+cstack]
  5063                           ;i1LCD_write_command@command stored from wreg
  5064     04EF  00F4               	movwf	i1LCD_write_command@command
  5065     04F0                     i1l1846:
  5066                           
  5067                           ;LCD_write_command.c: 11:     PORTDbits.RD2 = 0;
  5068     04F0  1283               	bcf	3,5	;RP0=0, select bank0
  5069     04F1  1303               	bcf	3,6	;RP1=0, select bank0
  5070     04F2  1108               	bcf	8,2	;volatile
  5071     04F3                     i1l1848:
  5072                           
  5073                           ;LCD_write_command.c: 14:     PORTDbits.RD7 = (command & 0b10000000) >> 7;
  5074     04F3  0874               	movf	i1LCD_write_command@command,w
  5075     04F4  00F2               	movwf	??i1_LCD_write_command
  5076     04F5  3007               	movlw	7
  5077     04F6                     u151_25:
  5078     04F6  1003               	clrc
  5079     04F7  0CF2               	rrf	??i1_LCD_write_command,f
  5080     04F8  3EFF               	addlw	-1
  5081     04F9  1D03               	skipz
  5082     04FA  2CF6               	goto	u151_25
  5083     04FB  0872               	movf	??i1_LCD_write_command,w
  5084     04FC  3901               	andlw	1
  5085     04FD  00F3               	movwf	??i1_LCD_write_command+1
  5086     04FE  0CF3               	rrf	??i1_LCD_write_command+1,f
  5087     04FF  0CF3               	rrf	??i1_LCD_write_command+1,f
  5088     0500  0808               	movf	8,w	;volatile
  5089     0501  0673               	xorwf	??i1_LCD_write_command+1,w
  5090     0502  397F               	andlw	-129
  5091     0503  0673               	xorwf	??i1_LCD_write_command+1,w
  5092     0504  0088               	movwf	8	;volatile
  5093                           
  5094                           ;LCD_write_command.c: 15:     PORTDbits.RD6 = (command & 0b01000000) >> 6;
  5095     0505  0874               	movf	i1LCD_write_command@command,w
  5096     0506  00F2               	movwf	??i1_LCD_write_command
  5097     0507  3006               	movlw	6
  5098     0508                     u152_25:
  5099     0508  1003               	clrc
  5100     0509  0CF2               	rrf	??i1_LCD_write_command,f
  5101     050A  3EFF               	addlw	-1
  5102     050B  1D03               	skipz
  5103     050C  2D08               	goto	u152_25
  5104     050D  0872               	movf	??i1_LCD_write_command,w
  5105     050E  3901               	andlw	1
  5106     050F  00F3               	movwf	??i1_LCD_write_command+1
  5107     0510  0EF3               	swapf	??i1_LCD_write_command+1,f
  5108     0511  0DF3               	rlf	??i1_LCD_write_command+1,f
  5109     0512  0DF3               	rlf	??i1_LCD_write_command+1,f
  5110     0513  0808               	movf	8,w	;volatile
  5111     0514  0673               	xorwf	??i1_LCD_write_command+1,w
  5112     0515  39BF               	andlw	-65
  5113     0516  0673               	xorwf	??i1_LCD_write_command+1,w
  5114     0517  0088               	movwf	8	;volatile
  5115                           
  5116                           ;LCD_write_command.c: 16:     PORTDbits.RD5 = (command & 0b00100000) >> 5;
  5117     0518  0874               	movf	i1LCD_write_command@command,w
  5118     0519  00F2               	movwf	??i1_LCD_write_command
  5119     051A  3005               	movlw	5
  5120     051B                     u153_25:
  5121     051B  1003               	clrc
  5122     051C  0CF2               	rrf	??i1_LCD_write_command,f
  5123     051D  3EFF               	addlw	-1
  5124     051E  1D03               	skipz
  5125     051F  2D1B               	goto	u153_25
  5126     0520  0872               	movf	??i1_LCD_write_command,w
  5127     0521  3901               	andlw	1
  5128     0522  00F3               	movwf	??i1_LCD_write_command+1
  5129     0523  0EF3               	swapf	??i1_LCD_write_command+1,f
  5130     0524  0DF3               	rlf	??i1_LCD_write_command+1,f
  5131     0525  0808               	movf	8,w	;volatile
  5132     0526  0673               	xorwf	??i1_LCD_write_command+1,w
  5133     0527  39DF               	andlw	-33
  5134     0528  0673               	xorwf	??i1_LCD_write_command+1,w
  5135     0529  0088               	movwf	8	;volatile
  5136                           
  5137                           ;LCD_write_command.c: 17:     PORTDbits.RD4 = (command & 0b00010000) >> 4;
  5138     052A  0874               	movf	i1LCD_write_command@command,w
  5139     052B  00F2               	movwf	??i1_LCD_write_command
  5140     052C  3004               	movlw	4
  5141     052D                     u154_25:
  5142     052D  1003               	clrc
  5143     052E  0CF2               	rrf	??i1_LCD_write_command,f
  5144     052F  3EFF               	addlw	-1
  5145     0530  1D03               	skipz
  5146     0531  2D2D               	goto	u154_25
  5147     0532  0872               	movf	??i1_LCD_write_command,w
  5148     0533  3901               	andlw	1
  5149     0534  00F3               	movwf	??i1_LCD_write_command+1
  5150     0535  0EF3               	swapf	??i1_LCD_write_command+1,f
  5151     0536  0808               	movf	8,w	;volatile
  5152     0537  0673               	xorwf	??i1_LCD_write_command+1,w
  5153     0538  39EF               	andlw	-17
  5154     0539  0673               	xorwf	??i1_LCD_write_command+1,w
  5155     053A  0088               	movwf	8	;volatile
  5156     053B                     i1l1850:
  5157                           
  5158                           ;LCD_write_command.c: 20:     LCD_pulse_clock();
  5159     053B  120A  118A  2114  120A  118A  	fcall	i1_LCD_pulse_clock
  5160     0540                     i1l1852:
  5161                           
  5162                           ;LCD_write_command.c: 23:     PORTDbits.RD7 = (command & 0b00001000) >> 3;
  5163     0540  0874               	movf	i1LCD_write_command@command,w
  5164     0541  00F2               	movwf	??i1_LCD_write_command
  5165     0542  3003               	movlw	3
  5166     0543                     u155_25:
  5167     0543  1003               	clrc
  5168     0544  0CF2               	rrf	??i1_LCD_write_command,f
  5169     0545  3EFF               	addlw	-1
  5170     0546  1D03               	skipz
  5171     0547  2D43               	goto	u155_25
  5172     0548  0872               	movf	??i1_LCD_write_command,w
  5173     0549  3901               	andlw	1
  5174     054A  00F3               	movwf	??i1_LCD_write_command+1
  5175     054B  0CF3               	rrf	??i1_LCD_write_command+1,f
  5176     054C  0CF3               	rrf	??i1_LCD_write_command+1,f
  5177     054D  1283               	bcf	3,5	;RP0=0, select bank0
  5178     054E  1303               	bcf	3,6	;RP1=0, select bank0
  5179     054F  0808               	movf	8,w	;volatile
  5180     0550  0673               	xorwf	??i1_LCD_write_command+1,w
  5181     0551  397F               	andlw	-129
  5182     0552  0673               	xorwf	??i1_LCD_write_command+1,w
  5183     0553  0088               	movwf	8	;volatile
  5184     0554                     i1l1854:
  5185                           
  5186                           ;LCD_write_command.c: 24:     PORTDbits.RD6 = (command & 0b00000100) >> 2;
  5187     0554  0874               	movf	i1LCD_write_command@command,w
  5188     0555  00F2               	movwf	??i1_LCD_write_command
  5189     0556  3002               	movlw	2
  5190     0557                     u156_25:
  5191     0557  1003               	clrc
  5192     0558  0CF2               	rrf	??i1_LCD_write_command,f
  5193     0559  3EFF               	addlw	-1
  5194     055A  1D03               	skipz
  5195     055B  2D57               	goto	u156_25
  5196     055C  0872               	movf	??i1_LCD_write_command,w
  5197     055D  3901               	andlw	1
  5198     055E  00F3               	movwf	??i1_LCD_write_command+1
  5199     055F  0EF3               	swapf	??i1_LCD_write_command+1,f
  5200     0560  0DF3               	rlf	??i1_LCD_write_command+1,f
  5201     0561  0DF3               	rlf	??i1_LCD_write_command+1,f
  5202     0562  0808               	movf	8,w	;volatile
  5203     0563  0673               	xorwf	??i1_LCD_write_command+1,w
  5204     0564  39BF               	andlw	-65
  5205     0565  0673               	xorwf	??i1_LCD_write_command+1,w
  5206     0566  0088               	movwf	8	;volatile
  5207     0567                     i1l1856:
  5208                           
  5209                           ;LCD_write_command.c: 25:     PORTDbits.RD5 = (command & 0b00000010) >> 1;
  5210     0567  0874               	movf	i1LCD_write_command@command,w
  5211     0568  00F2               	movwf	??i1_LCD_write_command
  5212     0569  1003               	clrc
  5213     056A  0C72               	rrf	??i1_LCD_write_command,w
  5214     056B  3901               	andlw	1
  5215     056C  00F3               	movwf	??i1_LCD_write_command+1
  5216     056D  0EF3               	swapf	??i1_LCD_write_command+1,f
  5217     056E  0DF3               	rlf	??i1_LCD_write_command+1,f
  5218     056F  0808               	movf	8,w	;volatile
  5219     0570  0673               	xorwf	??i1_LCD_write_command+1,w
  5220     0571  39DF               	andlw	-33
  5221     0572  0673               	xorwf	??i1_LCD_write_command+1,w
  5222     0573  0088               	movwf	8	;volatile
  5223     0574                     i1l1858:
  5224                           
  5225                           ;LCD_write_command.c: 26:     PORTDbits.RD4 = (command & 0b00000001) ;
  5226     0574  0874               	movf	i1LCD_write_command@command,w
  5227     0575  3901               	andlw	1
  5228     0576  00F2               	movwf	??i1_LCD_write_command
  5229     0577  0EF2               	swapf	??i1_LCD_write_command,f
  5230     0578  0808               	movf	8,w	;volatile
  5231     0579  0672               	xorwf	??i1_LCD_write_command,w
  5232     057A  39EF               	andlw	-17
  5233     057B  0672               	xorwf	??i1_LCD_write_command,w
  5234     057C  0088               	movwf	8	;volatile
  5235     057D                     i1l1860:
  5236                           
  5237                           ;LCD_write_command.c: 29:     LCD_pulse_clock();
  5238     057D  120A  118A  2114  120A  118A  	fcall	i1_LCD_pulse_clock
  5239     0582                     i1l139:
  5240     0582  0008               	return
  5241     0583                     __end_ofi1_LCD_write_command:
  5242                           
  5243                           	psect	text18
  5244     0114                     __ptext18:	
  5245 ;; *************** function i1_LCD_pulse_clock *****************
  5246 ;; Defined at:
  5247 ;;		line 8 in file "LCD_pulse_clock.c"
  5248 ;; Parameters:    Size  Location     Type
  5249 ;;		None
  5250 ;; Auto vars:     Size  Location     Type
  5251 ;;		None
  5252 ;; Return value:  Size  Location     Type
  5253 ;;                  1    wreg      void 
  5254 ;; Registers used:
  5255 ;;		wreg
  5256 ;; Tracked objects:
  5257 ;;		On entry : 0/0
  5258 ;;		On exit  : 0/0
  5259 ;;		Unchanged: 0/0
  5260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5261 ;;      Params:         0       0       0       0       0
  5262 ;;      Locals:         0       0       0       0       0
  5263 ;;      Temps:          1       0       0       0       0
  5264 ;;      Totals:         1       0       0       0       0
  5265 ;;Total ram usage:        1 bytes
  5266 ;; Hardware stack levels used: 1
  5267 ;; This function calls:
  5268 ;;		Nothing
  5269 ;; This function is called by:
  5270 ;;		i1_LCD_write_command
  5271 ;;		i1_LCD_write_data
  5272 ;; This function uses a non-reentrant model
  5273 ;;
  5274                           
  5275     0114                     i1_LCD_pulse_clock:	
  5276                           ;psect for function i1_LCD_pulse_clock
  5277                           
  5278     0114                     i1l1764:	
  5279                           ;incstack = 0
  5280 ;; hardware stack exceeded
  5281                           ; Regs used in i1_LCD_pulse_clock: [wreg]
  5282                           
  5283                           
  5284                           ;LCD_pulse_clock.c: 10:   PORTDbits.RD3 = 1;
  5285     0114  1283               	bcf	3,5	;RP0=0, select bank0
  5286     0115  1303               	bcf	3,6	;RP1=0, select bank0
  5287     0116  1588               	bsf	8,3	;volatile
  5288     0117                     i1l1766:
  5289                           
  5290                           ;LCD_pulse_clock.c: 11:   _delay((unsigned long)((40)*(4000000/4000000.0)));
  5291     0117  300D               	movlw	13
  5292     0118  00F1               	movwf	??i1_LCD_pulse_clock
  5293     0119                     u227_27:
  5294     0119  0BF1               	decfsz	??i1_LCD_pulse_clock,f
  5295     011A  2919               	goto	u227_27
  5296     011B                     i1l1768:
  5297                           
  5298                           ;LCD_pulse_clock.c: 12:   PORTDbits.RD3 = 0;
  5299     011B  1283               	bcf	3,5	;RP0=0, select bank0
  5300     011C  1303               	bcf	3,6	;RP1=0, select bank0
  5301     011D  1188               	bcf	8,3	;volatile
  5302     011E                     i1l110:
  5303     011E  0008               	return
  5304     011F                     __end_ofi1_LCD_pulse_clock:
  5305                           
  5306                           	psect	text19
  5307     02C8                     __ptext19:	
  5308 ;; *************** function _strstr *****************
  5309 ;; Defined at:
  5310 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\strstr.c"
  5311 ;; Parameters:    Size  Location     Type
  5312 ;;  h               1    wreg     PTR const unsigned char 
  5313 ;;		 -> NULL(0), StringReceive(30), 
  5314 ;;  n               1    6[COMMON] PTR const unsigned char 
  5315 ;;		 -> STR_8(2), STR_7(2), 
  5316 ;; Auto vars:     Size  Location     Type
  5317 ;;  h               1   11[COMMON] PTR const unsigned char 
  5318 ;;		 -> NULL(0), StringReceive(30), 
  5319 ;;  nl              2    9[COMMON] unsigned int 
  5320 ;; Return value:  Size  Location     Type
  5321 ;;                  1    wreg      PTR unsigned char 
  5322 ;; Registers used:
  5323 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5324 ;; Tracked objects:
  5325 ;;		On entry : 0/0
  5326 ;;		On exit  : 0/0
  5327 ;;		Unchanged: 0/0
  5328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5329 ;;      Params:         1       0       0       0       0
  5330 ;;      Locals:         3       0       0       0       0
  5331 ;;      Temps:          2       0       0       0       0
  5332 ;;      Totals:         6       0       0       0       0
  5333 ;;Total ram usage:        6 bytes
  5334 ;; Hardware stack levels used: 1
  5335 ;; Hardware stack levels required when called: 2
  5336 ;; This function calls:
  5337 ;;		_strchr
  5338 ;;		_strlen
  5339 ;;		_strncmp
  5340 ;; This function is called by:
  5341 ;;		_setDoorStatus
  5342 ;; This function uses a non-reentrant model
  5343 ;;
  5344                           
  5345     02C8                     _strstr:	
  5346                           ;psect for function _strstr
  5347                           
  5348                           
  5349                           ;incstack = 0
  5350 ;; hardware stack exceeded
  5351                           ; Regs used in _strstr: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5352                           ;strstr@h stored from wreg
  5353     02C8  00FC               	movwf	strstr@h
  5354     02C9                     i1l1986:
  5355     02C9  0877               	movf	strstr@n,w
  5356     02CA  1903               	btfsc	3,2
  5357     02CB  2ACD               	goto	u166_21
  5358     02CC  2ACE               	goto	u166_20
  5359     02CD                     u166_21:
  5360     02CD  2B0F               	goto	i1l2002
  5361     02CE                     u166_20:
  5362     02CE                     i1l1988:
  5363     02CE  0877               	movf	strstr@n,w
  5364     02CF  120A  118A  2173  120A  118A  	fcall	_strlen
  5365     02D4  0872               	movf	?_strlen+1,w
  5366     02D5  00FB               	movwf	strstr@nl+1
  5367     02D6  0871               	movf	?_strlen,w
  5368     02D7  00FA               	movwf	strstr@nl
  5369     02D8  2B02               	goto	i1l1998
  5370     02D9                     i1l1990:
  5371     02D9  0877               	movf	strstr@n,w
  5372     02DA  00F1               	movwf	strncmp@r
  5373     02DB  087B               	movf	strstr@nl+1,w
  5374     02DC  00F3               	movwf	strncmp@n+1
  5375     02DD  087A               	movf	strstr@nl,w
  5376     02DE  00F2               	movwf	strncmp@n
  5377     02DF  087C               	movf	strstr@h,w
  5378     02E0  120A  118A  23B5  120A  118A  	fcall	_strncmp
  5379     02E5  0871               	movf	?_strncmp,w
  5380     02E6  0472               	iorwf	?_strncmp+1,w
  5381     02E7  1D03               	btfss	3,2
  5382     02E8  2AEA               	goto	u167_21
  5383     02E9  2AEB               	goto	u167_20
  5384     02EA                     u167_21:
  5385     02EA  2AED               	goto	i1l1996
  5386     02EB                     u167_20:
  5387     02EB                     i1l1992:
  5388     02EB  087C               	movf	strstr@h,w
  5389     02EC  2B10               	goto	i1l994
  5390     02ED                     i1l1996:
  5391     02ED  0877               	movf	strstr@n,w
  5392     02EE  0084               	movwf	4
  5393     02EF  120A  118A  2015  120A  118A  	fcall	stringdir
  5394     02F4  00F8               	movwf	??_strstr
  5395     02F5  01F9               	clrf	??_strstr+1
  5396     02F6  0878               	movf	??_strstr,w
  5397     02F7  00F1               	movwf	strchr@c
  5398     02F8  0879               	movf	??_strstr+1,w
  5399     02F9  00F2               	movwf	strchr@c+1
  5400     02FA  087C               	movf	strstr@h,w
  5401     02FB  3E01               	addlw	1
  5402     02FC  120A  118A  212D  120A  118A  	fcall	_strchr
  5403     0301  00FC               	movwf	strstr@h
  5404     0302                     i1l1998:
  5405     0302  087C               	movf	strstr@h,w
  5406     0303  1903               	btfsc	3,2
  5407     0304  2B06               	goto	u168_21
  5408     0305  2B07               	goto	u168_20
  5409     0306                     u168_21:
  5410     0306  2B0F               	goto	i1l2002
  5411     0307                     u168_20:
  5412     0307                     i1l2000:
  5413     0307  087C               	movf	strstr@h,w
  5414     0308  0084               	movwf	4
  5415     0309  1383               	bcf	3,7	;select IRP bank0
  5416     030A  0800               	movf	0,w
  5417     030B  1D03               	btfss	3,2
  5418     030C  2B0E               	goto	u169_21
  5419     030D  2B0F               	goto	u169_20
  5420     030E                     u169_21:
  5421     030E  2AD9               	goto	i1l1990
  5422     030F                     u169_20:
  5423     030F                     i1l2002:
  5424     030F  3000               	movlw	0
  5425     0310                     i1l994:
  5426     0310  0008               	return
  5427     0311                     __end_of_strstr:
  5428                           
  5429                           	psect	text20
  5430     03B5                     __ptext20:	
  5431 ;; *************** function _strncmp *****************
  5432 ;; Defined at:
  5433 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\strncmp.c"
  5434 ;; Parameters:    Size  Location     Type
  5435 ;;  l               1    wreg     PTR const unsigned char 
  5436 ;;		 -> NULL(0), StringReceive(30), 
  5437 ;;  r               1    0[COMMON] PTR const unsigned char 
  5438 ;;		 -> STR_8(2), STR_7(2), 
  5439 ;;  n               2    1[COMMON] unsigned int 
  5440 ;; Auto vars:     Size  Location     Type
  5441 ;;  l               1    5[COMMON] PTR const unsigned char 
  5442 ;;		 -> NULL(0), StringReceive(30), 
  5443 ;; Return value:  Size  Location     Type
  5444 ;;                  2    0[COMMON] int 
  5445 ;; Registers used:
  5446 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  5447 ;; Tracked objects:
  5448 ;;		On entry : 0/0
  5449 ;;		On exit  : 0/0
  5450 ;;		Unchanged: 0/0
  5451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5452 ;;      Params:         3       0       0       0       0
  5453 ;;      Locals:         1       0       0       0       0
  5454 ;;      Temps:          2       0       0       0       0
  5455 ;;      Totals:         6       0       0       0       0
  5456 ;;Total ram usage:        6 bytes
  5457 ;; Hardware stack levels used: 2
  5458 ;; This function calls:
  5459 ;;		Nothing
  5460 ;; This function is called by:
  5461 ;;		_strstr
  5462 ;; This function uses a non-reentrant model
  5463 ;;
  5464                           
  5465     03B5                     _strncmp:	
  5466                           ;psect for function _strncmp
  5467                           
  5468                           
  5469                           ;incstack = 0
  5470 ;; hardware stack exceeded
  5471                           ; Regs used in _strncmp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  5472                           ;strncmp@l stored from wreg
  5473     03B5  00F6               	movwf	strncmp@l
  5474     03B6                     i1l1812:
  5475     03B6  3001               	movlw	1
  5476     03B7  02F2               	subwf	strncmp@n,f
  5477     03B8  3000               	movlw	0
  5478     03B9  1C03               	skipc
  5479     03BA  03F3               	decf	strncmp@n+1,f
  5480     03BB  02F3               	subwf	strncmp@n+1,f
  5481     03BC  0A72               	incf	strncmp@n,w
  5482     03BD  1D03               	skipz
  5483     03BE  2BC3               	goto	u144_21
  5484     03BF  0A73               	incf	strncmp@n+1,w
  5485     03C0  1D03               	btfss	3,2
  5486     03C1  2BC3               	goto	u144_21
  5487     03C2  2BC4               	goto	u144_20
  5488     03C3                     u144_21:
  5489     03C3  2BD5               	goto	i1l1822
  5490     03C4                     u144_20:
  5491     03C4                     i1l1814:
  5492     03C4  01F1               	clrf	?_strncmp
  5493     03C5  01F2               	clrf	?_strncmp+1
  5494     03C6  2C11               	goto	i1l1013
  5495     03C7                     i1l1818:
  5496     03C7  3001               	movlw	1
  5497     03C8  00FF               	movwf	btemp+1
  5498     03C9  087F               	movf	btemp+1,w
  5499     03CA  07F6               	addwf	strncmp@l,f
  5500     03CB  3001               	movlw	1
  5501     03CC  00FF               	movwf	btemp+1
  5502     03CD  087F               	movf	btemp+1,w
  5503     03CE  07F1               	addwf	strncmp@r,f
  5504     03CF                     i1l1820:
  5505     03CF  3001               	movlw	1
  5506     03D0  02F2               	subwf	strncmp@n,f
  5507     03D1  3000               	movlw	0
  5508     03D2  1C03               	skipc
  5509     03D3  03F3               	decf	strncmp@n+1,f
  5510     03D4  02F3               	subwf	strncmp@n+1,f
  5511     03D5                     i1l1822:
  5512     03D5  0876               	movf	strncmp@l,w
  5513     03D6  0084               	movwf	4
  5514     03D7  1383               	bcf	3,7	;select IRP bank0
  5515     03D8  0800               	movf	0,w
  5516     03D9  1903               	btfsc	3,2
  5517     03DA  2BDC               	goto	u145_21
  5518     03DB  2BDD               	goto	u145_20
  5519     03DC                     u145_21:
  5520     03DC  2BFF               	goto	i1l1830
  5521     03DD                     u145_20:
  5522     03DD                     i1l1824:
  5523     03DD  0871               	movf	strncmp@r,w
  5524     03DE  0084               	movwf	4
  5525     03DF  120A  118A  2015  120A  118A  	fcall	stringdir
  5526     03E4  3A00               	xorlw	0
  5527     03E5  1903               	skipnz
  5528     03E6  2BE8               	goto	u146_21
  5529     03E7  2BE9               	goto	u146_20
  5530     03E8                     u146_21:
  5531     03E8  2BFF               	goto	i1l1830
  5532     03E9                     u146_20:
  5533     03E9                     i1l1826:
  5534     03E9  0872               	movf	strncmp@n,w
  5535     03EA  0473               	iorwf	strncmp@n+1,w
  5536     03EB  1903               	btfsc	3,2
  5537     03EC  2BEE               	goto	u147_21
  5538     03ED  2BEF               	goto	u147_20
  5539     03EE                     u147_21:
  5540     03EE  2BFF               	goto	i1l1830
  5541     03EF                     u147_20:
  5542     03EF                     i1l1828:
  5543     03EF  0871               	movf	strncmp@r,w
  5544     03F0  0084               	movwf	4
  5545     03F1  120A  118A  2015  120A  118A  	fcall	stringdir
  5546     03F6  00F4               	movwf	??_strncmp
  5547     03F7  0876               	movf	strncmp@l,w
  5548     03F8  0084               	movwf	4
  5549     03F9  0800               	movf	0,w
  5550     03FA  0674               	xorwf	??_strncmp,w
  5551     03FB  1903               	skipnz
  5552     03FC  2BFE               	goto	u148_21
  5553     03FD  2BFF               	goto	u148_20
  5554     03FE                     u148_21:
  5555     03FE  2BC7               	goto	i1l1818
  5556     03FF                     u148_20:
  5557     03FF                     i1l1830:
  5558     03FF  0871               	movf	strncmp@r,w
  5559     0400  0084               	movwf	4
  5560     0401  120A  118A  2015  120A  118A  	fcall	stringdir
  5561     0406  00F4               	movwf	??_strncmp
  5562     0407  0876               	movf	strncmp@l,w
  5563     0408  0084               	movwf	4
  5564     0409  0800               	movf	0,w
  5565     040A  00F5               	movwf	??_strncmp+1
  5566     040B  0874               	movf	??_strncmp,w
  5567     040C  0275               	subwf	??_strncmp+1,w
  5568     040D  00F1               	movwf	?_strncmp
  5569     040E  01F2               	clrf	?_strncmp+1
  5570     040F  1C03               	skipc
  5571     0410  03F2               	decf	?_strncmp+1,f
  5572     0411                     i1l1013:
  5573     0411  0008               	return
  5574     0412                     __end_of_strncmp:
  5575                           
  5576                           	psect	text21
  5577     0173                     __ptext21:	
  5578 ;; *************** function _strlen *****************
  5579 ;; Defined at:
  5580 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\strlen.c"
  5581 ;; Parameters:    Size  Location     Type
  5582 ;;  s               1    wreg     PTR const unsigned char 
  5583 ;;		 -> STR_8(2), STR_7(2), 
  5584 ;; Auto vars:     Size  Location     Type
  5585 ;;  s               1    3[COMMON] PTR const unsigned char 
  5586 ;;		 -> STR_8(2), STR_7(2), 
  5587 ;;  a               1    2[COMMON] PTR const unsigned char 
  5588 ;;		 -> STR_8(2), STR_7(2), 
  5589 ;; Return value:  Size  Location     Type
  5590 ;;                  2    0[COMMON] unsigned int 
  5591 ;; Registers used:
  5592 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  5593 ;; Tracked objects:
  5594 ;;		On entry : 0/0
  5595 ;;		On exit  : 0/0
  5596 ;;		Unchanged: 0/0
  5597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5598 ;;      Params:         2       0       0       0       0
  5599 ;;      Locals:         2       0       0       0       0
  5600 ;;      Temps:          0       0       0       0       0
  5601 ;;      Totals:         4       0       0       0       0
  5602 ;;Total ram usage:        4 bytes
  5603 ;; Hardware stack levels used: 2
  5604 ;; This function calls:
  5605 ;;		Nothing
  5606 ;; This function is called by:
  5607 ;;		_strstr
  5608 ;; This function uses a non-reentrant model
  5609 ;;
  5610                           
  5611     0173                     _strlen:	
  5612                           ;psect for function _strlen
  5613                           
  5614                           
  5615                           ;incstack = 0
  5616 ;; hardware stack exceeded
  5617                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  5618                           ;strlen@s stored from wreg
  5619     0173  00F4               	movwf	strlen@s
  5620     0174                     i1l1802:
  5621     0174  0874               	movf	strlen@s,w
  5622     0175  00F3               	movwf	strlen@a
  5623     0176  297B               	goto	i1l1806
  5624     0177                     i1l1804:
  5625     0177  3001               	movlw	1
  5626     0178  00FF               	movwf	btemp+1
  5627     0179  087F               	movf	btemp+1,w
  5628     017A  07F4               	addwf	strlen@s,f
  5629     017B                     i1l1806:
  5630     017B  0874               	movf	strlen@s,w
  5631     017C  0084               	movwf	4
  5632     017D  120A  118A  2015  120A  118A  	fcall	stringdir
  5633     0182  3A00               	xorlw	0
  5634     0183  1D03               	skipz
  5635     0184  2986               	goto	u143_21
  5636     0185  2987               	goto	u143_20
  5637     0186                     u143_21:
  5638     0186  2977               	goto	i1l1804
  5639     0187                     u143_20:
  5640     0187                     i1l1808:
  5641     0187  0873               	movf	strlen@a,w
  5642     0188  0274               	subwf	strlen@s,w
  5643     0189  00F1               	movwf	?_strlen
  5644     018A  01F2               	clrf	?_strlen+1
  5645     018B  1BF1               	btfsc	?_strlen,7
  5646     018C  03F2               	decf	?_strlen+1,f
  5647     018D                     i1l1009:
  5648     018D  0008               	return
  5649     018E                     __end_of_strlen:
  5650                           
  5651                           	psect	text22
  5652     012D                     __ptext22:	
  5653 ;; *************** function _strchr *****************
  5654 ;; Defined at:
  5655 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\strchr.c"
  5656 ;; Parameters:    Size  Location     Type
  5657 ;;  s               1    wreg     PTR const unsigned char 
  5658 ;;		 -> NULL(0), StringReceive(30), 
  5659 ;;  c               2    0[COMMON] int 
  5660 ;; Auto vars:     Size  Location     Type
  5661 ;;  s               1    2[COMMON] PTR const unsigned char 
  5662 ;;		 -> NULL(0), StringReceive(30), 
  5663 ;; Return value:  Size  Location     Type
  5664 ;;                  1    wreg      PTR unsigned char 
  5665 ;; Registers used:
  5666 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5667 ;; Tracked objects:
  5668 ;;		On entry : 0/0
  5669 ;;		On exit  : 0/0
  5670 ;;		Unchanged: 0/0
  5671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5672 ;;      Params:         2       0       0       0       0
  5673 ;;      Locals:         1       0       0       0       0
  5674 ;;      Temps:          0       0       0       0       0
  5675 ;;      Totals:         3       0       0       0       0
  5676 ;;Total ram usage:        3 bytes
  5677 ;; Hardware stack levels used: 1
  5678 ;; This function calls:
  5679 ;;		Nothing
  5680 ;; This function is called by:
  5681 ;;		_strstr
  5682 ;; This function uses a non-reentrant model
  5683 ;;
  5684                           
  5685     012D                     _strchr:	
  5686                           ;psect for function _strchr
  5687                           
  5688                           
  5689                           ;incstack = 0
  5690 ;; hardware stack exceeded
  5691                           ; Regs used in _strchr: [wreg-fsr0h+status,2+status,0]
  5692                           ;strchr@s stored from wreg
  5693     012D  00F3               	movwf	strchr@s
  5694     012E                     i1l1000:
  5695     012E                     i1l1834:
  5696     012E  0873               	movf	strchr@s,w
  5697     012F  0084               	movwf	4
  5698     0130  1383               	bcf	3,7	;select IRP bank0
  5699     0131  0800               	movf	0,w
  5700     0132  0671               	xorwf	strchr@c,w
  5701     0133  1D03               	skipz
  5702     0134  2936               	goto	u149_21
  5703     0135  2937               	goto	u149_20
  5704     0136                     u149_21:
  5705     0136  2939               	goto	i1l1840
  5706     0137                     u149_20:
  5707     0137                     i1l1836:
  5708     0137  0873               	movf	strchr@s,w
  5709     0138  2943               	goto	i1l1002
  5710     0139                     i1l1840:
  5711     0139  0873               	movf	strchr@s,w
  5712     013A  0084               	movwf	4
  5713     013B  3001               	movlw	1
  5714     013C  07F3               	addwf	strchr@s,f
  5715     013D  0800               	movf	0,w
  5716     013E  1D03               	btfss	3,2
  5717     013F  2941               	goto	u150_21
  5718     0140  2942               	goto	u150_20
  5719     0141                     u150_21:
  5720     0141  292E               	goto	i1l1000
  5721     0142                     u150_20:
  5722     0142                     i1l1842:
  5723     0142  3000               	movlw	0
  5724     0143                     i1l1002:
  5725     0143  0008               	return
  5726     0144                     __end_of_strchr:
  5727                           
  5728                           	psect	text23
  5729     018E                     __ptext23:	
  5730 ;; *************** function _ClearStringReceive *****************
  5731 ;; Defined at:
  5732 ;;		line 249 in file "main.c"
  5733 ;; Parameters:    Size  Location     Type
  5734 ;;		None
  5735 ;; Auto vars:     Size  Location     Type
  5736 ;;  i               2    0[COMMON] int 
  5737 ;; Return value:  Size  Location     Type
  5738 ;;                  1    wreg      void 
  5739 ;; Registers used:
  5740 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  5741 ;; Tracked objects:
  5742 ;;		On entry : 0/0
  5743 ;;		On exit  : 0/0
  5744 ;;		Unchanged: 0/0
  5745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5746 ;;      Params:         0       0       0       0       0
  5747 ;;      Locals:         2       0       0       0       0
  5748 ;;      Temps:          0       0       0       0       0
  5749 ;;      Totals:         2       0       0       0       0
  5750 ;;Total ram usage:        2 bytes
  5751 ;; Hardware stack levels used: 1
  5752 ;; This function calls:
  5753 ;;		Nothing
  5754 ;; This function is called by:
  5755 ;;		_setDoorStatus
  5756 ;; This function uses a non-reentrant model
  5757 ;;
  5758                           
  5759     018E                     _ClearStringReceive:	
  5760                           ;psect for function _ClearStringReceive
  5761                           
  5762     018E                     i1l1974:	
  5763                           ;incstack = 0
  5764                           ; Regs used in _ClearStringReceive: [wreg-fsr0h+status,2+status,0+btemp+1]
  5765                           
  5766                           
  5767                           ;main.c: 250:     pos = 0;
  5768     018E  1283               	bcf	3,5	;RP0=0, select bank0
  5769     018F  1303               	bcf	3,6	;RP1=0, select bank0
  5770     0190  01AC               	clrf	_pos
  5771     0191  01AD               	clrf	_pos+1
  5772                           
  5773                           ;main.c: 251:     for (int i = 0; i < 30; i++)
  5774     0192  01F1               	clrf	ClearStringReceive@i
  5775     0193  01F2               	clrf	ClearStringReceive@i+1
  5776     0194                     i1l1980:
  5777                           
  5778                           ;main.c: 252:         StringReceive[i] = '\0';
  5779     0194  0871               	movf	ClearStringReceive@i,w
  5780     0195  3E2E               	addlw	(low (_StringReceive| 0))& (0+255)
  5781     0196  0084               	movwf	4
  5782     0197  1383               	bcf	3,7	;select IRP bank0
  5783     0198  0180               	clrf	0
  5784     0199                     i1l1982:
  5785     0199  3001               	movlw	1
  5786     019A  07F1               	addwf	ClearStringReceive@i,f
  5787     019B  1803               	skipnc
  5788     019C  0AF2               	incf	ClearStringReceive@i+1,f
  5789     019D  3000               	movlw	0
  5790     019E  07F2               	addwf	ClearStringReceive@i+1,f
  5791     019F                     i1l1984:
  5792     019F  0872               	movf	ClearStringReceive@i+1,w
  5793     01A0  3A80               	xorlw	128
  5794     01A1  00FF               	movwf	btemp+1
  5795     01A2  3080               	movlw	128
  5796     01A3  027F               	subwf	btemp+1,w
  5797     01A4  1D03               	skipz
  5798     01A5  29A8               	goto	u165_25
  5799     01A6  301E               	movlw	30
  5800     01A7  0271               	subwf	ClearStringReceive@i,w
  5801     01A8                     u165_25:
  5802     01A8  1C03               	skipc
  5803     01A9  29AB               	goto	u165_21
  5804     01AA  29AC               	goto	u165_20
  5805     01AB                     u165_21:
  5806     01AB  2994               	goto	i1l1980
  5807     01AC                     u165_20:
  5808     01AC                     i1l291:
  5809     01AC  0008               	return
  5810     01AD                     __end_of_ClearStringReceive:
  5811     007E                     btemp	set	126	;btemp
  5812     007E                     wtemp0	set	126
  5813                           
  5814                           	psect	config
  5815                           
  5816                           ;Config register CONFIG1 @ 0x2007
  5817                           ;	Oscillator Selection bits
  5818                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  5819                           ;	Watchdog Timer Enable bit
  5820                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  5821                           ;	Power-up Timer Enable bit
  5822                           ;	PWRTE = OFF, PWRT disabled
  5823                           ;	RE3/MCLR pin function select bit
  5824                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  5825                           ;	Code Protection bit
  5826                           ;	CP = OFF, Program memory code protection is disabled
  5827                           ;	Data Code Protection bit
  5828                           ;	CPD = OFF, Data memory code protection is disabled
  5829                           ;	Brown Out Reset Selection bits
  5830                           ;	BOREN = ON, BOR enabled
  5831                           ;	Internal External Switchover bit
  5832                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  5833                           ;	Fail-Safe Clock Monitor Enabled bit
  5834                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  5835                           ;	Low Voltage Programming Enable bit
  5836                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  5837                           ;	In-Circuit Debugger Mode bit
  5838                           ;	DEBUG = 0x1, unprogrammed default
  5839     2007                     	org	8199
  5840     2007  23D2               	dw	9170
  5841                           
  5842                           ;Config register CONFIG2 @ 0x2008
  5843                           ;	Brown-out Reset Selection bit
  5844                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  5845                           ;	Flash Program Memory Self Write Enable bits
  5846                           ;	WRT = OFF, Write protection off
  5847     2008                     	org	8200
  5848     2008  3FFF               	dw	16383

Data Sizes:
    Strings     102
    Constant    17
    Data        2
    BSS         76
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           13     12      13
    BANK0            80     18      63
    BANK1            80      0      32
    BANK3            85      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCD_write_string@string	PTR unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[16]), STR_2(CODE[13]), STR_3(CODE[12]), STR_4(CODE[12]), 
		 -> STR_5(CODE[13]), STR_6(CODE[12]), STR_9(CODE[17]), 

    sp__strchr	PTR unsigned char  size(1) Largest target is 30
		 -> StringReceive(BANK0[30]), NULL(NULL[0]), 

    sp__strstr	PTR unsigned char  size(1) Largest target is 30
		 -> StringReceive(BANK0[30]), NULL(NULL[0]), 

    strchr@s	PTR const unsigned char  size(1) Largest target is 30
		 -> StringReceive(BANK0[30]), NULL(NULL[0]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 2
		 -> STR_7(CODE[2]), STR_8(CODE[2]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 2
		 -> STR_7(CODE[2]), STR_8(CODE[2]), 

    strncmp@l	PTR const unsigned char  size(1) Largest target is 30
		 -> StringReceive(BANK0[30]), NULL(NULL[0]), 

    strncmp@r	PTR const unsigned char  size(1) Largest target is 2
		 -> STR_7(CODE[2]), STR_8(CODE[2]), 

    strstr@h	PTR const unsigned char  size(1) Largest target is 30
		 -> StringReceive(BANK0[30]), NULL(NULL[0]), 

    strstr@n	PTR const unsigned char  size(1) Largest target is 2
		 -> STR_7(CODE[2]), STR_8(CODE[2]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _setDoorStatus->_strstr
    i1_LCD_write_string->i1_LCD_write_data
    i1_LCD_write_data->i1_LCD_pulse_clock
    i1_LCD_cursor_set->i1_LCD_write_command
    i1_LCD_write_command->i1_LCD_pulse_clock
    _strstr->_strncmp

Critical Paths under _main in BANK0

    _main->_picInit
    _picInit->_closeDoor
    _closeDoor->_LCD_cursor_set
    _closeDoor->_LCD_write_string
    _LCD_init->_LCD_clear
    _openDoor->_LCD_cursor_set
    _openDoor->_LCD_write_string
    _LCD_write_string->_LCD_write_data
    _LCD_write_data->_LCD_pulse_clock
    _LCD_cursor_set->_LCD_write_command
    _LCD_clear->_LCD_write_command
    _LCD_write_command->_LCD_pulse_clock

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    7830
                                             16 BANK0      2     2      0
                     _LCD_cursor_set
                          _closeDoor
                           _openDoor
                            _picInit
 ---------------------------------------------------------------------------------
 (1) _picInit                                              5     5      0    3595
                                             13 BANK0      3     3      0
                           _InitUART
                          _LCD_clear
                     _LCD_cursor_set
                           _LCD_init
                   _LCD_write_string
                          _closeDoor
 ---------------------------------------------------------------------------------
 (2) _closeDoor                                            3     3      0    1621
                                             10 BANK0      3     3      0
                          _LCD_clear
                     _LCD_cursor_set
                   _LCD_write_string
 ---------------------------------------------------------------------------------
 (2) _LCD_init                                             2     2      0     352
                                              9 BANK0      2     2      0
                          _LCD_clear
                    _LCD_pulse_clock
                  _LCD_write_command
 ---------------------------------------------------------------------------------
 (2) _InitUART                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _openDoor                                             3     3      0    1621
                                             10 BANK0      3     3      0
                          _LCD_clear
                     _LCD_cursor_set
                   _LCD_write_string
 ---------------------------------------------------------------------------------
 (3) _LCD_write_string                                     2     2      0     497
                                              8 BANK0      2     2      0
                     _LCD_write_data
 ---------------------------------------------------------------------------------
 (4) _LCD_write_data                                       3     3      0     176
                                              5 BANK0      3     3      0
                    _LCD_pulse_clock
 ---------------------------------------------------------------------------------
 (3) _LCD_cursor_set                                       2     1      1     948
                                              8 BANK0      2     1      1
                  _LCD_write_command
 ---------------------------------------------------------------------------------
 (3) _LCD_clear                                            1     1      0     176
                                              8 BANK0      1     1      0
                  _LCD_write_command
 ---------------------------------------------------------------------------------
 (4) _LCD_write_command                                    3     3      0     176
                                              5 BANK0      3     3      0
                    _LCD_pulse_clock
 ---------------------------------------------------------------------------------
 (5) _LCD_pulse_clock                                      1     1      0       0
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  4     4      0    1774
                                              0 BANK0      4     4      0
                      _setDoorStatus
 ---------------------------------------------------------------------------------
 (7) _setDoorStatus                                        0     0      0    1774
                 _ClearStringReceive
                             _strstr
                   i1_LCD_cursor_set
                 i1_LCD_write_string
 ---------------------------------------------------------------------------------
 (8) i1_LCD_write_string                                   2     2      0     266
                                              4 COMMON     2     2      0
                   i1_LCD_write_data
 ---------------------------------------------------------------------------------
 (9) i1_LCD_write_data                                     3     3      0     176
                                              1 COMMON     3     3      0
                  i1_LCD_pulse_clock
 ---------------------------------------------------------------------------------
 (8) i1_LCD_cursor_set                                     2     1      1     316
                                              4 COMMON     2     1      1
                i1_LCD_write_command
 ---------------------------------------------------------------------------------
 (9) i1_LCD_write_command                                  3     3      0     176
                                              1 COMMON     3     3      0
                  i1_LCD_pulse_clock
 ---------------------------------------------------------------------------------
 (10) i1_LCD_pulse_clock                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _strstr                                               6     5      1    1124
                                              6 COMMON     6     5      1
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (10) _strncmp                                             6     3      3     364
                                              0 COMMON     6     3      3
 ---------------------------------------------------------------------------------
 (10) _strlen                                              4     2      2     123
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (9) _strchr                                               3     1      2     197
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (8) _ClearStringReceive                                   2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_cursor_set
     _LCD_write_command
       _LCD_pulse_clock
   _closeDoor
     _LCD_clear
       _LCD_write_command
     _LCD_cursor_set
     _LCD_write_string
       _LCD_write_data
         _LCD_pulse_clock
   _openDoor
     _LCD_clear
     _LCD_cursor_set
     _LCD_write_string
   _picInit
     _InitUART
     _LCD_clear
     _LCD_cursor_set
     _LCD_init
       _LCD_clear
       _LCD_pulse_clock
       _LCD_write_command
     _LCD_write_string
     _closeDoor

 _ISR (ROOT)
   _setDoorStatus
     _ClearStringReceive
     _strstr
       _strchr
       _strlen
       _strncmp
     i1_LCD_cursor_set
       i1_LCD_write_command
         i1_LCD_pulse_clock
     i1_LCD_write_string
       i1_LCD_write_data
         i1_LCD_pulse_clock

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               55      0       0       9        0.0%
BITBANK3            55      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      20       7       40.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     12      3F       5       78.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               D      C       D       1      100.0%
BITCOMMON            D      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      6C      12        0.0%
ABS                  0      0      6C       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Wed Feb 07 00:22:01 2024

                          pc 0002                           l20 015A                           l84 0280  
                         fsr 0004                          l110 012C                          l103 04EE  
                        l146 073E                          l139 06AA                          l171 01F4  
                        l260 0747                          l328 0172                          l273 0339  
                        l283 042D                          l276 035F                          l286 0475  
                        l279 02C7                          _GIE 005F                          _RB0 0030  
                        _RB1 0031                          _RB2 0032                          _RB3 0033  
                        _RB4 0034                          _RB5 0035                          _RB6 0036  
                        _RB7 0037                          _ISR 01F5                          _pos 002C  
                        fsr0 0004                          indf 0000                         ?_ISR 0071  
                       l2060 031D                         l2300 074B                         l2070 0347  
                       l2062 032C                         l2310 0778                         l2302 075C  
                       l2080 028C                         l2072 0355                         l2064 0336  
                       l2056 0311                         l2320 0799                         l2312 077D  
                       l2304 0762                         l2090 02AC                         l2082 0294  
                       l2074 035A                         l2066 033D                         l2058 0317  
                       l2330 07BC                         l2322 07A3                         l2314 0787  
                       l2306 0767                         l2092 02B1                         l2084 029A  
                       l2076 0281                         l2068 0341                         l2340 07D7  
                       l2324 07AB                         l2332 07C0                         l2316 078F  
                       l2308 0772                         l2094 02C1                         l2086 029D  
                       l2078 0286                         l2334 07C6                         l2326 07B1  
                       l2318 0795                         l1800 01E7                         l2096 02C4  
                       l2088 029E                         l2336 07CC                         l2328 07B7  
                       l1730 0129                         l2098 02C5                         l2338 07D2  
                       l1740 067C                         l1732 061A                         l1900 04CD  
                       l1726 011F                         l1742 068F                         l1734 061B  
                       l1750 06AF                         l1910 04DB                         l1902 04CE  
                       l1728 0122                         l1744 069C                         l1736 0663  
                       l1760 0730                         l1752 06F7                         l1912 04E3  
                       l1904 04CF                         l1920 0421                         l2296 073F  
                       l1746 06A5                         l1738 0668                         l1770 0253  
                       l1762 0739                         l1754 06FC                         l1914 04E9  
                       l1906 04D0                         l1930 043A                         l1922 0427  
                       l2298 0744                         l1780 026C                         l1772 0258  
                       l1756 0710                         l1748 06AE                         l1908 04D5  
                       l1940 045A                         l1932 0442                         l1916 0412  
                       l1790 014A                         l1782 0270                         l1774 025C  
                       l1758 0723                         l1950 0473                         l1942 045F  
                       l1934 0448                         l1926 0431                         l1918 0417  
                       l1792 0154                         l1784 0276                         l1776 0262  
                       l1960 0165                         l1952 015B                         l1880 049A  
                       l1944 0469                         l1936 044B                         l1928 0436  
                       l1786 027A                         l1778 0266                         l1794 01D2  
                       l1970 0170                         l1962 0168                         l1954 0160  
                       l1890 04AB                         l1882 04A5                         l1946 046F  
                       l1938 044C                         l1788 0144                         l1796 01D4  
                       l1972 0171                         l1964 0169                         l1956 0161  
                       l1892 04B0                         l1884 04A8                         l1948 0472  
                       l1798 01E1                         l1966 016C                         l1958 0162  
                       l1894 04BF                         l1886 04A9                         l1878 0476  
                       l1968 016D                         l1896 04C5                         l1888 04AA  
                       l1898 04CA                         STR_1 003D                         STR_2 004D  
                       STR_3 0067                         STR_4 007F                         STR_5 005A  
                       STR_6 0073                         STR_7 0090                         STR_8 008E  
                       STR_9 002C                         _CREN 00C4                         u2100 078F  
                       u2101 078E                         u2110 0795                         u2111 0794  
                       u1400 026C                         u2120 0799                         u1305 066D  
                       u1401 026B                         u2121 0798                         u1410 0276  
                       u2130 07AB                         u2050 074B                         u1315 067F  
                       u1411 0275                         u2131 07AA                         u2051 074A  
                       _LEDO 0024                         u1420 01F4                         u2140 07B1  
                       u2060 075C                         u1325 06B2                         u1421 01F3  
                       u2141 07B0                         u2061 075B                         u2150 07B7  
                       u2070 0762                         u1335 06C4                         u2207 0454  
                       u2151 07B6                         u2071 0761                         u2160 07C6  
                       u2080 0772                         u1265 061E                         u1345 06D7  
                       u2217 04A0                         u2161 07C5                         u2081 0771  
                       u2170 07CC                         u2090 0778                         u1275 0630  
                       u1355 06E9                         u2227 04B6                         u2171 07CB  
                       u2091 0777                         u1380 0258                         u2180 07D2  
                       u1285 0643                         u1381 0257                         u1365 0701  
                       u2237 04C3                         u2181 07D1                         u1390 0262  
                       u1630 042D                         u1295 0655                         u1391 0261  
                       u1375 0713                         u2247 02A6                         u1631 042C  
                       u1640 0431                         u2257 014E                         u1641 0430  
                       u2267 0126                         u2197 034F                         u1780 033D  
                       u1781 033C                         _PEIE 005E                         _RCIF 0065  
                       i1l84 024F                         _OERR 00C1                         _TXIF 0064  
                       _main 073F                         btemp 007E  __end_ofi1_LCD_write_command 0583  
                       start 0012        __end_of_setDoorStatus 03B5                        ??_ISR 004C  
          ?i1_LCD_cursor_set 0075             __end_of_LCD_init 04EF                        ?_main 0071  
                      STR_10 008B           ??i1_LCD_cursor_set 0076                        i1l110 011E  
                      i1l146 0616                        i1l139 0582                        i1l171 01CE  
                      i1l254 0214                        i1l291 01AC                        i1l297 03B4  
                      i1l994 0310                        _RCREG 001A                        _SPBRG 0099  
                      _TXREG 0019                _StringDisplay 00A0              __end_of_picInit 0360  
              _StringReceive 002E                   _KeyPadChar 001B                        pclath 000A  
              main@adcResult 005C                        status 0003                        wtemp0 007E  
            __end_of_strncmp 0412              __initialization 07DF                 __end_of_main 07DF  
           __end_of_InitUART 0173            ?_LCD_write_string 0071                       ??_main 005C  
         ??_LCD_write_string 0054            __end_of_LCD_clear 015B                       _ADCON0 001F  
                     _ADCON1 009F                       _ADRESH 001E                       _ADRESL 009E  
        i1LCD_cursor_set@row 0076                       i1l1000 012E                       i1l1002 0143  
                     i1l1013 0411                       i1l2000 0307                       i1l1009 018D  
                     i1l2002 030F                       i1l2010 022B                       i1l2020 0245  
                     i1l2012 0231                       i1l2022 0249                       i1l2014 0235  
                     i1l2006 0222                       i1l2030 01C1                       i1l2016 023B  
                     i1l2008 0227                       i1l2024 01AE                       i1l2040 037C  
                     i1l2018 023F                       i1l2026 01B0                       i1l2050 03A1  
                     i1l2042 0389                       i1l2034 0360                       i1l2028 01BD  
                     i1l2052 03A6                       i1l2044 038D                       i1l2036 036D  
                     i1l2054 03AE                       i1l2046 0391                       i1l2038 0377  
                     i1l2048 0396                       i1l1802 0174                       i1l2290 0208  
                     i1l1804 0177                       i1l1820 03CF                       i1l1812 03B6  
                     i1l2292 020E                       i1l2284 01F5                       i1l1806 017B  
                     i1l1830 03FF                       i1l1814 03C4                       i1l1822 03D5  
                     i1l2286 01F9                       i1l2294 020F                       i1l1840 0139  
                     i1l1808 0187                       i1l1824 03DD                       i1l2288 0202  
                     i1l1842 0142                       i1l1834 012E                       i1l1826 03E9  
                     i1l1818 03C7                       i1l1850 053B                       i1l1836 0137  
                     i1l1828 03EF                       i1l1764 0114                       i1l1860 057D  
                     i1l1852 0540                       i1l1766 0117                       i1l1854 0554  
                     i1l1846 04F0                       i1l1870 05E8                       i1l1862 0584  
                     i1l1768 011B                       i1l1856 0567                       i1l1848 04F3  
                     i1l1872 05FB                       i1l1864 0587                       u203_20 01F9  
                     u203_21 01F8                       i1l1858 0574                       i1l1874 0608  
                     i1l1866 05CF                       i1l1980 0194                       i1l1876 0611  
                     i1l1868 05D4                       i1l1982 0199                       i1l1974 018E  
                     i1l1990 02D9                       i1l1984 019F                       i1l1992 02EB  
                     u204_20 0202                       u204_21 0201                       i1l1986 02C9  
                     i1l1996 02ED                       i1l1988 02CE                       i1l1998 0302  
                     u150_20 0142                       u150_21 0141                       u143_20 0187  
                     u143_21 0186                       u151_25 04F6                       u144_20 03C4  
                     u144_21 03C3                       u152_25 0508                       u160_25 05C1  
                     u145_20 03DD                       u145_21 03DC                       u153_25 051B  
                     u161_25 05D7                       u146_20 03E9                       u170_20 0227  
                     u146_21 03E8                       u170_21 0226                       u154_25 052D  
                     u162_25 05EB                       u147_20 03EF                       u171_20 0231  
                     u147_21 03EE                       u171_21 0230                       u155_25 0543  
                     u227_27 0119                       u148_20 03FF                       u172_20 023B  
                     u148_21 03FE                       u172_21 023A                       u156_25 0557  
                     u165_20 01AC                       u149_20 0137                       u173_20 0245  
                     u165_21 01AB                       u149_21 0136                       u173_21 0244  
                     u165_25 01A8                       u157_25 058A                       u166_20 02CE  
                     u174_20 01CE                       u166_21 02CD                       u174_21 01CD  
                     u158_25 059C                       u167_20 02EB                       u175_20 036D  
                     u167_21 02EA                       u175_21 036C                       u159_25 05AF  
                     u168_20 0307                       u176_20 0389                       u168_21 0306  
                     u176_21 0388                       u169_20 030F                       u177_20 03A1  
                     u169_21 030E                       u177_21 03A0       LCD_write_string@string 0055  
                     _TRISB0 0430                       _TRISB1 0431                       _TRISB2 0432  
                     _TRISB3 0433                       _TRISB4 0434                       _TRISB5 0435  
                     _TRISB6 0436                       _TRISB7 0437                       _TRISC6 043E  
                     _TRISC7 043F            ?i1_LCD_write_data 0071           ??i1_LCD_write_data 0072  
                     _strchr 012D                       _strlen 0173             __end_of_openDoor 02C8  
                     _strstr 02C8   __end_of_ClearStringReceive 01AD                    ??_picInit 0059  
               __pdataCOMMON 007D                       saved_w 007E                    ??_strncmp 0074  
    __end_of__initialization 07FC                    ?_LCD_init 0071               __pcstackCOMMON 0071  
               __pidataBANK0 010A               _LCD_entry_mode 007D            _LCD_write_command 0617  
        i1LCD_write_string@i 0076               _LCD_cursor_set 0250           ?_LCD_write_command 0071  
        ??_LCD_write_command 0051                   __pbssBANK0 0020                   __pbssBANK1 00A0  
                  ?_InitUART 0071                   ??_LCD_init 0055            i1_LCD_pulse_clock 0114  
  __end_of_LCD_write_command 06AB                   __pmaintext 073F           ?i1_LCD_pulse_clock 0071  
     __end_of_LCD_cursor_set 0281                   __pintentry 0004          ClearStringReceive@i 0071  
        ??i1_LCD_pulse_clock 0071                      ?_strchr 0071                      ?_strlen 0071  
                    ?_strstr 0077                   __stringtab 0015     LCD_write_command@command 0053  
                 ??_InitUART 0050                   _doorStatus 002A    __end_ofi1_LCD_pulse_clock 011F  
     i1LCD_cursor_set@column 0075                    ?_openDoor 0071            __end_of_closeDoor 0476  
            ?_LCD_cursor_set 0054               _LCD_write_data 06AB                      __ptext1 0311  
                    __ptext2 0412                      __ptext3 0476                      __ptext4 015B  
                    __ptext5 0281                      __ptext6 01CF                      __ptext7 06AB  
                    __ptext8 0250                      __ptext9 0144                      _picInit 0311  
 i1LCD_write_command@command 0074         i1LCD_write_data@data 0074                      clrloop0 010D  
                    _strncmp 03B5                    _LCD_clear 0144         end_of_initialization 07FC  
       LCD_cursor_set@column 0054                   ??_openDoor 0056          _LCD_display_control 005E  
     __end_of_LCD_write_data 073F                    _RCSTAbits 0018                      strchr@c 0071  
                    strchr@s 0073                      strlen@a 0073                      strlen@s 0074  
                    strstr@h 007C                      strstr@n 0077                    _PORTBbits 0006  
                  _PORTDbits 0008            ??_LCD_pulse_clock 0050                    _TRISBbits 0086  
                  _TRISDbits 0088                   ?_LCD_clear 0071           _ClearStringReceive 018E  
                  _TXSTAbits 0098          ?_ClearStringReceive 0071              ?_LCD_write_data 0071  
              _setDoorStatus 0360   __end_ofi1_LCD_write_string 01CF                __pidataCOMMON 010B  
         __end_of_KeyPadChar 002C               __end_of_strchr 0144               __end_of_strlen 018E  
             __end_of_strstr 0311          start_initialization 07DF         ??_ClearStringReceive 0071  
                __end_of_ISR 0221             i1_LCD_cursor_set 0221               ?_setDoorStatus 0071  
                __pdataBANK0 005E                     ??_strchr 0073                     ??_strlen 0073  
                   ??_strstr 0078                    ___latbits 0002                __pcstackBANK0 004C  
        i1_LCD_write_command 04EF                  ??_LCD_clear 0054             _LCD_write_string 01CF  
           ??_LCD_cursor_set 0055         ?i1_LCD_write_command 0071                    _closeDoor 0412  
                  __pstrings 0015                    _doorClose 0026                     ?_picInit 0071  
           i1_LCD_write_data 0583           LCD_write_data@data 0053                     ?_strncmp 0071  
          interrupt_function 0004                     _LCD_init 0476                    clear_ram0 010C  
                   _PIE1bits 008C              ??_setDoorStatus 007D                     _PIR1bits 000C  
                   _GO_nDONE 00F9              _LCD_pulse_clock 011F        ??i1_LCD_write_command 0072  
                 ?_closeDoor 0071                  __stringbase 001A                     _InitUART 015B  
           ??_LCD_write_data 0051                    modff@F522 0020            LCD_cursor_set@row 0055  
   __end_ofi1_LCD_cursor_set 0250           __end_of__stringtab 001B           i1_LCD_write_string 01AD  
                   __ptext10 0617                     __ptext11 011F                     __ptext20 03B5  
                   __ptext12 01F5                     __ptext21 0173                     __ptext13 0360  
                   __ptext22 012D                     __ptext14 01AD                     __ptext23 018E  
                   __ptext15 0583                     __ptext16 0221                     __ptext17 04EF  
                   __ptext18 0114                     __ptext19 02C8          ?i1_LCD_write_string 0071  
    __end_of_LCD_pulse_clock 012D                     _openDoor 0281         ??i1_LCD_write_string 0075  
                ??_closeDoor 0056     __end_of_LCD_write_string 01F5     i1LCD_write_string@string 0075  
          LCD_write_string@i 0054                     intlevel1 0000                    stringcode 0015  
   __end_ofi1_LCD_write_data 0617                     strncmp@l 0076                     strncmp@n 0072  
                   strncmp@r 0071                     stringdir 0015                     stringtab 0015  
                   strstr@nl 007A                 _StatusChange 0028             ?_LCD_pulse_clock 0071  
