

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Thu Jan 25 04:12:24 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	strings,global,class=STRING,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	maintext,global,class=CODE,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2
    38                           	psect	intentry,global,class=CODE,delta=2
    39                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    40                           	dabs	1,0x7E,2
    41     0000                     
    42                           ; Generated 22/03/2023 GMT
    43                           ; 
    44                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    45                           ; All rights reserved.
    46                           ; 
    47                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    48                           ; 
    49                           ; Redistribution and use in source and binary forms, with or without modification, are
    50                           ; permitted provided that the following conditions are met:
    51                           ; 
    52                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    53                           ;        conditions and the following disclaimer.
    54                           ; 
    55                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    56                           ;        of conditions and the following disclaimer in the documentation and/or other
    57                           ;        materials provided with the distribution. Publication is not required when
    58                           ;        this file is used in an embedded application.
    59                           ; 
    60                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    61                           ;        software without specific prior written permission.
    62                           ; 
    63                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    64                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    65                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    66                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    67                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    68                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    69                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    70                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    71                           ; 
    72                           ; 
    73                           ; Code-generator required, PIC16F887 Definitions
    74                           ; 
    75                           ; SFR Addresses
    76     0000                     	;# 
    77     0001                     	;# 
    78     0002                     	;# 
    79     0003                     	;# 
    80     0004                     	;# 
    81     0005                     	;# 
    82     0006                     	;# 
    83     0007                     	;# 
    84     0008                     	;# 
    85     0009                     	;# 
    86     000A                     	;# 
    87     000B                     	;# 
    88     000C                     	;# 
    89     000D                     	;# 
    90     000E                     	;# 
    91     000E                     	;# 
    92     000F                     	;# 
    93     0010                     	;# 
    94     0011                     	;# 
    95     0012                     	;# 
    96     0013                     	;# 
    97     0014                     	;# 
    98     0015                     	;# 
    99     0015                     	;# 
   100     0016                     	;# 
   101     0017                     	;# 
   102     0018                     	;# 
   103     0019                     	;# 
   104     001A                     	;# 
   105     001B                     	;# 
   106     001B                     	;# 
   107     001C                     	;# 
   108     001D                     	;# 
   109     001E                     	;# 
   110     001F                     	;# 
   111     0081                     	;# 
   112     0085                     	;# 
   113     0086                     	;# 
   114     0087                     	;# 
   115     0088                     	;# 
   116     0089                     	;# 
   117     008C                     	;# 
   118     008D                     	;# 
   119     008E                     	;# 
   120     008F                     	;# 
   121     0090                     	;# 
   122     0091                     	;# 
   123     0092                     	;# 
   124     0093                     	;# 
   125     0093                     	;# 
   126     0093                     	;# 
   127     0094                     	;# 
   128     0095                     	;# 
   129     0096                     	;# 
   130     0097                     	;# 
   131     0098                     	;# 
   132     0099                     	;# 
   133     009A                     	;# 
   134     009B                     	;# 
   135     009C                     	;# 
   136     009D                     	;# 
   137     009E                     	;# 
   138     009F                     	;# 
   139     0105                     	;# 
   140     0107                     	;# 
   141     0108                     	;# 
   142     0109                     	;# 
   143     010C                     	;# 
   144     010C                     	;# 
   145     010D                     	;# 
   146     010E                     	;# 
   147     010F                     	;# 
   148     0185                     	;# 
   149     0187                     	;# 
   150     0188                     	;# 
   151     0189                     	;# 
   152     018C                     	;# 
   153     018D                     	;# 
   154     0000                     	;# 
   155     0001                     	;# 
   156     0002                     	;# 
   157     0003                     	;# 
   158     0004                     	;# 
   159     0005                     	;# 
   160     0006                     	;# 
   161     0007                     	;# 
   162     0008                     	;# 
   163     0009                     	;# 
   164     000A                     	;# 
   165     000B                     	;# 
   166     000C                     	;# 
   167     000D                     	;# 
   168     000E                     	;# 
   169     000E                     	;# 
   170     000F                     	;# 
   171     0010                     	;# 
   172     0011                     	;# 
   173     0012                     	;# 
   174     0013                     	;# 
   175     0014                     	;# 
   176     0015                     	;# 
   177     0015                     	;# 
   178     0016                     	;# 
   179     0017                     	;# 
   180     0018                     	;# 
   181     0019                     	;# 
   182     001A                     	;# 
   183     001B                     	;# 
   184     001B                     	;# 
   185     001C                     	;# 
   186     001D                     	;# 
   187     001E                     	;# 
   188     001F                     	;# 
   189     0081                     	;# 
   190     0085                     	;# 
   191     0086                     	;# 
   192     0087                     	;# 
   193     0088                     	;# 
   194     0089                     	;# 
   195     008C                     	;# 
   196     008D                     	;# 
   197     008E                     	;# 
   198     008F                     	;# 
   199     0090                     	;# 
   200     0091                     	;# 
   201     0092                     	;# 
   202     0093                     	;# 
   203     0093                     	;# 
   204     0093                     	;# 
   205     0094                     	;# 
   206     0095                     	;# 
   207     0096                     	;# 
   208     0097                     	;# 
   209     0098                     	;# 
   210     0099                     	;# 
   211     009A                     	;# 
   212     009B                     	;# 
   213     009C                     	;# 
   214     009D                     	;# 
   215     009E                     	;# 
   216     009F                     	;# 
   217     0105                     	;# 
   218     0107                     	;# 
   219     0108                     	;# 
   220     0109                     	;# 
   221     010C                     	;# 
   222     010C                     	;# 
   223     010D                     	;# 
   224     010E                     	;# 
   225     010F                     	;# 
   226     0185                     	;# 
   227     0187                     	;# 
   228     0188                     	;# 
   229     0189                     	;# 
   230     018C                     	;# 
   231     018D                     	;# 
   232     0000                     	;# 
   233     0001                     	;# 
   234     0002                     	;# 
   235     0003                     	;# 
   236     0004                     	;# 
   237     0005                     	;# 
   238     0006                     	;# 
   239     0007                     	;# 
   240     0008                     	;# 
   241     0009                     	;# 
   242     000A                     	;# 
   243     000B                     	;# 
   244     000C                     	;# 
   245     000D                     	;# 
   246     000E                     	;# 
   247     000E                     	;# 
   248     000F                     	;# 
   249     0010                     	;# 
   250     0011                     	;# 
   251     0012                     	;# 
   252     0013                     	;# 
   253     0014                     	;# 
   254     0015                     	;# 
   255     0015                     	;# 
   256     0016                     	;# 
   257     0017                     	;# 
   258     0018                     	;# 
   259     0019                     	;# 
   260     001A                     	;# 
   261     001B                     	;# 
   262     001B                     	;# 
   263     001C                     	;# 
   264     001D                     	;# 
   265     001E                     	;# 
   266     001F                     	;# 
   267     0081                     	;# 
   268     0085                     	;# 
   269     0086                     	;# 
   270     0087                     	;# 
   271     0088                     	;# 
   272     0089                     	;# 
   273     008C                     	;# 
   274     008D                     	;# 
   275     008E                     	;# 
   276     008F                     	;# 
   277     0090                     	;# 
   278     0091                     	;# 
   279     0092                     	;# 
   280     0093                     	;# 
   281     0093                     	;# 
   282     0093                     	;# 
   283     0094                     	;# 
   284     0095                     	;# 
   285     0096                     	;# 
   286     0097                     	;# 
   287     0098                     	;# 
   288     0099                     	;# 
   289     009A                     	;# 
   290     009B                     	;# 
   291     009C                     	;# 
   292     009D                     	;# 
   293     009E                     	;# 
   294     009F                     	;# 
   295     0105                     	;# 
   296     0107                     	;# 
   297     0108                     	;# 
   298     0109                     	;# 
   299     010C                     	;# 
   300     010C                     	;# 
   301     010D                     	;# 
   302     010E                     	;# 
   303     010F                     	;# 
   304     0185                     	;# 
   305     0187                     	;# 
   306     0188                     	;# 
   307     0189                     	;# 
   308     018C                     	;# 
   309     018D                     	;# 
   310     0000                     	;# 
   311     0001                     	;# 
   312     0002                     	;# 
   313     0003                     	;# 
   314     0004                     	;# 
   315     0005                     	;# 
   316     0006                     	;# 
   317     0007                     	;# 
   318     0008                     	;# 
   319     0009                     	;# 
   320     000A                     	;# 
   321     000B                     	;# 
   322     000C                     	;# 
   323     000D                     	;# 
   324     000E                     	;# 
   325     000E                     	;# 
   326     000F                     	;# 
   327     0010                     	;# 
   328     0011                     	;# 
   329     0012                     	;# 
   330     0013                     	;# 
   331     0014                     	;# 
   332     0015                     	;# 
   333     0015                     	;# 
   334     0016                     	;# 
   335     0017                     	;# 
   336     0018                     	;# 
   337     0019                     	;# 
   338     001A                     	;# 
   339     001B                     	;# 
   340     001B                     	;# 
   341     001C                     	;# 
   342     001D                     	;# 
   343     001E                     	;# 
   344     001F                     	;# 
   345     0081                     	;# 
   346     0085                     	;# 
   347     0086                     	;# 
   348     0087                     	;# 
   349     0088                     	;# 
   350     0089                     	;# 
   351     008C                     	;# 
   352     008D                     	;# 
   353     008E                     	;# 
   354     008F                     	;# 
   355     0090                     	;# 
   356     0091                     	;# 
   357     0092                     	;# 
   358     0093                     	;# 
   359     0093                     	;# 
   360     0093                     	;# 
   361     0094                     	;# 
   362     0095                     	;# 
   363     0096                     	;# 
   364     0097                     	;# 
   365     0098                     	;# 
   366     0099                     	;# 
   367     009A                     	;# 
   368     009B                     	;# 
   369     009C                     	;# 
   370     009D                     	;# 
   371     009E                     	;# 
   372     009F                     	;# 
   373     0105                     	;# 
   374     0107                     	;# 
   375     0108                     	;# 
   376     0109                     	;# 
   377     010C                     	;# 
   378     010C                     	;# 
   379     010D                     	;# 
   380     010E                     	;# 
   381     010F                     	;# 
   382     0185                     	;# 
   383     0187                     	;# 
   384     0188                     	;# 
   385     0189                     	;# 
   386     018C                     	;# 
   387     018D                     	;# 
   388     0000                     	;# 
   389     0001                     	;# 
   390     0002                     	;# 
   391     0003                     	;# 
   392     0004                     	;# 
   393     0005                     	;# 
   394     0006                     	;# 
   395     0007                     	;# 
   396     0008                     	;# 
   397     0009                     	;# 
   398     000A                     	;# 
   399     000B                     	;# 
   400     000C                     	;# 
   401     000D                     	;# 
   402     000E                     	;# 
   403     000E                     	;# 
   404     000F                     	;# 
   405     0010                     	;# 
   406     0011                     	;# 
   407     0012                     	;# 
   408     0013                     	;# 
   409     0014                     	;# 
   410     0015                     	;# 
   411     0015                     	;# 
   412     0016                     	;# 
   413     0017                     	;# 
   414     0018                     	;# 
   415     0019                     	;# 
   416     001A                     	;# 
   417     001B                     	;# 
   418     001B                     	;# 
   419     001C                     	;# 
   420     001D                     	;# 
   421     001E                     	;# 
   422     001F                     	;# 
   423     0081                     	;# 
   424     0085                     	;# 
   425     0086                     	;# 
   426     0087                     	;# 
   427     0088                     	;# 
   428     0089                     	;# 
   429     008C                     	;# 
   430     008D                     	;# 
   431     008E                     	;# 
   432     008F                     	;# 
   433     0090                     	;# 
   434     0091                     	;# 
   435     0092                     	;# 
   436     0093                     	;# 
   437     0093                     	;# 
   438     0093                     	;# 
   439     0094                     	;# 
   440     0095                     	;# 
   441     0096                     	;# 
   442     0097                     	;# 
   443     0098                     	;# 
   444     0099                     	;# 
   445     009A                     	;# 
   446     009B                     	;# 
   447     009C                     	;# 
   448     009D                     	;# 
   449     009E                     	;# 
   450     009F                     	;# 
   451     0105                     	;# 
   452     0107                     	;# 
   453     0108                     	;# 
   454     0109                     	;# 
   455     010C                     	;# 
   456     010C                     	;# 
   457     010D                     	;# 
   458     010E                     	;# 
   459     010F                     	;# 
   460     0185                     	;# 
   461     0187                     	;# 
   462     0188                     	;# 
   463     0189                     	;# 
   464     018C                     	;# 
   465     018D                     	;# 
   466     0000                     	;# 
   467     0001                     	;# 
   468     0002                     	;# 
   469     0003                     	;# 
   470     0004                     	;# 
   471     0005                     	;# 
   472     0006                     	;# 
   473     0007                     	;# 
   474     0008                     	;# 
   475     0009                     	;# 
   476     000A                     	;# 
   477     000B                     	;# 
   478     000C                     	;# 
   479     000D                     	;# 
   480     000E                     	;# 
   481     000E                     	;# 
   482     000F                     	;# 
   483     0010                     	;# 
   484     0011                     	;# 
   485     0012                     	;# 
   486     0013                     	;# 
   487     0014                     	;# 
   488     0015                     	;# 
   489     0015                     	;# 
   490     0016                     	;# 
   491     0017                     	;# 
   492     0018                     	;# 
   493     0019                     	;# 
   494     001A                     	;# 
   495     001B                     	;# 
   496     001B                     	;# 
   497     001C                     	;# 
   498     001D                     	;# 
   499     001E                     	;# 
   500     001F                     	;# 
   501     0081                     	;# 
   502     0085                     	;# 
   503     0086                     	;# 
   504     0087                     	;# 
   505     0088                     	;# 
   506     0089                     	;# 
   507     008C                     	;# 
   508     008D                     	;# 
   509     008E                     	;# 
   510     008F                     	;# 
   511     0090                     	;# 
   512     0091                     	;# 
   513     0092                     	;# 
   514     0093                     	;# 
   515     0093                     	;# 
   516     0093                     	;# 
   517     0094                     	;# 
   518     0095                     	;# 
   519     0096                     	;# 
   520     0097                     	;# 
   521     0098                     	;# 
   522     0099                     	;# 
   523     009A                     	;# 
   524     009B                     	;# 
   525     009C                     	;# 
   526     009D                     	;# 
   527     009E                     	;# 
   528     009F                     	;# 
   529     0105                     	;# 
   530     0107                     	;# 
   531     0108                     	;# 
   532     0109                     	;# 
   533     010C                     	;# 
   534     010C                     	;# 
   535     010D                     	;# 
   536     010E                     	;# 
   537     010F                     	;# 
   538     0185                     	;# 
   539     0187                     	;# 
   540     0188                     	;# 
   541     0189                     	;# 
   542     018C                     	;# 
   543     018D                     	;# 
   544     0000                     	;# 
   545     0001                     	;# 
   546     0002                     	;# 
   547     0003                     	;# 
   548     0004                     	;# 
   549     0005                     	;# 
   550     0006                     	;# 
   551     0007                     	;# 
   552     0008                     	;# 
   553     0009                     	;# 
   554     000A                     	;# 
   555     000B                     	;# 
   556     000C                     	;# 
   557     000D                     	;# 
   558     000E                     	;# 
   559     000E                     	;# 
   560     000F                     	;# 
   561     0010                     	;# 
   562     0011                     	;# 
   563     0012                     	;# 
   564     0013                     	;# 
   565     0014                     	;# 
   566     0015                     	;# 
   567     0015                     	;# 
   568     0016                     	;# 
   569     0017                     	;# 
   570     0018                     	;# 
   571     0019                     	;# 
   572     001A                     	;# 
   573     001B                     	;# 
   574     001B                     	;# 
   575     001C                     	;# 
   576     001D                     	;# 
   577     001E                     	;# 
   578     001F                     	;# 
   579     0081                     	;# 
   580     0085                     	;# 
   581     0086                     	;# 
   582     0087                     	;# 
   583     0088                     	;# 
   584     0089                     	;# 
   585     008C                     	;# 
   586     008D                     	;# 
   587     008E                     	;# 
   588     008F                     	;# 
   589     0090                     	;# 
   590     0091                     	;# 
   591     0092                     	;# 
   592     0093                     	;# 
   593     0093                     	;# 
   594     0093                     	;# 
   595     0094                     	;# 
   596     0095                     	;# 
   597     0096                     	;# 
   598     0097                     	;# 
   599     0098                     	;# 
   600     0099                     	;# 
   601     009A                     	;# 
   602     009B                     	;# 
   603     009C                     	;# 
   604     009D                     	;# 
   605     009E                     	;# 
   606     009F                     	;# 
   607     0105                     	;# 
   608     0107                     	;# 
   609     0108                     	;# 
   610     0109                     	;# 
   611     010C                     	;# 
   612     010C                     	;# 
   613     010D                     	;# 
   614     010E                     	;# 
   615     010F                     	;# 
   616     0185                     	;# 
   617     0187                     	;# 
   618     0188                     	;# 
   619     0189                     	;# 
   620     018C                     	;# 
   621     018D                     	;# 
   622     0000                     	;# 
   623     0001                     	;# 
   624     0002                     	;# 
   625     0003                     	;# 
   626     0004                     	;# 
   627     0005                     	;# 
   628     0006                     	;# 
   629     0007                     	;# 
   630     0008                     	;# 
   631     0009                     	;# 
   632     000A                     	;# 
   633     000B                     	;# 
   634     000C                     	;# 
   635     000D                     	;# 
   636     000E                     	;# 
   637     000E                     	;# 
   638     000F                     	;# 
   639     0010                     	;# 
   640     0011                     	;# 
   641     0012                     	;# 
   642     0013                     	;# 
   643     0014                     	;# 
   644     0015                     	;# 
   645     0015                     	;# 
   646     0016                     	;# 
   647     0017                     	;# 
   648     0018                     	;# 
   649     0019                     	;# 
   650     001A                     	;# 
   651     001B                     	;# 
   652     001B                     	;# 
   653     001C                     	;# 
   654     001D                     	;# 
   655     001E                     	;# 
   656     001F                     	;# 
   657     0081                     	;# 
   658     0085                     	;# 
   659     0086                     	;# 
   660     0087                     	;# 
   661     0088                     	;# 
   662     0089                     	;# 
   663     008C                     	;# 
   664     008D                     	;# 
   665     008E                     	;# 
   666     008F                     	;# 
   667     0090                     	;# 
   668     0091                     	;# 
   669     0092                     	;# 
   670     0093                     	;# 
   671     0093                     	;# 
   672     0093                     	;# 
   673     0094                     	;# 
   674     0095                     	;# 
   675     0096                     	;# 
   676     0097                     	;# 
   677     0098                     	;# 
   678     0099                     	;# 
   679     009A                     	;# 
   680     009B                     	;# 
   681     009C                     	;# 
   682     009D                     	;# 
   683     009E                     	;# 
   684     009F                     	;# 
   685     0105                     	;# 
   686     0107                     	;# 
   687     0108                     	;# 
   688     0109                     	;# 
   689     010C                     	;# 
   690     010C                     	;# 
   691     010D                     	;# 
   692     010E                     	;# 
   693     010F                     	;# 
   694     0185                     	;# 
   695     0187                     	;# 
   696     0188                     	;# 
   697     0189                     	;# 
   698     018C                     	;# 
   699     018D                     	;# 
   700     0000                     	;# 
   701     0001                     	;# 
   702     0002                     	;# 
   703     0003                     	;# 
   704     0004                     	;# 
   705     0005                     	;# 
   706     0006                     	;# 
   707     0007                     	;# 
   708     0008                     	;# 
   709     0009                     	;# 
   710     000A                     	;# 
   711     000B                     	;# 
   712     000C                     	;# 
   713     000D                     	;# 
   714     000E                     	;# 
   715     000E                     	;# 
   716     000F                     	;# 
   717     0010                     	;# 
   718     0011                     	;# 
   719     0012                     	;# 
   720     0013                     	;# 
   721     0014                     	;# 
   722     0015                     	;# 
   723     0015                     	;# 
   724     0016                     	;# 
   725     0017                     	;# 
   726     0018                     	;# 
   727     0019                     	;# 
   728     001A                     	;# 
   729     001B                     	;# 
   730     001B                     	;# 
   731     001C                     	;# 
   732     001D                     	;# 
   733     001E                     	;# 
   734     001F                     	;# 
   735     0081                     	;# 
   736     0085                     	;# 
   737     0086                     	;# 
   738     0087                     	;# 
   739     0088                     	;# 
   740     0089                     	;# 
   741     008C                     	;# 
   742     008D                     	;# 
   743     008E                     	;# 
   744     008F                     	;# 
   745     0090                     	;# 
   746     0091                     	;# 
   747     0092                     	;# 
   748     0093                     	;# 
   749     0093                     	;# 
   750     0093                     	;# 
   751     0094                     	;# 
   752     0095                     	;# 
   753     0096                     	;# 
   754     0097                     	;# 
   755     0098                     	;# 
   756     0099                     	;# 
   757     009A                     	;# 
   758     009B                     	;# 
   759     009C                     	;# 
   760     009D                     	;# 
   761     009E                     	;# 
   762     009F                     	;# 
   763     0105                     	;# 
   764     0107                     	;# 
   765     0108                     	;# 
   766     0109                     	;# 
   767     010C                     	;# 
   768     010C                     	;# 
   769     010D                     	;# 
   770     010E                     	;# 
   771     010F                     	;# 
   772     0185                     	;# 
   773     0187                     	;# 
   774     0188                     	;# 
   775     0189                     	;# 
   776     018C                     	;# 
   777     018D                     	;# 
   778     0000                     	;# 
   779     0001                     	;# 
   780     0002                     	;# 
   781     0003                     	;# 
   782     0004                     	;# 
   783     0005                     	;# 
   784     0006                     	;# 
   785     0007                     	;# 
   786     0008                     	;# 
   787     0009                     	;# 
   788     000A                     	;# 
   789     000B                     	;# 
   790     000C                     	;# 
   791     000D                     	;# 
   792     000E                     	;# 
   793     000E                     	;# 
   794     000F                     	;# 
   795     0010                     	;# 
   796     0011                     	;# 
   797     0012                     	;# 
   798     0013                     	;# 
   799     0014                     	;# 
   800     0015                     	;# 
   801     0015                     	;# 
   802     0016                     	;# 
   803     0017                     	;# 
   804     0018                     	;# 
   805     0019                     	;# 
   806     001A                     	;# 
   807     001B                     	;# 
   808     001B                     	;# 
   809     001C                     	;# 
   810     001D                     	;# 
   811     001E                     	;# 
   812     001F                     	;# 
   813     0081                     	;# 
   814     0085                     	;# 
   815     0086                     	;# 
   816     0087                     	;# 
   817     0088                     	;# 
   818     0089                     	;# 
   819     008C                     	;# 
   820     008D                     	;# 
   821     008E                     	;# 
   822     008F                     	;# 
   823     0090                     	;# 
   824     0091                     	;# 
   825     0092                     	;# 
   826     0093                     	;# 
   827     0093                     	;# 
   828     0093                     	;# 
   829     0094                     	;# 
   830     0095                     	;# 
   831     0096                     	;# 
   832     0097                     	;# 
   833     0098                     	;# 
   834     0099                     	;# 
   835     009A                     	;# 
   836     009B                     	;# 
   837     009C                     	;# 
   838     009D                     	;# 
   839     009E                     	;# 
   840     009F                     	;# 
   841     0105                     	;# 
   842     0107                     	;# 
   843     0108                     	;# 
   844     0109                     	;# 
   845     010C                     	;# 
   846     010C                     	;# 
   847     010D                     	;# 
   848     010E                     	;# 
   849     010F                     	;# 
   850     0185                     	;# 
   851     0187                     	;# 
   852     0188                     	;# 
   853     0189                     	;# 
   854     018C                     	;# 
   855     018D                     	;# 
   856     0000                     	;# 
   857     0001                     	;# 
   858     0002                     	;# 
   859     0003                     	;# 
   860     0004                     	;# 
   861     0005                     	;# 
   862     0006                     	;# 
   863     0007                     	;# 
   864     0008                     	;# 
   865     0009                     	;# 
   866     000A                     	;# 
   867     000B                     	;# 
   868     000C                     	;# 
   869     000D                     	;# 
   870     000E                     	;# 
   871     000E                     	;# 
   872     000F                     	;# 
   873     0010                     	;# 
   874     0011                     	;# 
   875     0012                     	;# 
   876     0013                     	;# 
   877     0014                     	;# 
   878     0015                     	;# 
   879     0015                     	;# 
   880     0016                     	;# 
   881     0017                     	;# 
   882     0018                     	;# 
   883     0019                     	;# 
   884     001A                     	;# 
   885     001B                     	;# 
   886     001B                     	;# 
   887     001C                     	;# 
   888     001D                     	;# 
   889     001E                     	;# 
   890     001F                     	;# 
   891     0081                     	;# 
   892     0085                     	;# 
   893     0086                     	;# 
   894     0087                     	;# 
   895     0088                     	;# 
   896     0089                     	;# 
   897     008C                     	;# 
   898     008D                     	;# 
   899     008E                     	;# 
   900     008F                     	;# 
   901     0090                     	;# 
   902     0091                     	;# 
   903     0092                     	;# 
   904     0093                     	;# 
   905     0093                     	;# 
   906     0093                     	;# 
   907     0094                     	;# 
   908     0095                     	;# 
   909     0096                     	;# 
   910     0097                     	;# 
   911     0098                     	;# 
   912     0099                     	;# 
   913     009A                     	;# 
   914     009B                     	;# 
   915     009C                     	;# 
   916     009D                     	;# 
   917     009E                     	;# 
   918     009F                     	;# 
   919     0105                     	;# 
   920     0107                     	;# 
   921     0108                     	;# 
   922     0109                     	;# 
   923     010C                     	;# 
   924     010C                     	;# 
   925     010D                     	;# 
   926     010E                     	;# 
   927     010F                     	;# 
   928     0185                     	;# 
   929     0187                     	;# 
   930     0188                     	;# 
   931     0189                     	;# 
   932     018C                     	;# 
   933     018D                     	;# 
   934     0000                     	;# 
   935     0001                     	;# 
   936     0002                     	;# 
   937     0003                     	;# 
   938     0004                     	;# 
   939     0005                     	;# 
   940     0006                     	;# 
   941     0007                     	;# 
   942     0008                     	;# 
   943     0009                     	;# 
   944     000A                     	;# 
   945     000B                     	;# 
   946     000C                     	;# 
   947     000D                     	;# 
   948     000E                     	;# 
   949     000E                     	;# 
   950     000F                     	;# 
   951     0010                     	;# 
   952     0011                     	;# 
   953     0012                     	;# 
   954     0013                     	;# 
   955     0014                     	;# 
   956     0015                     	;# 
   957     0015                     	;# 
   958     0016                     	;# 
   959     0017                     	;# 
   960     0018                     	;# 
   961     0019                     	;# 
   962     001A                     	;# 
   963     001B                     	;# 
   964     001B                     	;# 
   965     001C                     	;# 
   966     001D                     	;# 
   967     001E                     	;# 
   968     001F                     	;# 
   969     0081                     	;# 
   970     0085                     	;# 
   971     0086                     	;# 
   972     0087                     	;# 
   973     0088                     	;# 
   974     0089                     	;# 
   975     008C                     	;# 
   976     008D                     	;# 
   977     008E                     	;# 
   978     008F                     	;# 
   979     0090                     	;# 
   980     0091                     	;# 
   981     0092                     	;# 
   982     0093                     	;# 
   983     0093                     	;# 
   984     0093                     	;# 
   985     0094                     	;# 
   986     0095                     	;# 
   987     0096                     	;# 
   988     0097                     	;# 
   989     0098                     	;# 
   990     0099                     	;# 
   991     009A                     	;# 
   992     009B                     	;# 
   993     009C                     	;# 
   994     009D                     	;# 
   995     009E                     	;# 
   996     009F                     	;# 
   997     0105                     	;# 
   998     0107                     	;# 
   999     0108                     	;# 
  1000     0109                     	;# 
  1001     010C                     	;# 
  1002     010C                     	;# 
  1003     010D                     	;# 
  1004     010E                     	;# 
  1005     010F                     	;# 
  1006     0185                     	;# 
  1007     0187                     	;# 
  1008     0188                     	;# 
  1009     0189                     	;# 
  1010     018C                     	;# 
  1011     018D                     	;# 
  1012     0000                     	;# 
  1013     0001                     	;# 
  1014     0002                     	;# 
  1015     0003                     	;# 
  1016     0004                     	;# 
  1017     0005                     	;# 
  1018     0006                     	;# 
  1019     0007                     	;# 
  1020     0008                     	;# 
  1021     0009                     	;# 
  1022     000A                     	;# 
  1023     000B                     	;# 
  1024     000C                     	;# 
  1025     000D                     	;# 
  1026     000E                     	;# 
  1027     000E                     	;# 
  1028     000F                     	;# 
  1029     0010                     	;# 
  1030     0011                     	;# 
  1031     0012                     	;# 
  1032     0013                     	;# 
  1033     0014                     	;# 
  1034     0015                     	;# 
  1035     0015                     	;# 
  1036     0016                     	;# 
  1037     0017                     	;# 
  1038     0018                     	;# 
  1039     0019                     	;# 
  1040     001A                     	;# 
  1041     001B                     	;# 
  1042     001B                     	;# 
  1043     001C                     	;# 
  1044     001D                     	;# 
  1045     001E                     	;# 
  1046     001F                     	;# 
  1047     0081                     	;# 
  1048     0085                     	;# 
  1049     0086                     	;# 
  1050     0087                     	;# 
  1051     0088                     	;# 
  1052     0089                     	;# 
  1053     008C                     	;# 
  1054     008D                     	;# 
  1055     008E                     	;# 
  1056     008F                     	;# 
  1057     0090                     	;# 
  1058     0091                     	;# 
  1059     0092                     	;# 
  1060     0093                     	;# 
  1061     0093                     	;# 
  1062     0093                     	;# 
  1063     0094                     	;# 
  1064     0095                     	;# 
  1065     0096                     	;# 
  1066     0097                     	;# 
  1067     0098                     	;# 
  1068     0099                     	;# 
  1069     009A                     	;# 
  1070     009B                     	;# 
  1071     009C                     	;# 
  1072     009D                     	;# 
  1073     009E                     	;# 
  1074     009F                     	;# 
  1075     0105                     	;# 
  1076     0107                     	;# 
  1077     0108                     	;# 
  1078     0109                     	;# 
  1079     010C                     	;# 
  1080     010C                     	;# 
  1081     010D                     	;# 
  1082     010E                     	;# 
  1083     010F                     	;# 
  1084     0185                     	;# 
  1085     0187                     	;# 
  1086     0188                     	;# 
  1087     0189                     	;# 
  1088     018C                     	;# 
  1089     018D                     	;# 
  1090     0000                     	;# 
  1091     0001                     	;# 
  1092     0002                     	;# 
  1093     0003                     	;# 
  1094     0004                     	;# 
  1095     0005                     	;# 
  1096     0006                     	;# 
  1097     0007                     	;# 
  1098     0008                     	;# 
  1099     0009                     	;# 
  1100     000A                     	;# 
  1101     000B                     	;# 
  1102     000C                     	;# 
  1103     000D                     	;# 
  1104     000E                     	;# 
  1105     000E                     	;# 
  1106     000F                     	;# 
  1107     0010                     	;# 
  1108     0011                     	;# 
  1109     0012                     	;# 
  1110     0013                     	;# 
  1111     0014                     	;# 
  1112     0015                     	;# 
  1113     0015                     	;# 
  1114     0016                     	;# 
  1115     0017                     	;# 
  1116     0018                     	;# 
  1117     0019                     	;# 
  1118     001A                     	;# 
  1119     001B                     	;# 
  1120     001B                     	;# 
  1121     001C                     	;# 
  1122     001D                     	;# 
  1123     001E                     	;# 
  1124     001F                     	;# 
  1125     0081                     	;# 
  1126     0085                     	;# 
  1127     0086                     	;# 
  1128     0087                     	;# 
  1129     0088                     	;# 
  1130     0089                     	;# 
  1131     008C                     	;# 
  1132     008D                     	;# 
  1133     008E                     	;# 
  1134     008F                     	;# 
  1135     0090                     	;# 
  1136     0091                     	;# 
  1137     0092                     	;# 
  1138     0093                     	;# 
  1139     0093                     	;# 
  1140     0093                     	;# 
  1141     0094                     	;# 
  1142     0095                     	;# 
  1143     0096                     	;# 
  1144     0097                     	;# 
  1145     0098                     	;# 
  1146     0099                     	;# 
  1147     009A                     	;# 
  1148     009B                     	;# 
  1149     009C                     	;# 
  1150     009D                     	;# 
  1151     009E                     	;# 
  1152     009F                     	;# 
  1153     0105                     	;# 
  1154     0107                     	;# 
  1155     0108                     	;# 
  1156     0109                     	;# 
  1157     010C                     	;# 
  1158     010C                     	;# 
  1159     010D                     	;# 
  1160     010E                     	;# 
  1161     010F                     	;# 
  1162     0185                     	;# 
  1163     0187                     	;# 
  1164     0188                     	;# 
  1165     0189                     	;# 
  1166     018C                     	;# 
  1167     018D                     	;# 
  1168     0000                     	;# 
  1169     0001                     	;# 
  1170     0002                     	;# 
  1171     0003                     	;# 
  1172     0004                     	;# 
  1173     0005                     	;# 
  1174     0006                     	;# 
  1175     0007                     	;# 
  1176     0008                     	;# 
  1177     0009                     	;# 
  1178     000A                     	;# 
  1179     000B                     	;# 
  1180     000C                     	;# 
  1181     000D                     	;# 
  1182     000E                     	;# 
  1183     000E                     	;# 
  1184     000F                     	;# 
  1185     0010                     	;# 
  1186     0011                     	;# 
  1187     0012                     	;# 
  1188     0013                     	;# 
  1189     0014                     	;# 
  1190     0015                     	;# 
  1191     0015                     	;# 
  1192     0016                     	;# 
  1193     0017                     	;# 
  1194     0018                     	;# 
  1195     0019                     	;# 
  1196     001A                     	;# 
  1197     001B                     	;# 
  1198     001B                     	;# 
  1199     001C                     	;# 
  1200     001D                     	;# 
  1201     001E                     	;# 
  1202     001F                     	;# 
  1203     0081                     	;# 
  1204     0085                     	;# 
  1205     0086                     	;# 
  1206     0087                     	;# 
  1207     0088                     	;# 
  1208     0089                     	;# 
  1209     008C                     	;# 
  1210     008D                     	;# 
  1211     008E                     	;# 
  1212     008F                     	;# 
  1213     0090                     	;# 
  1214     0091                     	;# 
  1215     0092                     	;# 
  1216     0093                     	;# 
  1217     0093                     	;# 
  1218     0093                     	;# 
  1219     0094                     	;# 
  1220     0095                     	;# 
  1221     0096                     	;# 
  1222     0097                     	;# 
  1223     0098                     	;# 
  1224     0099                     	;# 
  1225     009A                     	;# 
  1226     009B                     	;# 
  1227     009C                     	;# 
  1228     009D                     	;# 
  1229     009E                     	;# 
  1230     009F                     	;# 
  1231     0105                     	;# 
  1232     0107                     	;# 
  1233     0108                     	;# 
  1234     0109                     	;# 
  1235     010C                     	;# 
  1236     010C                     	;# 
  1237     010D                     	;# 
  1238     010E                     	;# 
  1239     010F                     	;# 
  1240     0185                     	;# 
  1241     0187                     	;# 
  1242     0188                     	;# 
  1243     0189                     	;# 
  1244     018C                     	;# 
  1245     018D                     	;# 
  1246     0000                     	;# 
  1247     0001                     	;# 
  1248     0002                     	;# 
  1249     0003                     	;# 
  1250     0004                     	;# 
  1251     0005                     	;# 
  1252     0006                     	;# 
  1253     0007                     	;# 
  1254     0008                     	;# 
  1255     0009                     	;# 
  1256     000A                     	;# 
  1257     000B                     	;# 
  1258     000C                     	;# 
  1259     000D                     	;# 
  1260     000E                     	;# 
  1261     000E                     	;# 
  1262     000F                     	;# 
  1263     0010                     	;# 
  1264     0011                     	;# 
  1265     0012                     	;# 
  1266     0013                     	;# 
  1267     0014                     	;# 
  1268     0015                     	;# 
  1269     0015                     	;# 
  1270     0016                     	;# 
  1271     0017                     	;# 
  1272     0018                     	;# 
  1273     0019                     	;# 
  1274     001A                     	;# 
  1275     001B                     	;# 
  1276     001B                     	;# 
  1277     001C                     	;# 
  1278     001D                     	;# 
  1279     001E                     	;# 
  1280     001F                     	;# 
  1281     0081                     	;# 
  1282     0085                     	;# 
  1283     0086                     	;# 
  1284     0087                     	;# 
  1285     0088                     	;# 
  1286     0089                     	;# 
  1287     008C                     	;# 
  1288     008D                     	;# 
  1289     008E                     	;# 
  1290     008F                     	;# 
  1291     0090                     	;# 
  1292     0091                     	;# 
  1293     0092                     	;# 
  1294     0093                     	;# 
  1295     0093                     	;# 
  1296     0093                     	;# 
  1297     0094                     	;# 
  1298     0095                     	;# 
  1299     0096                     	;# 
  1300     0097                     	;# 
  1301     0098                     	;# 
  1302     0099                     	;# 
  1303     009A                     	;# 
  1304     009B                     	;# 
  1305     009C                     	;# 
  1306     009D                     	;# 
  1307     009E                     	;# 
  1308     009F                     	;# 
  1309     0105                     	;# 
  1310     0107                     	;# 
  1311     0108                     	;# 
  1312     0109                     	;# 
  1313     010C                     	;# 
  1314     010C                     	;# 
  1315     010D                     	;# 
  1316     010E                     	;# 
  1317     010F                     	;# 
  1318     0185                     	;# 
  1319     0187                     	;# 
  1320     0188                     	;# 
  1321     0189                     	;# 
  1322     018C                     	;# 
  1323     018D                     	;# 
  1324     0000                     	;# 
  1325     0001                     	;# 
  1326     0002                     	;# 
  1327     0003                     	;# 
  1328     0004                     	;# 
  1329     0005                     	;# 
  1330     0006                     	;# 
  1331     0007                     	;# 
  1332     0008                     	;# 
  1333     0009                     	;# 
  1334     000A                     	;# 
  1335     000B                     	;# 
  1336     000C                     	;# 
  1337     000D                     	;# 
  1338     000E                     	;# 
  1339     000E                     	;# 
  1340     000F                     	;# 
  1341     0010                     	;# 
  1342     0011                     	;# 
  1343     0012                     	;# 
  1344     0013                     	;# 
  1345     0014                     	;# 
  1346     0015                     	;# 
  1347     0015                     	;# 
  1348     0016                     	;# 
  1349     0017                     	;# 
  1350     0018                     	;# 
  1351     0019                     	;# 
  1352     001A                     	;# 
  1353     001B                     	;# 
  1354     001B                     	;# 
  1355     001C                     	;# 
  1356     001D                     	;# 
  1357     001E                     	;# 
  1358     001F                     	;# 
  1359     0081                     	;# 
  1360     0085                     	;# 
  1361     0086                     	;# 
  1362     0087                     	;# 
  1363     0088                     	;# 
  1364     0089                     	;# 
  1365     008C                     	;# 
  1366     008D                     	;# 
  1367     008E                     	;# 
  1368     008F                     	;# 
  1369     0090                     	;# 
  1370     0091                     	;# 
  1371     0092                     	;# 
  1372     0093                     	;# 
  1373     0093                     	;# 
  1374     0093                     	;# 
  1375     0094                     	;# 
  1376     0095                     	;# 
  1377     0096                     	;# 
  1378     0097                     	;# 
  1379     0098                     	;# 
  1380     0099                     	;# 
  1381     009A                     	;# 
  1382     009B                     	;# 
  1383     009C                     	;# 
  1384     009D                     	;# 
  1385     009E                     	;# 
  1386     009F                     	;# 
  1387     0105                     	;# 
  1388     0107                     	;# 
  1389     0108                     	;# 
  1390     0109                     	;# 
  1391     010C                     	;# 
  1392     010C                     	;# 
  1393     010D                     	;# 
  1394     010E                     	;# 
  1395     010F                     	;# 
  1396     0185                     	;# 
  1397     0187                     	;# 
  1398     0188                     	;# 
  1399     0189                     	;# 
  1400     018C                     	;# 
  1401     018D                     	;# 
  1402     0000                     	;# 
  1403     0001                     	;# 
  1404     0002                     	;# 
  1405     0003                     	;# 
  1406     0004                     	;# 
  1407     0005                     	;# 
  1408     0006                     	;# 
  1409     0007                     	;# 
  1410     0008                     	;# 
  1411     0009                     	;# 
  1412     000A                     	;# 
  1413     000B                     	;# 
  1414     000C                     	;# 
  1415     000D                     	;# 
  1416     000E                     	;# 
  1417     000E                     	;# 
  1418     000F                     	;# 
  1419     0010                     	;# 
  1420     0011                     	;# 
  1421     0012                     	;# 
  1422     0013                     	;# 
  1423     0014                     	;# 
  1424     0015                     	;# 
  1425     0015                     	;# 
  1426     0016                     	;# 
  1427     0017                     	;# 
  1428     0018                     	;# 
  1429     0019                     	;# 
  1430     001A                     	;# 
  1431     001B                     	;# 
  1432     001B                     	;# 
  1433     001C                     	;# 
  1434     001D                     	;# 
  1435     001E                     	;# 
  1436     001F                     	;# 
  1437     0081                     	;# 
  1438     0085                     	;# 
  1439     0086                     	;# 
  1440     0087                     	;# 
  1441     0088                     	;# 
  1442     0089                     	;# 
  1443     008C                     	;# 
  1444     008D                     	;# 
  1445     008E                     	;# 
  1446     008F                     	;# 
  1447     0090                     	;# 
  1448     0091                     	;# 
  1449     0092                     	;# 
  1450     0093                     	;# 
  1451     0093                     	;# 
  1452     0093                     	;# 
  1453     0094                     	;# 
  1454     0095                     	;# 
  1455     0096                     	;# 
  1456     0097                     	;# 
  1457     0098                     	;# 
  1458     0099                     	;# 
  1459     009A                     	;# 
  1460     009B                     	;# 
  1461     009C                     	;# 
  1462     009D                     	;# 
  1463     009E                     	;# 
  1464     009F                     	;# 
  1465     0105                     	;# 
  1466     0107                     	;# 
  1467     0108                     	;# 
  1468     0109                     	;# 
  1469     010C                     	;# 
  1470     010C                     	;# 
  1471     010D                     	;# 
  1472     010E                     	;# 
  1473     010F                     	;# 
  1474     0185                     	;# 
  1475     0187                     	;# 
  1476     0188                     	;# 
  1477     0189                     	;# 
  1478     018C                     	;# 
  1479     018D                     	;# 
  1480     0000                     	;# 
  1481     0001                     	;# 
  1482     0002                     	;# 
  1483     0003                     	;# 
  1484     0004                     	;# 
  1485     0005                     	;# 
  1486     0006                     	;# 
  1487     0007                     	;# 
  1488     0008                     	;# 
  1489     0009                     	;# 
  1490     000A                     	;# 
  1491     000B                     	;# 
  1492     000C                     	;# 
  1493     000D                     	;# 
  1494     000E                     	;# 
  1495     000E                     	;# 
  1496     000F                     	;# 
  1497     0010                     	;# 
  1498     0011                     	;# 
  1499     0012                     	;# 
  1500     0013                     	;# 
  1501     0014                     	;# 
  1502     0015                     	;# 
  1503     0015                     	;# 
  1504     0016                     	;# 
  1505     0017                     	;# 
  1506     0018                     	;# 
  1507     0019                     	;# 
  1508     001A                     	;# 
  1509     001B                     	;# 
  1510     001B                     	;# 
  1511     001C                     	;# 
  1512     001D                     	;# 
  1513     001E                     	;# 
  1514     001F                     	;# 
  1515     0081                     	;# 
  1516     0085                     	;# 
  1517     0086                     	;# 
  1518     0087                     	;# 
  1519     0088                     	;# 
  1520     0089                     	;# 
  1521     008C                     	;# 
  1522     008D                     	;# 
  1523     008E                     	;# 
  1524     008F                     	;# 
  1525     0090                     	;# 
  1526     0091                     	;# 
  1527     0092                     	;# 
  1528     0093                     	;# 
  1529     0093                     	;# 
  1530     0093                     	;# 
  1531     0094                     	;# 
  1532     0095                     	;# 
  1533     0096                     	;# 
  1534     0097                     	;# 
  1535     0098                     	;# 
  1536     0099                     	;# 
  1537     009A                     	;# 
  1538     009B                     	;# 
  1539     009C                     	;# 
  1540     009D                     	;# 
  1541     009E                     	;# 
  1542     009F                     	;# 
  1543     0105                     	;# 
  1544     0107                     	;# 
  1545     0108                     	;# 
  1546     0109                     	;# 
  1547     010C                     	;# 
  1548     010C                     	;# 
  1549     010D                     	;# 
  1550     010E                     	;# 
  1551     010F                     	;# 
  1552     0185                     	;# 
  1553     0187                     	;# 
  1554     0188                     	;# 
  1555     0189                     	;# 
  1556     018C                     	;# 
  1557     018D                     	;# 
  1558     0000                     	;# 
  1559     0001                     	;# 
  1560     0002                     	;# 
  1561     0003                     	;# 
  1562     0004                     	;# 
  1563     0005                     	;# 
  1564     0006                     	;# 
  1565     0007                     	;# 
  1566     0008                     	;# 
  1567     0009                     	;# 
  1568     000A                     	;# 
  1569     000B                     	;# 
  1570     000C                     	;# 
  1571     000D                     	;# 
  1572     000E                     	;# 
  1573     000E                     	;# 
  1574     000F                     	;# 
  1575     0010                     	;# 
  1576     0011                     	;# 
  1577     0012                     	;# 
  1578     0013                     	;# 
  1579     0014                     	;# 
  1580     0015                     	;# 
  1581     0015                     	;# 
  1582     0016                     	;# 
  1583     0017                     	;# 
  1584     0018                     	;# 
  1585     0019                     	;# 
  1586     001A                     	;# 
  1587     001B                     	;# 
  1588     001B                     	;# 
  1589     001C                     	;# 
  1590     001D                     	;# 
  1591     001E                     	;# 
  1592     001F                     	;# 
  1593     0081                     	;# 
  1594     0085                     	;# 
  1595     0086                     	;# 
  1596     0087                     	;# 
  1597     0088                     	;# 
  1598     0089                     	;# 
  1599     008C                     	;# 
  1600     008D                     	;# 
  1601     008E                     	;# 
  1602     008F                     	;# 
  1603     0090                     	;# 
  1604     0091                     	;# 
  1605     0092                     	;# 
  1606     0093                     	;# 
  1607     0093                     	;# 
  1608     0093                     	;# 
  1609     0094                     	;# 
  1610     0095                     	;# 
  1611     0096                     	;# 
  1612     0097                     	;# 
  1613     0098                     	;# 
  1614     0099                     	;# 
  1615     009A                     	;# 
  1616     009B                     	;# 
  1617     009C                     	;# 
  1618     009D                     	;# 
  1619     009E                     	;# 
  1620     009F                     	;# 
  1621     0105                     	;# 
  1622     0107                     	;# 
  1623     0108                     	;# 
  1624     0109                     	;# 
  1625     010C                     	;# 
  1626     010C                     	;# 
  1627     010D                     	;# 
  1628     010E                     	;# 
  1629     010F                     	;# 
  1630     0185                     	;# 
  1631     0187                     	;# 
  1632     0188                     	;# 
  1633     0189                     	;# 
  1634     018C                     	;# 
  1635     018D                     	;# 
  1636     0000                     	;# 
  1637     0001                     	;# 
  1638     0002                     	;# 
  1639     0003                     	;# 
  1640     0004                     	;# 
  1641     0005                     	;# 
  1642     0006                     	;# 
  1643     0007                     	;# 
  1644     0008                     	;# 
  1645     0009                     	;# 
  1646     000A                     	;# 
  1647     000B                     	;# 
  1648     000C                     	;# 
  1649     000D                     	;# 
  1650     000E                     	;# 
  1651     000E                     	;# 
  1652     000F                     	;# 
  1653     0010                     	;# 
  1654     0011                     	;# 
  1655     0012                     	;# 
  1656     0013                     	;# 
  1657     0014                     	;# 
  1658     0015                     	;# 
  1659     0015                     	;# 
  1660     0016                     	;# 
  1661     0017                     	;# 
  1662     0018                     	;# 
  1663     0019                     	;# 
  1664     001A                     	;# 
  1665     001B                     	;# 
  1666     001B                     	;# 
  1667     001C                     	;# 
  1668     001D                     	;# 
  1669     001E                     	;# 
  1670     001F                     	;# 
  1671     0081                     	;# 
  1672     0085                     	;# 
  1673     0086                     	;# 
  1674     0087                     	;# 
  1675     0088                     	;# 
  1676     0089                     	;# 
  1677     008C                     	;# 
  1678     008D                     	;# 
  1679     008E                     	;# 
  1680     008F                     	;# 
  1681     0090                     	;# 
  1682     0091                     	;# 
  1683     0092                     	;# 
  1684     0093                     	;# 
  1685     0093                     	;# 
  1686     0093                     	;# 
  1687     0094                     	;# 
  1688     0095                     	;# 
  1689     0096                     	;# 
  1690     0097                     	;# 
  1691     0098                     	;# 
  1692     0099                     	;# 
  1693     009A                     	;# 
  1694     009B                     	;# 
  1695     009C                     	;# 
  1696     009D                     	;# 
  1697     009E                     	;# 
  1698     009F                     	;# 
  1699     0105                     	;# 
  1700     0107                     	;# 
  1701     0108                     	;# 
  1702     0109                     	;# 
  1703     010C                     	;# 
  1704     010C                     	;# 
  1705     010D                     	;# 
  1706     010E                     	;# 
  1707     010F                     	;# 
  1708     0185                     	;# 
  1709     0187                     	;# 
  1710     0188                     	;# 
  1711     0189                     	;# 
  1712     018C                     	;# 
  1713     018D                     	;# 
  1714     0000                     	;# 
  1715     0001                     	;# 
  1716     0002                     	;# 
  1717     0003                     	;# 
  1718     0004                     	;# 
  1719     0005                     	;# 
  1720     0006                     	;# 
  1721     0007                     	;# 
  1722     0008                     	;# 
  1723     0009                     	;# 
  1724     000A                     	;# 
  1725     000B                     	;# 
  1726     000C                     	;# 
  1727     000D                     	;# 
  1728     000E                     	;# 
  1729     000E                     	;# 
  1730     000F                     	;# 
  1731     0010                     	;# 
  1732     0011                     	;# 
  1733     0012                     	;# 
  1734     0013                     	;# 
  1735     0014                     	;# 
  1736     0015                     	;# 
  1737     0015                     	;# 
  1738     0016                     	;# 
  1739     0017                     	;# 
  1740     0018                     	;# 
  1741     0019                     	;# 
  1742     001A                     	;# 
  1743     001B                     	;# 
  1744     001B                     	;# 
  1745     001C                     	;# 
  1746     001D                     	;# 
  1747     001E                     	;# 
  1748     001F                     	;# 
  1749     0081                     	;# 
  1750     0085                     	;# 
  1751     0086                     	;# 
  1752     0087                     	;# 
  1753     0088                     	;# 
  1754     0089                     	;# 
  1755     008C                     	;# 
  1756     008D                     	;# 
  1757     008E                     	;# 
  1758     008F                     	;# 
  1759     0090                     	;# 
  1760     0091                     	;# 
  1761     0092                     	;# 
  1762     0093                     	;# 
  1763     0093                     	;# 
  1764     0093                     	;# 
  1765     0094                     	;# 
  1766     0095                     	;# 
  1767     0096                     	;# 
  1768     0097                     	;# 
  1769     0098                     	;# 
  1770     0099                     	;# 
  1771     009A                     	;# 
  1772     009B                     	;# 
  1773     009C                     	;# 
  1774     009D                     	;# 
  1775     009E                     	;# 
  1776     009F                     	;# 
  1777     0105                     	;# 
  1778     0107                     	;# 
  1779     0108                     	;# 
  1780     0109                     	;# 
  1781     010C                     	;# 
  1782     010C                     	;# 
  1783     010D                     	;# 
  1784     010E                     	;# 
  1785     010F                     	;# 
  1786     0185                     	;# 
  1787     0187                     	;# 
  1788     0188                     	;# 
  1789     0189                     	;# 
  1790     018C                     	;# 
  1791     018D                     	;# 
  1792     0000                     	;# 
  1793     0001                     	;# 
  1794     0002                     	;# 
  1795     0003                     	;# 
  1796     0004                     	;# 
  1797     0005                     	;# 
  1798     0006                     	;# 
  1799     0007                     	;# 
  1800     0008                     	;# 
  1801     0009                     	;# 
  1802     000A                     	;# 
  1803     000B                     	;# 
  1804     000C                     	;# 
  1805     000D                     	;# 
  1806     000E                     	;# 
  1807     000E                     	;# 
  1808     000F                     	;# 
  1809     0010                     	;# 
  1810     0011                     	;# 
  1811     0012                     	;# 
  1812     0013                     	;# 
  1813     0014                     	;# 
  1814     0015                     	;# 
  1815     0015                     	;# 
  1816     0016                     	;# 
  1817     0017                     	;# 
  1818     0018                     	;# 
  1819     0019                     	;# 
  1820     001A                     	;# 
  1821     001B                     	;# 
  1822     001B                     	;# 
  1823     001C                     	;# 
  1824     001D                     	;# 
  1825     001E                     	;# 
  1826     001F                     	;# 
  1827     0081                     	;# 
  1828     0085                     	;# 
  1829     0086                     	;# 
  1830     0087                     	;# 
  1831     0088                     	;# 
  1832     0089                     	;# 
  1833     008C                     	;# 
  1834     008D                     	;# 
  1835     008E                     	;# 
  1836     008F                     	;# 
  1837     0090                     	;# 
  1838     0091                     	;# 
  1839     0092                     	;# 
  1840     0093                     	;# 
  1841     0093                     	;# 
  1842     0093                     	;# 
  1843     0094                     	;# 
  1844     0095                     	;# 
  1845     0096                     	;# 
  1846     0097                     	;# 
  1847     0098                     	;# 
  1848     0099                     	;# 
  1849     009A                     	;# 
  1850     009B                     	;# 
  1851     009C                     	;# 
  1852     009D                     	;# 
  1853     009E                     	;# 
  1854     009F                     	;# 
  1855     0105                     	;# 
  1856     0107                     	;# 
  1857     0108                     	;# 
  1858     0109                     	;# 
  1859     010C                     	;# 
  1860     010C                     	;# 
  1861     010D                     	;# 
  1862     010E                     	;# 
  1863     010F                     	;# 
  1864     0185                     	;# 
  1865     0187                     	;# 
  1866     0188                     	;# 
  1867     0189                     	;# 
  1868     018C                     	;# 
  1869     018D                     	;# 
  1870     0000                     	;# 
  1871     0001                     	;# 
  1872     0002                     	;# 
  1873     0003                     	;# 
  1874     0004                     	;# 
  1875     0005                     	;# 
  1876     0006                     	;# 
  1877     0007                     	;# 
  1878     0008                     	;# 
  1879     0009                     	;# 
  1880     000A                     	;# 
  1881     000B                     	;# 
  1882     000C                     	;# 
  1883     000D                     	;# 
  1884     000E                     	;# 
  1885     000E                     	;# 
  1886     000F                     	;# 
  1887     0010                     	;# 
  1888     0011                     	;# 
  1889     0012                     	;# 
  1890     0013                     	;# 
  1891     0014                     	;# 
  1892     0015                     	;# 
  1893     0015                     	;# 
  1894     0016                     	;# 
  1895     0017                     	;# 
  1896     0018                     	;# 
  1897     0019                     	;# 
  1898     001A                     	;# 
  1899     001B                     	;# 
  1900     001B                     	;# 
  1901     001C                     	;# 
  1902     001D                     	;# 
  1903     001E                     	;# 
  1904     001F                     	;# 
  1905     0081                     	;# 
  1906     0085                     	;# 
  1907     0086                     	;# 
  1908     0087                     	;# 
  1909     0088                     	;# 
  1910     0089                     	;# 
  1911     008C                     	;# 
  1912     008D                     	;# 
  1913     008E                     	;# 
  1914     008F                     	;# 
  1915     0090                     	;# 
  1916     0091                     	;# 
  1917     0092                     	;# 
  1918     0093                     	;# 
  1919     0093                     	;# 
  1920     0093                     	;# 
  1921     0094                     	;# 
  1922     0095                     	;# 
  1923     0096                     	;# 
  1924     0097                     	;# 
  1925     0098                     	;# 
  1926     0099                     	;# 
  1927     009A                     	;# 
  1928     009B                     	;# 
  1929     009C                     	;# 
  1930     009D                     	;# 
  1931     009E                     	;# 
  1932     009F                     	;# 
  1933     0105                     	;# 
  1934     0107                     	;# 
  1935     0108                     	;# 
  1936     0109                     	;# 
  1937     010C                     	;# 
  1938     010C                     	;# 
  1939     010D                     	;# 
  1940     010E                     	;# 
  1941     010F                     	;# 
  1942     0185                     	;# 
  1943     0187                     	;# 
  1944     0188                     	;# 
  1945     0189                     	;# 
  1946     018C                     	;# 
  1947     018D                     	;# 
  1948     0000                     	;# 
  1949     0001                     	;# 
  1950     0002                     	;# 
  1951     0003                     	;# 
  1952     0004                     	;# 
  1953     0005                     	;# 
  1954     0006                     	;# 
  1955     0007                     	;# 
  1956     0008                     	;# 
  1957     0009                     	;# 
  1958     000A                     	;# 
  1959     000B                     	;# 
  1960     000C                     	;# 
  1961     000D                     	;# 
  1962     000E                     	;# 
  1963     000E                     	;# 
  1964     000F                     	;# 
  1965     0010                     	;# 
  1966     0011                     	;# 
  1967     0012                     	;# 
  1968     0013                     	;# 
  1969     0014                     	;# 
  1970     0015                     	;# 
  1971     0015                     	;# 
  1972     0016                     	;# 
  1973     0017                     	;# 
  1974     0018                     	;# 
  1975     0019                     	;# 
  1976     001A                     	;# 
  1977     001B                     	;# 
  1978     001B                     	;# 
  1979     001C                     	;# 
  1980     001D                     	;# 
  1981     001E                     	;# 
  1982     001F                     	;# 
  1983     0081                     	;# 
  1984     0085                     	;# 
  1985     0086                     	;# 
  1986     0087                     	;# 
  1987     0088                     	;# 
  1988     0089                     	;# 
  1989     008C                     	;# 
  1990     008D                     	;# 
  1991     008E                     	;# 
  1992     008F                     	;# 
  1993     0090                     	;# 
  1994     0091                     	;# 
  1995     0092                     	;# 
  1996     0093                     	;# 
  1997     0093                     	;# 
  1998     0093                     	;# 
  1999     0094                     	;# 
  2000     0095                     	;# 
  2001     0096                     	;# 
  2002     0097                     	;# 
  2003     0098                     	;# 
  2004     0099                     	;# 
  2005     009A                     	;# 
  2006     009B                     	;# 
  2007     009C                     	;# 
  2008     009D                     	;# 
  2009     009E                     	;# 
  2010     009F                     	;# 
  2011     0105                     	;# 
  2012     0107                     	;# 
  2013     0108                     	;# 
  2014     0109                     	;# 
  2015     010C                     	;# 
  2016     010C                     	;# 
  2017     010D                     	;# 
  2018     010E                     	;# 
  2019     010F                     	;# 
  2020     0185                     	;# 
  2021     0187                     	;# 
  2022     0188                     	;# 
  2023     0189                     	;# 
  2024     018C                     	;# 
  2025     018D                     	;# 
  2026                           
  2027                           	psect	idataCOMMON
  2028     00D2                     __pidataCOMMON:
  2029                           
  2030                           ;initializer for _mode
  2031     00D2  3442               	retlw	66
  2032                           
  2033                           ;initializer for _LCD_display_control
  2034     00D3  340C               	retlw	12
  2035                           
  2036                           ;initializer for _LCD_entry_mode
  2037     00D4  3406               	retlw	6
  2038                           
  2039                           	psect	idataBANK1
  2040     0FC4                     __pidataBANK1:
  2041                           
  2042                           ;initializer for _PassWord
  2043     0FC4  345F               	retlw	95
  2044     0FC5  3400               	retlw	0
  2045     0FC6  3400               	retlw	0
  2046     0FC7  3400               	retlw	0
  2047     0FC8  3400               	retlw	0
  2048     0FC9  3400               	retlw	0
  2049     0FCA  3400               	retlw	0
  2050     0FCB  3400               	retlw	0
  2051     0FCC  3400               	retlw	0
  2052     0FCD  3400               	retlw	0
  2053     0FCE  3400               	retlw	0
  2054     0FCF  3400               	retlw	0
  2055     0FD0  3400               	retlw	0
  2056     0FD1  3400               	retlw	0
  2057     0FD2  3400               	retlw	0
  2058     0FD3  3400               	retlw	0
  2059     0FD4  3400               	retlw	0
  2060     0FD5  3400               	retlw	0
  2061     0FD6  3400               	retlw	0
  2062     0FD7  3400               	retlw	0
  2063     0FD8  3400               	retlw	0
  2064     0FD9  3400               	retlw	0
  2065     0FDA  3400               	retlw	0
  2066     0FDB  3400               	retlw	0
  2067     0FDC  3400               	retlw	0
  2068     0FDD  3400               	retlw	0
  2069     0FDE  3400               	retlw	0
  2070     0FDF  3400               	retlw	0
  2071     0FE0  3400               	retlw	0
  2072     0FE1  3400               	retlw	0
  2073                           
  2074                           ;initializer for _WifiName
  2075     0FE2  345F               	retlw	95
  2076     0FE3  3400               	retlw	0
  2077     0FE4  3400               	retlw	0
  2078     0FE5  3400               	retlw	0
  2079     0FE6  3400               	retlw	0
  2080     0FE7  3400               	retlw	0
  2081     0FE8  3400               	retlw	0
  2082     0FE9  3400               	retlw	0
  2083     0FEA  3400               	retlw	0
  2084     0FEB  3400               	retlw	0
  2085     0FEC  3400               	retlw	0
  2086     0FED  3400               	retlw	0
  2087     0FEE  3400               	retlw	0
  2088     0FEF  3400               	retlw	0
  2089     0FF0  3400               	retlw	0
  2090     0FF1  3400               	retlw	0
  2091     0FF2  3400               	retlw	0
  2092     0FF3  3400               	retlw	0
  2093     0FF4  3400               	retlw	0
  2094     0FF5  3400               	retlw	0
  2095     0FF6  3400               	retlw	0
  2096     0FF7  3400               	retlw	0
  2097     0FF8  3400               	retlw	0
  2098     0FF9  3400               	retlw	0
  2099     0FFA  3400               	retlw	0
  2100     0FFB  3400               	retlw	0
  2101     0FFC  3400               	retlw	0
  2102     0FFD  3400               	retlw	0
  2103     0FFE  3400               	retlw	0
  2104     0FFF  3400               	retlw	0
  2105                           
  2106                           	psect	strings
  2107     0011                     __pstrings:
  2108     0011                     stringtab:
  2109     0011                     __stringtab:
  2110                           
  2111                           ;	String table - string pointers are 1 byte each
  2112     0011  1BFF               	btfsc	btemp+1,7
  2113     0012  281B               	ljmp	stringcode
  2114     0013  1383               	bcf	3,7
  2115     0014  187F               	btfsc	btemp+1,0
  2116     0015  1783               	bsf	3,7
  2117     0016  0800               	movf	0,w
  2118     0017  0A84               	incf	4,f
  2119     0018  1903               	skipnz
  2120     0019  0AFF               	incf	btemp+1,f
  2121     001A  0008               	return
  2122     001B                     stringcode:
  2123     001B                     stringdir:
  2124     001B  3000               	movlw	high stringdir
  2125     001C  008A               	movwf	10
  2126     001D  0804               	movf	4,w
  2127     001E  0A84               	incf	4,f
  2128     001F  0782               	addwf	2,f
  2129     0020                     __stringbase:
  2130     0020  3400               	retlw	0
  2131     0021                     __end_of__stringtab:
  2132     0021                     _KeyPadChar:
  2133     0021  3431               	retlw	49
  2134     0022  3432               	retlw	50
  2135     0023  3433               	retlw	51
  2136     0024  3441               	retlw	65
  2137     0025  3434               	retlw	52
  2138     0026  3435               	retlw	53
  2139     0027  3436               	retlw	54
  2140     0028  3442               	retlw	66
  2141     0029  3437               	retlw	55
  2142     002A  3438               	retlw	56
  2143     002B  3439               	retlw	57
  2144     002C  3443               	retlw	67
  2145     002D  342A               	retlw	42
  2146     002E  3430               	retlw	48
  2147     002F  3423               	retlw	35
  2148     0030  3444               	retlw	68
  2149     0031  343F               	retlw	63
  2150     0032                     __end_of_KeyPadChar:
  2151     0019                     _TXREG	set	25
  2152     0018                     _RCSTAbits	set	24
  2153     001A                     _RCREG	set	26
  2154     000C                     _PIR1bits	set	12
  2155     001E                     _ADRESH	set	30
  2156     001F                     _ADCON0	set	31
  2157     0006                     _PORTBbits	set	6
  2158     0006                     _PORTB	set	6
  2159     0008                     _PORTDbits	set	8
  2160     0037                     _RB7	set	55
  2161     0036                     _RB6	set	54
  2162     0035                     _RB5	set	53
  2163     0034                     _RB4	set	52
  2164     0033                     _RB3	set	51
  2165     0032                     _RB2	set	50
  2166     0031                     _RB1	set	49
  2167     0030                     _RB0	set	48
  2168     00C4                     _CREN	set	196
  2169     00C1                     _OERR	set	193
  2170     0064                     _TXIF	set	100
  2171     005F                     _GIE	set	95
  2172     005E                     _PEIE	set	94
  2173     0065                     _RCIF	set	101
  2174     00F9                     _GO_nDONE	set	249
  2175     008C                     _PIE1bits	set	140
  2176     0099                     _SPBRG	set	153
  2177     0098                     _TXSTAbits	set	152
  2178     009E                     _ADRESL	set	158
  2179     009F                     _ADCON1	set	159
  2180     0086                     _TRISB	set	134
  2181     0088                     _TRISDbits	set	136
  2182     0437                     _TRISB7	set	1079
  2183     0436                     _TRISB6	set	1078
  2184     0435                     _TRISB5	set	1077
  2185     0434                     _TRISB4	set	1076
  2186     0433                     _TRISB3	set	1075
  2187     0432                     _TRISB2	set	1074
  2188     0431                     _TRISB1	set	1073
  2189     0430                     _TRISB0	set	1072
  2190     043F                     _TRISC7	set	1087
  2191     043E                     _TRISC6	set	1086
  2192     0428                     _TRISA0	set	1064
  2193     0032                     STR_6:
  2194     0032  3457               	retlw	87	;'W'
  2195     0033  3461               	retlw	97	;'a'
  2196     0034  3469               	retlw	105	;'i'
  2197     0035  3474               	retlw	116	;'t'
  2198     0036  3469               	retlw	105	;'i'
  2199     0037  346E               	retlw	110	;'n'
  2200     0038  3467               	retlw	103	;'g'
  2201     0039  3420               	retlw	32	;' '
  2202     003A  3474               	retlw	116	;'t'
  2203     003B  346F               	retlw	111	;'o'
  2204     003C  3420               	retlw	32	;' '
  2205     003D  3452               	retlw	82	;'R'
  2206     003E  3465               	retlw	101	;'e'
  2207     003F  3473               	retlw	115	;'s'
  2208     0040  3470               	retlw	112	;'p'
  2209     0041  346F               	retlw	111	;'o'
  2210     0042  346E               	retlw	110	;'n'
  2211     0043  3473               	retlw	115	;'s'
  2212     0044  3465               	retlw	101	;'e'
  2213     0045  3400               	retlw	0
  2214     0046                     STR_8:
  2215     0046  3445               	retlw	69	;'E'
  2216     0047  3453               	retlw	83	;'S'
  2217     0048  3450               	retlw	80	;'P'
  2218     0049  3420               	retlw	32	;' '
  2219     004A  3438               	retlw	56	;'8'
  2220     004B  3432               	retlw	50	;'2'
  2221     004C  3436               	retlw	54	;'6'
  2222     004D  3436               	retlw	54	;'6'
  2223     004E  3420               	retlw	32	;' '
  2224     004F  3443               	retlw	67	;'C'
  2225     0050  346F               	retlw	111	;'o'
  2226     0051  346E               	retlw	110	;'n'
  2227     0052  346E               	retlw	110	;'n'
  2228     0053  3465               	retlw	101	;'e'
  2229     0054  3463               	retlw	99	;'c'
  2230     0055  3474               	retlw	116	;'t'
  2231     0056  3465               	retlw	101	;'e'
  2232     0057  3464               	retlw	100	;'d'
  2233     0058  3400               	retlw	0
  2234     0059                     STR_3:
  2235     0059  3455               	retlw	85	;'U'
  2236     005A  3441               	retlw	65	;'A'
  2237     005B  3452               	retlw	82	;'R'
  2238     005C  3454               	retlw	84	;'T'
  2239     005D  3420               	retlw	32	;' '
  2240     005E  3449               	retlw	73	;'I'
  2241     005F  346E               	retlw	110	;'n'
  2242     0060  3469               	retlw	105	;'i'
  2243     0061  3474               	retlw	116	;'t'
  2244     0062  3420               	retlw	32	;' '
  2245     0063  3453               	retlw	83	;'S'
  2246     0064  3475               	retlw	117	;'u'
  2247     0065  3463               	retlw	99	;'c'
  2248     0066  3463               	retlw	99	;'c'
  2249     0067  3465               	retlw	101	;'e'
  2250     0068  3473               	retlw	115	;'s'
  2251     0069  3473               	retlw	115	;'s'
  2252     006A  3400               	retlw	0
  2253     006B                     STR_2:
  2254     006B  3449               	retlw	73	;'I'
  2255     006C  346E               	retlw	110	;'n'
  2256     006D  3469               	retlw	105	;'i'
  2257     006E  3474               	retlw	116	;'t'
  2258     006F  344B               	retlw	75	;'K'
  2259     0070  3465               	retlw	101	;'e'
  2260     0071  3479               	retlw	121	;'y'
  2261     0072  3450               	retlw	80	;'P'
  2262     0073  3461               	retlw	97	;'a'
  2263     0074  3464               	retlw	100	;'d'
  2264     0075  3428               	retlw	40	;'('
  2265     0076  3429               	retlw	41	;')'
  2266     0077  3400               	retlw	0
  2267     0078                     STR_7:
  2268     0078  3452               	retlw	82	;'R'
  2269     0079  3465               	retlw	101	;'e'
  2270     007A  3463               	retlw	99	;'c'
  2271     007B  3465               	retlw	101	;'e'
  2272     007C  3469               	retlw	105	;'i'
  2273     007D  3476               	retlw	118	;'v'
  2274     007E  3465               	retlw	101	;'e'
  2275     007F  3464               	retlw	100	;'d'
  2276     0080  3420               	retlw	32	;' '
  2277     0081  344F               	retlw	79	;'O'
  2278     0082  344B               	retlw	75	;'K'
  2279     0083  3400               	retlw	0
  2280     0084                     STR_12:
  2281     0084  3444               	retlw	68	;'D'
  2282     0085  346F               	retlw	111	;'o'
  2283     0086  346E               	retlw	110	;'n'
  2284     0087  3465               	retlw	101	;'e'
  2285     0088  3464               	retlw	100	;'d'
  2286     0089  3420               	retlw	32	;' '
  2287     008A  3449               	retlw	73	;'I'
  2288     008B  3452               	retlw	82	;'R'
  2289     008C  3420               	retlw	32	;' '
  2290     008D  3453               	retlw	83	;'S'
  2291     008E  3452               	retlw	82	;'R'
  2292     008F  3400               	retlw	0
  2293     0090                     STR_11:
  2294     0090  3443               	retlw	67	;'C'
  2295     0091  3468               	retlw	104	;'h'
  2296     0092  3465               	retlw	101	;'e'
  2297     0093  3463               	retlw	99	;'c'
  2298     0094  346B               	retlw	107	;'k'
  2299     0095  3420               	retlw	32	;' '
  2300     0096  3449               	retlw	73	;'I'
  2301     0097  3452               	retlw	82	;'R'
  2302     0098  3420               	retlw	32	;' '
  2303     0099  3453               	retlw	83	;'S'
  2304     009A  3452               	retlw	82	;'R'
  2305     009B  3400               	retlw	0
  2306     009C                     STR_10:
  2307     009C  3444               	retlw	68	;'D'
  2308     009D  346F               	retlw	111	;'o'
  2309     009E  346F               	retlw	111	;'o'
  2310     009F  3472               	retlw	114	;'r'
  2311     00A0  3420               	retlw	32	;' '
  2312     00A1  344F               	retlw	79	;'O'
  2313     00A2  3470               	retlw	112	;'p'
  2314     00A3  3465               	retlw	101	;'e'
  2315     00A4  346E               	retlw	110	;'n'
  2316     00A5  3465               	retlw	101	;'e'
  2317     00A6  3464               	retlw	100	;'d'
  2318     00A7  3400               	retlw	0
  2319     00A8                     STR_13:
  2320     00A8  3444               	retlw	68	;'D'
  2321     00A9  346F               	retlw	111	;'o'
  2322     00AA  346F               	retlw	111	;'o'
  2323     00AB  3472               	retlw	114	;'r'
  2324     00AC  3420               	retlw	32	;' '
  2325     00AD  3443               	retlw	67	;'C'
  2326     00AE  346C               	retlw	108	;'l'
  2327     00AF  346F               	retlw	111	;'o'
  2328     00B0  3473               	retlw	115	;'s'
  2329     00B1  3465               	retlw	101	;'e'
  2330     00B2  3464               	retlw	100	;'d'
  2331     00B3  3400               	retlw	0
  2332     00B4                     STR_1:
  2333     00B4  344C               	retlw	76	;'L'
  2334     00B5  3443               	retlw	67	;'C'
  2335     00B6  3444               	retlw	68	;'D'
  2336     00B7  345F               	retlw	95	;'_'
  2337     00B8  3469               	retlw	105	;'i'
  2338     00B9  346E               	retlw	110	;'n'
  2339     00BA  3469               	retlw	105	;'i'
  2340     00BB  3474               	retlw	116	;'t'
  2341     00BC  3428               	retlw	40	;'('
  2342     00BD  3429               	retlw	41	;')'
  2343     00BE  3400               	retlw	0
  2344     00BF                     STR_5:
  2345     00BF  3441               	retlw	65	;'A'
  2346     00C0  3454               	retlw	84	;'T'
  2347     00C1  3420               	retlw	32	;' '
  2348     00C2  3453               	retlw	83	;'S'
  2349     00C3  3465               	retlw	101	;'e'
  2350     00C4  346E               	retlw	110	;'n'
  2351     00C5  3474               	retlw	116	;'t'
  2352     00C6  3400               	retlw	0
  2353     00C7                     STR_9:
  2354     00C7  344F               	retlw	79	;'O'
  2355     00C8  3470               	retlw	112	;'p'
  2356     00C9  3465               	retlw	101	;'e'
  2357     00CA  346E               	retlw	110	;'n'
  2358     00CB  3400               	retlw	0
  2359     00CC                     STR_14:
  2360     00CC  340D               	retlw	13
  2361     00CD  340A               	retlw	10
  2362     00CE  3400               	retlw	0
  2363     00CF                     STR_4:
  2364     00CF  3441               	retlw	65	;'A'
  2365     00D0  3454               	retlw	84	;'T'
  2366     00D1  3400               	retlw	0
  2367                           
  2368                           	psect	cinit
  2369     07CA                     start_initialization:	
  2370                           ; #config settings
  2371                           
  2372     07CA                     __initialization:
  2373                           
  2374                           ; Initialize objects allocated to BANK1
  2375     07CA  1383               	bcf	3,7	;select IRP bank0
  2376     07CB  30DC               	movlw	low (__pdataBANK1+60)
  2377     07CC  00FD               	movwf	btemp+-1
  2378     07CD  300F               	movlw	high __pidataBANK1
  2379     07CE  00FE               	movwf	btemp
  2380     07CF  30C4               	movlw	low __pidataBANK1
  2381     07D0  00FF               	movwf	btemp+1
  2382     07D1  30A0               	movlw	low __pdataBANK1
  2383     07D2  0084               	movwf	4
  2384     07D3  120A  158A  26B8  120A  118A  	fcall	init_ram0
  2385                           
  2386                           ; Initialize objects allocated to COMMON
  2387     07D8  120A  118A  20D2  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
  2388     07DD  00F8               	movwf	__pdataCOMMON& (0+127)
  2389     07DE  120A  118A  20D3  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
  2390     07E3  00F9               	movwf	(__pdataCOMMON+1)& (0+127)
  2391     07E4  120A  118A  20D4  120A  118A  	fcall	__pidataCOMMON+2	;fetch initializer
  2392     07E9  00FA               	movwf	(__pdataCOMMON+2)& (0+127)
  2393                           
  2394                           ; Clear objects allocated to BANK3
  2395     07EA  1783               	bsf	3,7	;select IRP bank2
  2396     07EB  3090               	movlw	low __pbssBANK3
  2397     07EC  0084               	movwf	4
  2398     07ED  30B0               	movlw	low (__pbssBANK3+32)
  2399     07EE  120A  158A  2689  120A  118A  	fcall	clear_ram0
  2400                           
  2401                           ; Clear objects allocated to BANK0
  2402     07F3  1383               	bcf	3,7	;select IRP bank0
  2403     07F4  3020               	movlw	low __pbssBANK0
  2404     07F5  0084               	movwf	4
  2405     07F6  3046               	movlw	low (__pbssBANK0+38)
  2406     07F7  120A  158A  2689  120A  118A  	fcall	clear_ram0
  2407     07FC                     end_of_initialization:	
  2408                           ;End of C runtime variable initialization code
  2409                           
  2410     07FC                     __end_of__initialization:
  2411     07FC  0183               	clrf	3
  2412     07FD  120A  118A  2D91   	ljmp	_main	;jump to C main() function
  2413                           
  2414                           	psect	dataCOMMON
  2415     0078                     __pdataCOMMON:
  2416     0078                     _mode:
  2417     0078                     	ds	1
  2418     0079                     _LCD_display_control:
  2419     0079                     	ds	1
  2420     007A                     _LCD_entry_mode:
  2421     007A                     	ds	1
  2422                           
  2423                           	psect	bssBANK0
  2424     0020                     __pbssBANK0:
  2425     0020                     modff@F522:
  2426     0020                     	ds	4
  2427     0024                     _adcResult:
  2428     0024                     	ds	2
  2429     0026                     _pos:
  2430     0026                     	ds	2
  2431     0028                     _StringReceive:
  2432     0028                     	ds	30
  2433                           
  2434                           	psect	dataBANK1
  2435     00A0                     __pdataBANK1:
  2436     00A0                     _PassWord:
  2437     00A0                     	ds	30
  2438     00BE                     _WifiName:
  2439     00BE                     	ds	30
  2440                           
  2441                           	psect	bssBANK3
  2442     0190                     __pbssBANK3:
  2443     0190                     _StringDisplay:
  2444     0190                     	ds	32
  2445                           
  2446                           	psect	inittext
  2447     0EB4                     init_fetch0:	
  2448                           ;	Called with low address in FSR and high address in W
  2449                           
  2450     0EB4  087E               	movf	btemp,w
  2451     0EB5  008A               	movwf	10
  2452     0EB6  087F               	movf	btemp+1,w
  2453     0EB7  0082               	movwf	2
  2454     0EB8                     init_ram0:	
  2455                           ;Called with:
  2456                           ;	high address of idata address in btemp 
  2457                           ;	low address of idata address in btemp+1 
  2458                           ;	low address of data in FSR
  2459                           ;	high address + 1 of data in btemp-1
  2460                           
  2461     0EB8  120A  158A  26B4  120A  158A  	fcall	init_fetch0
  2462     0EBD  0080               	movwf	0
  2463     0EBE  0A84               	incf	4,f
  2464     0EBF  0804               	movf	4,w
  2465     0EC0  067D               	xorwf	btemp+-1,w
  2466     0EC1  1903               	btfsc	3,2
  2467     0EC2  3400               	retlw	0
  2468     0EC3  0AFF               	incf	btemp+1,f
  2469     0EC4  1903               	btfsc	3,2
  2470     0EC5  0AFE               	incf	btemp,f
  2471     0EC6  2EB8               	goto	init_ram0
  2472                           
  2473                           	psect	clrtext
  2474     0E89                     clear_ram0:	
  2475                           ;	Called with FSR containing the base address, and
  2476                           ;	W with the last address+1
  2477                           
  2478     0E89  0064               	clrwdt	;clear the watchdog before getting into this loop
  2479     0E8A                     clrloop0:
  2480     0E8A  0180               	clrf	0	;clear RAM location pointed to by FSR
  2481     0E8B  0A84               	incf	4,f	;increment pointer
  2482     0E8C  0604               	xorwf	4,w	;XOR with final address
  2483     0E8D  1903               	btfsc	3,2	;have we reached the end yet?
  2484     0E8E  3400               	retlw	0	;all done for this memory range, return
  2485     0E8F  0604               	xorwf	4,w	;XOR again to restore value
  2486     0E90  2E8A               	goto	clrloop0	;do the next byte
  2487                           
  2488                           	psect	cstackCOMMON
  2489     0071                     __pcstackCOMMON:
  2490     0071                     ?_LCD_write_command:
  2491     0071                     ?_LCD_write_data:	
  2492                           ; 1 bytes @ 0x0
  2493                           
  2494     0071                     ?_LCD_pulse_clock:	
  2495                           ; 1 bytes @ 0x0
  2496                           
  2497     0071                     ?_InitUART:	
  2498                           ; 1 bytes @ 0x0
  2499                           
  2500     0071                     ?_SendCommandAT:	
  2501                           ; 1 bytes @ 0x0
  2502                           
  2503     0071                     ?_LCD_clear:	
  2504                           ; 1 bytes @ 0x0
  2505                           
  2506     0071                     ?_LCD_init:	
  2507                           ; 1 bytes @ 0x0
  2508                           
  2509     0071                     ?_ClearStringReceive:	
  2510                           ; 1 bytes @ 0x0
  2511                           
  2512     0071                     ?_main:	
  2513                           ; 1 bytes @ 0x0
  2514                           
  2515     0071                     ?_ISR:	
  2516                           ; 1 bytes @ 0x0
  2517                           
  2518     0071                     ??_ISR:	
  2519                           ; 1 bytes @ 0x0
  2520                           
  2521     0071                     ?_SendByteSerially:	
  2522                           ; 1 bytes @ 0x0
  2523                           
  2524     0071                     ?_SendStringSerially:	
  2525                           ; 1 bytes @ 0x0
  2526                           
  2527                           
  2528                           ; 1 bytes @ 0x0
  2529     0071                     	ds	3
  2530     0074                     ??_LCD_pulse_clock:
  2531     0074                     ??_InitUART:	
  2532                           ; 1 bytes @ 0x3
  2533                           
  2534     0074                     ?_strchr:	
  2535                           ; 1 bytes @ 0x3
  2536                           
  2537     0074                     ??_ClearStringReceive:	
  2538                           ; 1 bytes @ 0x3
  2539                           
  2540     0074                     ??_SendByteSerially:	
  2541                           ; 1 bytes @ 0x3
  2542                           
  2543     0074                     ??___lmul:	
  2544                           ; 1 bytes @ 0x3
  2545                           
  2546     0074                     ??___aldiv:	
  2547                           ; 1 bytes @ 0x3
  2548                           
  2549     0074                     ??___almod:	
  2550                           ; 1 bytes @ 0x3
  2551                           
  2552     0074                     ?_strlen:	
  2553                           ; 1 bytes @ 0x3
  2554                           
  2555     0074                     ?_strncmp:	
  2556                           ; 2 bytes @ 0x3
  2557                           
  2558     0074                     SendByteSerially@Byte:	
  2559                           ; 2 bytes @ 0x3
  2560                           
  2561     0074                     strncmp@r:	
  2562                           ; 1 bytes @ 0x3
  2563                           
  2564     0074                     ClearStringReceive@i:	
  2565                           ; 1 bytes @ 0x3
  2566                           
  2567     0074                     strchr@c:	
  2568                           ; 2 bytes @ 0x3
  2569                           
  2570                           
  2571                           ; 2 bytes @ 0x3
  2572     0074                     	ds	1
  2573     0075                     ??_LCD_write_command:
  2574     0075                     ??_LCD_write_data:	
  2575                           ; 1 bytes @ 0x4
  2576                           
  2577     0075                     ??_SendStringSerially:	
  2578                           ; 1 bytes @ 0x4
  2579                           
  2580     0075                     SendStringSerially@st:	
  2581                           ; 1 bytes @ 0x4
  2582                           
  2583     0075                     ___almod@counter:	
  2584                           ; 1 bytes @ 0x4
  2585                           
  2586     0075                     strncmp@n:	
  2587                           ; 1 bytes @ 0x4
  2588                           
  2589                           
  2590                           ; 2 bytes @ 0x4
  2591     0075                     	ds	1
  2592     0076                     ??_SendCommandAT:
  2593     0076                     ??_strlen:	
  2594                           ; 1 bytes @ 0x5
  2595                           
  2596     0076                     ??_strchr:	
  2597                           ; 1 bytes @ 0x5
  2598                           
  2599     0076                     SendCommandAT@command:	
  2600                           ; 1 bytes @ 0x5
  2601                           
  2602     0076                     ___almod@sign:	
  2603                           ; 1 bytes @ 0x5
  2604                           
  2605     0076                     strchr@s:	
  2606                           ; 1 bytes @ 0x5
  2607                           
  2608     0076                     strlen@a:	
  2609                           ; 1 bytes @ 0x5
  2610                           
  2611                           
  2612                           ; 1 bytes @ 0x5
  2613     0076                     	ds	1
  2614     0077                     LCD_write_command@command:
  2615     0077                     LCD_write_data@data:	
  2616                           ; 1 bytes @ 0x6
  2617                           
  2618     0077                     strlen@s:	
  2619                           ; 1 bytes @ 0x6
  2620                           
  2621     0077                     strncmp@l:	
  2622                           ; 1 bytes @ 0x6
  2623                           
  2624                           
  2625                           ; 1 bytes @ 0x6
  2626     0077                     	ds	1
  2627     0078                     ??_LCD_cursor_set:
  2628     0078                     ??_LCD_write_variable:	
  2629                           ; 1 bytes @ 0x7
  2630                           
  2631     0078                     ??_LCD_write_string:	
  2632                           ; 1 bytes @ 0x7
  2633                           
  2634                           
  2635                           	psect	cstackBANK0
  2636     0046                     __pcstackBANK0:	
  2637                           ; 1 bytes @ 0x7
  2638                           
  2639     0046                     ?_LCD_cursor_set:
  2640     0046                     ??_strncmp:	
  2641                           ; 1 bytes @ 0x0
  2642                           
  2643     0046                     ??_LCD_clear:	
  2644                           ; 1 bytes @ 0x0
  2645                           
  2646     0046                     ?_LCD_write_string:	
  2647                           ; 1 bytes @ 0x0
  2648                           
  2649     0046                     ?___lmul:	
  2650                           ; 1 bytes @ 0x0
  2651                           
  2652     0046                     ?___aldiv:	
  2653                           ; 4 bytes @ 0x0
  2654                           
  2655     0046                     ?___almod:	
  2656                           ; 4 bytes @ 0x0
  2657                           
  2658     0046                     LCD_cursor_set@column:	
  2659                           ; 4 bytes @ 0x0
  2660                           
  2661     0046                     LCD_write_string@string:	
  2662                           ; 1 bytes @ 0x0
  2663                           
  2664     0046                     ___lmul@multiplier:	
  2665                           ; 2 bytes @ 0x0
  2666                           
  2667     0046                     ___aldiv@divisor:	
  2668                           ; 4 bytes @ 0x0
  2669                           
  2670     0046                     ___almod@divisor:	
  2671                           ; 4 bytes @ 0x0
  2672                           
  2673                           
  2674                           ; 4 bytes @ 0x0
  2675     0046                     	ds	1
  2676     0047                     ??_LCD_init:
  2677     0047                     LCD_cursor_set@row:	
  2678                           ; 1 bytes @ 0x1
  2679                           
  2680                           
  2681                           ; 1 bytes @ 0x1
  2682     0047                     	ds	1
  2683     0048                     ?_strstr:
  2684     0048                     LCD_write_string@i:	
  2685                           ; 1 bytes @ 0x2
  2686                           
  2687     0048                     strstr@n:	
  2688                           ; 1 bytes @ 0x2
  2689                           
  2690                           
  2691                           ; 1 bytes @ 0x2
  2692     0048                     	ds	1
  2693     0049                     ??_strstr:
  2694                           
  2695                           ; 1 bytes @ 0x3
  2696     0049                     	ds	1
  2697     004A                     ___lmul@multiplicand:
  2698     004A                     ___aldiv@dividend:	
  2699                           ; 4 bytes @ 0x4
  2700                           
  2701     004A                     ___almod@dividend:	
  2702                           ; 4 bytes @ 0x4
  2703                           
  2704                           
  2705                           ; 4 bytes @ 0x4
  2706     004A                     	ds	1
  2707     004B                     strstr@nl:
  2708                           
  2709                           ; 2 bytes @ 0x5
  2710     004B                     	ds	2
  2711     004D                     strstr@h:
  2712                           
  2713                           ; 1 bytes @ 0x7
  2714     004D                     	ds	1
  2715     004E                     ___aldiv@counter:
  2716     004E                     ___lmul@product:	
  2717                           ; 1 bytes @ 0x8
  2718                           
  2719                           
  2720                           ; 4 bytes @ 0x8
  2721     004E                     	ds	1
  2722     004F                     ___aldiv@sign:
  2723                           
  2724                           ; 1 bytes @ 0x9
  2725     004F                     	ds	1
  2726     0050                     ___aldiv@quotient:
  2727                           
  2728                           ; 4 bytes @ 0xA
  2729     0050                     	ds	4
  2730     0054                     ?_LCD_write_variable:
  2731     0054                     LCD_write_variable@variable:	
  2732                           ; 1 bytes @ 0xE
  2733                           
  2734                           
  2735                           ; 4 bytes @ 0xE
  2736     0054                     	ds	4
  2737     0058                     LCD_write_variable@left_offset:
  2738                           
  2739                           ; 1 bytes @ 0x12
  2740     0058                     	ds	1
  2741     0059                     LCD_write_variable@i:
  2742                           
  2743                           ; 1 bytes @ 0x13
  2744     0059                     	ds	1
  2745     005A                     LCD_write_variable@digits:
  2746                           
  2747                           ; 1 bytes @ 0x14
  2748     005A                     	ds	1
  2749     005B                     LCD_write_variable@temp_variable:
  2750                           
  2751                           ; 4 bytes @ 0x15
  2752     005B                     	ds	4
  2753     005F                     ??_main:
  2754                           
  2755                           ; 1 bytes @ 0x19
  2756     005F                     	ds	3
  2757     0062                     main@adcResult:
  2758                           
  2759                           ; 2 bytes @ 0x1C
  2760     0062                     	ds	2
  2761                           
  2762                           	psect	maintext
  2763     0591                     __pmaintext:	
  2764 ;;
  2765 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  2766 ;;
  2767 ;; *************** function _main *****************
  2768 ;; Defined at:
  2769 ;;		line 71 in file "main.c"
  2770 ;; Parameters:    Size  Location     Type
  2771 ;;		None
  2772 ;; Auto vars:     Size  Location     Type
  2773 ;;  adcResult       2   28[BANK0 ] unsigned int 
  2774 ;;  ival            2    0        int 
  2775 ;;  flag            1    0        unsigned char 
  2776 ;;  x               1    0        unsigned char 
  2777 ;; Return value:  Size  Location     Type
  2778 ;;                  1    wreg      void 
  2779 ;; Registers used:
  2780 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2781 ;; Tracked objects:
  2782 ;;		On entry : B00/0
  2783 ;;		On exit  : 0/0
  2784 ;;		Unchanged: 0/0
  2785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2786 ;;      Params:         0       0       0       0       0
  2787 ;;      Locals:         0       2       0       0       0
  2788 ;;      Temps:          0       3       0       0       0
  2789 ;;      Totals:         0       5       0       0       0
  2790 ;;Total ram usage:        5 bytes
  2791 ;; Hardware stack levels required when called: 5
  2792 ;; This function calls:
  2793 ;;		_ClearStringReceive
  2794 ;;		_InitUART
  2795 ;;		_LCD_clear
  2796 ;;		_LCD_cursor_set
  2797 ;;		_LCD_init
  2798 ;;		_LCD_write_string
  2799 ;;		_LCD_write_variable
  2800 ;;		_SendCommandAT
  2801 ;;		_strstr
  2802 ;; This function is called by:
  2803 ;;		Startup code after reset
  2804 ;; This function uses a non-reentrant model
  2805 ;;
  2806                           
  2807     0591                     _main:	
  2808                           ;psect for function _main
  2809                           
  2810     0591                     l2674:	
  2811                           ;incstack = 0
  2812                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2813                           
  2814                           
  2815                           ;main.c: 72:     LCD_init();
  2816     0591  120A  118A  21F6  120A  118A  	fcall	_LCD_init
  2817                           
  2818                           ;main.c: 73:     LCD_clear();
  2819     0596  120A  158A  26C7  120A  118A  	fcall	_LCD_clear
  2820     059B                     l2676:
  2821                           
  2822                           ;main.c: 74:     LCD_cursor_set(1, 1);
  2823     059B  1283               	bcf	3,5	;RP0=0, select bank0
  2824     059C  1303               	bcf	3,6	;RP1=0, select bank0
  2825     059D  01C6               	clrf	LCD_cursor_set@column
  2826     059E  0AC6               	incf	LCD_cursor_set@column,f
  2827     059F  3001               	movlw	1
  2828     05A0  120A  158A  2793  120A  118A  	fcall	_LCD_cursor_set
  2829     05A5                     l2678:
  2830                           
  2831                           ;main.c: 75:     LCD_write_string("LCD_init()");
  2832     05A5  3094               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2833     05A6  1283               	bcf	3,5	;RP0=0, select bank0
  2834     05A7  1303               	bcf	3,6	;RP1=0, select bank0
  2835     05A8  00C6               	movwf	LCD_write_string@string
  2836     05A9  3080               	movlw	128
  2837     05AA  00C7               	movwf	LCD_write_string@string+1
  2838     05AB  120A  158A  2766  120A  118A  	fcall	_LCD_write_string
  2839     05B0                     l2680:
  2840                           
  2841                           ;main.c: 76:     _delay((unsigned long)((1000)*(4000000/4000.0)));
  2842     05B0  3006               	movlw	6
  2843     05B1  1283               	bcf	3,5	;RP0=0, select bank0
  2844     05B2  1303               	bcf	3,6	;RP1=0, select bank0
  2845     05B3  00E1               	movwf	??_main+2
  2846     05B4  3013               	movlw	19
  2847     05B5  00E0               	movwf	??_main+1
  2848     05B6  30AD               	movlw	173
  2849     05B7  00DF               	movwf	??_main
  2850     05B8                     u2657:
  2851     05B8  0BDF               	decfsz	??_main,f
  2852     05B9  2DB8               	goto	u2657
  2853     05BA  0BE0               	decfsz	??_main+1,f
  2854     05BB  2DB8               	goto	u2657
  2855     05BC  0BE1               	decfsz	??_main+2,f
  2856     05BD  2DB8               	goto	u2657
  2857     05BE                     l2682:
  2858                           
  2859                           ;main.c: 77:     LCD_cursor_set(1, 1);
  2860     05BE  1283               	bcf	3,5	;RP0=0, select bank0
  2861     05BF  1303               	bcf	3,6	;RP1=0, select bank0
  2862     05C0  01C6               	clrf	LCD_cursor_set@column
  2863     05C1  0AC6               	incf	LCD_cursor_set@column,f
  2864     05C2  3001               	movlw	1
  2865     05C3  120A  158A  2793  120A  118A  	fcall	_LCD_cursor_set
  2866     05C8                     l2684:
  2867                           
  2868                           ;main.c: 78:     LCD_write_string("InitKeyPad()");
  2869     05C8  304B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2870     05C9  1283               	bcf	3,5	;RP0=0, select bank0
  2871     05CA  1303               	bcf	3,6	;RP1=0, select bank0
  2872     05CB  00C6               	movwf	LCD_write_string@string
  2873     05CC  3080               	movlw	128
  2874     05CD  00C7               	movwf	LCD_write_string@string+1
  2875     05CE  120A  158A  2766  120A  118A  	fcall	_LCD_write_string
  2876     05D3                     l2686:
  2877                           
  2878                           ;main.c: 79:     _delay((unsigned long)((1000)*(4000000/4000.0)));
  2879     05D3  3006               	movlw	6
  2880     05D4  1283               	bcf	3,5	;RP0=0, select bank0
  2881     05D5  1303               	bcf	3,6	;RP1=0, select bank0
  2882     05D6  00E1               	movwf	??_main+2
  2883     05D7  3013               	movlw	19
  2884     05D8  00E0               	movwf	??_main+1
  2885     05D9  30AD               	movlw	173
  2886     05DA  00DF               	movwf	??_main
  2887     05DB                     u2667:
  2888     05DB  0BDF               	decfsz	??_main,f
  2889     05DC  2DDB               	goto	u2667
  2890     05DD  0BE0               	decfsz	??_main+1,f
  2891     05DE  2DDB               	goto	u2667
  2892     05DF  0BE1               	decfsz	??_main+2,f
  2893     05E0  2DDB               	goto	u2667
  2894     05E1                     l2688:
  2895                           
  2896                           ;main.c: 81:     InitUART();
  2897     05E1  120A  158A  26F5  120A  118A  	fcall	_InitUART
  2898     05E6                     l2690:
  2899                           
  2900                           ;main.c: 82:     LCD_cursor_set(2, 1);
  2901     05E6  1283               	bcf	3,5	;RP0=0, select bank0
  2902     05E7  1303               	bcf	3,6	;RP1=0, select bank0
  2903     05E8  01C6               	clrf	LCD_cursor_set@column
  2904     05E9  0AC6               	incf	LCD_cursor_set@column,f
  2905     05EA  3002               	movlw	2
  2906     05EB  120A  158A  2793  120A  118A  	fcall	_LCD_cursor_set
  2907     05F0                     l2692:
  2908                           
  2909                           ;main.c: 83:     LCD_write_string("UART Init Success");
  2910     05F0  3039               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  2911     05F1  1283               	bcf	3,5	;RP0=0, select bank0
  2912     05F2  1303               	bcf	3,6	;RP1=0, select bank0
  2913     05F3  00C6               	movwf	LCD_write_string@string
  2914     05F4  3080               	movlw	128
  2915     05F5  00C7               	movwf	LCD_write_string@string+1
  2916     05F6  120A  158A  2766  120A  118A  	fcall	_LCD_write_string
  2917     05FB                     l2694:
  2918                           
  2919                           ;main.c: 84:     _delay((unsigned long)((1000)*(4000000/4000.0)));
  2920     05FB  3006               	movlw	6
  2921     05FC  1283               	bcf	3,5	;RP0=0, select bank0
  2922     05FD  1303               	bcf	3,6	;RP1=0, select bank0
  2923     05FE  00E1               	movwf	??_main+2
  2924     05FF  3013               	movlw	19
  2925     0600  00E0               	movwf	??_main+1
  2926     0601  30AD               	movlw	173
  2927     0602  00DF               	movwf	??_main
  2928     0603                     u2677:
  2929     0603  0BDF               	decfsz	??_main,f
  2930     0604  2E03               	goto	u2677
  2931     0605  0BE0               	decfsz	??_main+1,f
  2932     0606  2E03               	goto	u2677
  2933     0607  0BE1               	decfsz	??_main+2,f
  2934     0608  2E03               	goto	u2677
  2935     0609                     l2696:
  2936                           
  2937                           ;main.c: 87:     LCD_clear();
  2938     0609  120A  158A  26C7  120A  118A  	fcall	_LCD_clear
  2939     060E                     l2698:
  2940                           
  2941                           ;main.c: 88:     LCD_cursor_set(1, 1);
  2942     060E  1283               	bcf	3,5	;RP0=0, select bank0
  2943     060F  1303               	bcf	3,6	;RP1=0, select bank0
  2944     0610  01C6               	clrf	LCD_cursor_set@column
  2945     0611  0AC6               	incf	LCD_cursor_set@column,f
  2946     0612  3001               	movlw	1
  2947     0613  120A  158A  2793  120A  118A  	fcall	_LCD_cursor_set
  2948     0618                     l2700:
  2949                           
  2950                           ;main.c: 89:     SendCommandAT("AT");
  2951     0618  30AF               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  2952     0619  120A  158A  26A6  120A  118A  	fcall	_SendCommandAT
  2953     061E                     l2702:
  2954                           
  2955                           ;main.c: 90:     LCD_write_string("AT Sent");
  2956     061E  309F               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  2957     061F  1283               	bcf	3,5	;RP0=0, select bank0
  2958     0620  1303               	bcf	3,6	;RP1=0, select bank0
  2959     0621  00C6               	movwf	LCD_write_string@string
  2960     0622  3080               	movlw	128
  2961     0623  00C7               	movwf	LCD_write_string@string+1
  2962     0624  120A  158A  2766  120A  118A  	fcall	_LCD_write_string
  2963     0629                     l2704:
  2964                           
  2965                           ;main.c: 91:     char x, flag;;main.c: 92:     LCD_cursor_set(2, 1);
  2966     0629  1283               	bcf	3,5	;RP0=0, select bank0
  2967     062A  1303               	bcf	3,6	;RP1=0, select bank0
  2968     062B  01C6               	clrf	LCD_cursor_set@column
  2969     062C  0AC6               	incf	LCD_cursor_set@column,f
  2970     062D  3002               	movlw	2
  2971     062E  120A  158A  2793  120A  118A  	fcall	_LCD_cursor_set
  2972     0633                     l2706:
  2973                           
  2974                           ;main.c: 93:     SendCommandAT("Waiting to Response");
  2975     0633  3012               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  2976     0634  120A  158A  26A6  120A  118A  	fcall	_SendCommandAT
  2977     0639                     l2708:
  2978                           
  2979                           ;main.c: 94:     _delay((unsigned long)((1000)*(4000000/4000.0)));
  2980     0639  3006               	movlw	6
  2981     063A  1283               	bcf	3,5	;RP0=0, select bank0
  2982     063B  1303               	bcf	3,6	;RP1=0, select bank0
  2983     063C  00E1               	movwf	??_main+2
  2984     063D  3013               	movlw	19
  2985     063E  00E0               	movwf	??_main+1
  2986     063F  30AD               	movlw	173
  2987     0640  00DF               	movwf	??_main
  2988     0641                     u2687:
  2989     0641  0BDF               	decfsz	??_main,f
  2990     0642  2E41               	goto	u2687
  2991     0643  0BE0               	decfsz	??_main+1,f
  2992     0644  2E41               	goto	u2687
  2993     0645  0BE1               	decfsz	??_main+2,f
  2994     0646  2E41               	goto	u2687
  2995     0647                     l2710:
  2996                           
  2997                           ;main.c: 95:     LCD_clear();
  2998     0647  120A  158A  26C7  120A  118A  	fcall	_LCD_clear
  2999     064C                     l2712:
  3000                           
  3001                           ;main.c: 96:     LCD_cursor_set(1, 1);
  3002     064C  1283               	bcf	3,5	;RP0=0, select bank0
  3003     064D  1303               	bcf	3,6	;RP1=0, select bank0
  3004     064E  01C6               	clrf	LCD_cursor_set@column
  3005     064F  0AC6               	incf	LCD_cursor_set@column,f
  3006     0650  3001               	movlw	1
  3007     0651  120A  158A  2793  120A  118A  	fcall	_LCD_cursor_set
  3008     0656                     l2714:
  3009                           
  3010                           ;main.c: 97:     LCD_write_string("Received OK");
  3011     0656  3058               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  3012     0657  1283               	bcf	3,5	;RP0=0, select bank0
  3013     0658  1303               	bcf	3,6	;RP1=0, select bank0
  3014     0659  00C6               	movwf	LCD_write_string@string
  3015     065A  3080               	movlw	128
  3016     065B  00C7               	movwf	LCD_write_string@string+1
  3017     065C  120A  158A  2766  120A  118A  	fcall	_LCD_write_string
  3018     0661                     l2716:
  3019                           
  3020                           ;main.c: 98:     LCD_cursor_set(2, 1);
  3021     0661  1283               	bcf	3,5	;RP0=0, select bank0
  3022     0662  1303               	bcf	3,6	;RP1=0, select bank0
  3023     0663  01C6               	clrf	LCD_cursor_set@column
  3024     0664  0AC6               	incf	LCD_cursor_set@column,f
  3025     0665  3002               	movlw	2
  3026     0666  120A  158A  2793  120A  118A  	fcall	_LCD_cursor_set
  3027     066B                     l2718:
  3028                           
  3029                           ;main.c: 99:     LCD_write_string("ESP 8266 Connected");
  3030     066B  3026               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  3031     066C  1283               	bcf	3,5	;RP0=0, select bank0
  3032     066D  1303               	bcf	3,6	;RP1=0, select bank0
  3033     066E  00C6               	movwf	LCD_write_string@string
  3034     066F  3080               	movlw	128
  3035     0670  00C7               	movwf	LCD_write_string@string+1
  3036     0671  120A  158A  2766  120A  118A  	fcall	_LCD_write_string
  3037     0676                     l2720:
  3038                           
  3039                           ;main.c: 100:     _delay((unsigned long)((1000)*(4000000/4000.0)));
  3040     0676  3006               	movlw	6
  3041     0677  1283               	bcf	3,5	;RP0=0, select bank0
  3042     0678  1303               	bcf	3,6	;RP1=0, select bank0
  3043     0679  00E1               	movwf	??_main+2
  3044     067A  3013               	movlw	19
  3045     067B  00E0               	movwf	??_main+1
  3046     067C  30AD               	movlw	173
  3047     067D  00DF               	movwf	??_main
  3048     067E                     u2697:
  3049     067E  0BDF               	decfsz	??_main,f
  3050     067F  2E7E               	goto	u2697
  3051     0680  0BE0               	decfsz	??_main+1,f
  3052     0681  2E7E               	goto	u2697
  3053     0682  0BE1               	decfsz	??_main+2,f
  3054     0683  2E7E               	goto	u2697
  3055     0684                     l2722:
  3056                           
  3057                           ;main.c: 101:     LCD_clear();
  3058     0684  120A  158A  26C7  120A  118A  	fcall	_LCD_clear
  3059     0689                     l2724:
  3060                           
  3061                           ;main.c: 103:     TRISB=0X00;
  3062     0689  1683               	bsf	3,5	;RP0=1, select bank1
  3063     068A  1303               	bcf	3,6	;RP1=0, select bank1
  3064     068B  0186               	clrf	6	;volatile
  3065     068C                     l2726:
  3066                           
  3067                           ;main.c: 104:     PORTB=0X00;
  3068     068C  1283               	bcf	3,5	;RP0=0, select bank0
  3069     068D  1303               	bcf	3,6	;RP1=0, select bank0
  3070     068E  0186               	clrf	6	;volatile
  3071     068F                     l2728:
  3072                           
  3073                           ;main.c: 106:     PORTBbits.RB7 = 0;
  3074     068F  1386               	bcf	6,7	;volatile
  3075     0690                     l2730:
  3076                           
  3077                           ;main.c: 107:     PORTBbits.RB6 = 0;
  3078     0690  1306               	bcf	6,6	;volatile
  3079     0691                     l2732:
  3080                           
  3081                           ;main.c: 109:     ADCON1 = 0x80;
  3082     0691  3080               	movlw	128
  3083     0692  1683               	bsf	3,5	;RP0=1, select bank1
  3084     0693  1303               	bcf	3,6	;RP1=0, select bank1
  3085     0694  009F               	movwf	31	;volatile
  3086     0695                     l2734:
  3087                           
  3088                           ;main.c: 110:     ADCON0 = 0x01;
  3089     0695  3001               	movlw	1
  3090     0696  1283               	bcf	3,5	;RP0=0, select bank0
  3091     0697  1303               	bcf	3,6	;RP1=0, select bank0
  3092     0698  009F               	movwf	31	;volatile
  3093     0699                     l2736:
  3094                           
  3095                           ;main.c: 112:     TRISA0 = 1;
  3096     0699  1683               	bsf	3,5	;RP0=1, select bank1
  3097     069A  1303               	bcf	3,6	;RP1=0, select bank1
  3098     069B  1405               	bsf	5,0	;volatile
  3099     069C                     l2738:
  3100                           
  3101                           ;main.c: 117:         GO_nDONE = 1;
  3102     069C  1283               	bcf	3,5	;RP0=0, select bank0
  3103     069D  1303               	bcf	3,6	;RP1=0, select bank0
  3104     069E  149F               	bsf	31,1	;volatile
  3105     069F                     l261:	
  3106                           ;main.c: 118:         while(GO_nDONE);
  3107                           
  3108     069F  189F               	btfsc	31,1	;volatile
  3109     06A0  2EA2               	goto	u2601
  3110     06A1  2EA3               	goto	u2600
  3111     06A2                     u2601:
  3112     06A2  2E9F               	goto	l261
  3113     06A3                     u2600:
  3114     06A3                     l2740:
  3115                           
  3116                           ;main.c: 120:         unsigned int adcResult = ADRESH << 8 | ADRESL;
  3117     06A3  081E               	movf	30,w	;volatile
  3118     06A4  00E3               	movwf	main@adcResult+1
  3119     06A5  1683               	bsf	3,5	;RP0=1, select bank1
  3120     06A6  1303               	bcf	3,6	;RP1=0, select bank1
  3121     06A7  081E               	movf	30,w	;volatile
  3122     06A8  1283               	bcf	3,5	;RP0=0, select bank0
  3123     06A9  1303               	bcf	3,6	;RP1=0, select bank0
  3124     06AA  00E2               	movwf	main@adcResult
  3125     06AB                     l2742:
  3126                           
  3127                           ;main.c: 122:         LCD_cursor_set(2, 1);
  3128     06AB  01C6               	clrf	LCD_cursor_set@column
  3129     06AC  0AC6               	incf	LCD_cursor_set@column,f
  3130     06AD  3002               	movlw	2
  3131     06AE  120A  158A  2793  120A  118A  	fcall	_LCD_cursor_set
  3132     06B3                     l2744:
  3133                           
  3134                           ;main.c: 123:         LCD_write_string(StringReceive);
  3135     06B3  3028               	movlw	(low (_StringReceive| 0))& (0+255)
  3136     06B4  1283               	bcf	3,5	;RP0=0, select bank0
  3137     06B5  1303               	bcf	3,6	;RP1=0, select bank0
  3138     06B6  00C6               	movwf	LCD_write_string@string
  3139     06B7  3000               	movlw	0
  3140     06B8  00C7               	movwf	LCD_write_string@string+1
  3141     06B9  120A  158A  2766  120A  118A  	fcall	_LCD_write_string
  3142     06BE                     l2746:
  3143                           
  3144                           ;main.c: 124:         LCD_cursor_set(1, 13);
  3145     06BE  300D               	movlw	13
  3146     06BF  1283               	bcf	3,5	;RP0=0, select bank0
  3147     06C0  1303               	bcf	3,6	;RP1=0, select bank0
  3148     06C1  00C6               	movwf	LCD_cursor_set@column
  3149     06C2  3001               	movlw	1
  3150     06C3  120A  158A  2793  120A  118A  	fcall	_LCD_cursor_set
  3151     06C8                     l2748:
  3152                           
  3153                           ;main.c: 125:         LCD_write_variable(adcResult, 4);
  3154     06C8  1283               	bcf	3,5	;RP0=0, select bank0
  3155     06C9  1303               	bcf	3,6	;RP1=0, select bank0
  3156     06CA  0862               	movf	main@adcResult,w
  3157     06CB  00D4               	movwf	LCD_write_variable@variable
  3158     06CC  0863               	movf	main@adcResult+1,w
  3159     06CD  00D5               	movwf	LCD_write_variable@variable+1
  3160     06CE  01D6               	clrf	LCD_write_variable@variable+2
  3161     06CF  01D7               	clrf	LCD_write_variable@variable+3
  3162     06D0  3004               	movlw	4
  3163     06D1  00D8               	movwf	LCD_write_variable@left_offset
  3164     06D2  120A  118A  24B9  120A  118A  	fcall	_LCD_write_variable
  3165     06D7                     l2750:
  3166                           
  3167                           ;main.c: 126:         LCD_cursor_set(1, 1);
  3168     06D7  1283               	bcf	3,5	;RP0=0, select bank0
  3169     06D8  1303               	bcf	3,6	;RP1=0, select bank0
  3170     06D9  01C6               	clrf	LCD_cursor_set@column
  3171     06DA  0AC6               	incf	LCD_cursor_set@column,f
  3172     06DB  3001               	movlw	1
  3173     06DC  120A  158A  2793  120A  118A  	fcall	_LCD_cursor_set
  3174     06E1                     l2752:
  3175                           
  3176                           ;main.c: 127:         if(strstr(StringReceive, "Open") != ((void*)0)){
  3177     06E1  30A7               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  3178     06E2  1283               	bcf	3,5	;RP0=0, select bank0
  3179     06E3  1303               	bcf	3,6	;RP1=0, select bank0
  3180     06E4  00C8               	movwf	strstr@n
  3181     06E5  3028               	movlw	(low (_StringReceive| 0))& (0+255)
  3182     06E6  120A  118A  2142  120A  118A  	fcall	_strstr
  3183     06EB  3A00               	xorlw	0
  3184     06EC  1903               	skipnz
  3185     06ED  2EEF               	goto	u2611
  3186     06EE  2EF0               	goto	u2610
  3187     06EF                     u2611:
  3188     06EF  2FA3               	goto	l2794
  3189     06F0                     u2610:
  3190     06F0                     l2754:
  3191                           
  3192                           ;main.c: 128:             LCD_write_string("Door Opened");
  3193     06F0  307C               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  3194     06F1  1283               	bcf	3,5	;RP0=0, select bank0
  3195     06F2  1303               	bcf	3,6	;RP1=0, select bank0
  3196     06F3  00C6               	movwf	LCD_write_string@string
  3197     06F4  3080               	movlw	128
  3198     06F5  00C7               	movwf	LCD_write_string@string+1
  3199     06F6  120A  158A  2766  120A  118A  	fcall	_LCD_write_string
  3200     06FB                     l2756:
  3201                           
  3202                           ;main.c: 129:             PORTBbits.RB6 = 1;
  3203     06FB  1283               	bcf	3,5	;RP0=0, select bank0
  3204     06FC  1303               	bcf	3,6	;RP1=0, select bank0
  3205     06FD  1706               	bsf	6,6	;volatile
  3206     06FE                     l2758:
  3207                           
  3208                           ;main.c: 130:             _delay((unsigned long)((1000)*(4000000/4000.0)));
  3209     06FE  3006               	movlw	6
  3210     06FF  1283               	bcf	3,5	;RP0=0, select bank0
  3211     0700  1303               	bcf	3,6	;RP1=0, select bank0
  3212     0701  00E1               	movwf	??_main+2
  3213     0702  3013               	movlw	19
  3214     0703  00E0               	movwf	??_main+1
  3215     0704  30AD               	movlw	173
  3216     0705  00DF               	movwf	??_main
  3217     0706                     u2707:
  3218     0706  0BDF               	decfsz	??_main,f
  3219     0707  2F06               	goto	u2707
  3220     0708  0BE0               	decfsz	??_main+1,f
  3221     0709  2F06               	goto	u2707
  3222     070A  0BE1               	decfsz	??_main+2,f
  3223     070B  2F06               	goto	u2707
  3224     070C                     l2760:
  3225                           
  3226                           ;main.c: 131:             PORTBbits.RB7 = 1;
  3227     070C  1283               	bcf	3,5	;RP0=0, select bank0
  3228     070D  1303               	bcf	3,6	;RP1=0, select bank0
  3229     070E  1786               	bsf	6,7	;volatile
  3230                           
  3231                           ;main.c: 133:             while(adcResult > 500){
  3232     070F  2F5F               	goto	l2778
  3233     0710                     l266:
  3234                           
  3235                           ;main.c: 134:                 GO_nDONE = 1;
  3236     0710  149F               	bsf	31,1	;volatile
  3237     0711                     l267:	
  3238                           ;main.c: 135:                 while(GO_nDONE);
  3239                           
  3240     0711  189F               	btfsc	31,1	;volatile
  3241     0712  2F14               	goto	u2621
  3242     0713  2F15               	goto	u2620
  3243     0714                     u2621:
  3244     0714  2F11               	goto	l267
  3245     0715                     u2620:
  3246     0715                     l2762:
  3247                           
  3248                           ;main.c: 136:                 LCD_cursor_set(1, 1);
  3249     0715  01C6               	clrf	LCD_cursor_set@column
  3250     0716  0AC6               	incf	LCD_cursor_set@column,f
  3251     0717  3001               	movlw	1
  3252     0718  120A  158A  2793  120A  118A  	fcall	_LCD_cursor_set
  3253     071D                     l2764:
  3254                           
  3255                           ;main.c: 137:                 adcResult = ADRESH << 8 | ADRESL;
  3256     071D  1283               	bcf	3,5	;RP0=0, select bank0
  3257     071E  1303               	bcf	3,6	;RP1=0, select bank0
  3258     071F  081E               	movf	30,w	;volatile
  3259     0720  00E3               	movwf	main@adcResult+1
  3260     0721  1683               	bsf	3,5	;RP0=1, select bank1
  3261     0722  1303               	bcf	3,6	;RP1=0, select bank1
  3262     0723  081E               	movf	30,w	;volatile
  3263     0724  1283               	bcf	3,5	;RP0=0, select bank0
  3264     0725  1303               	bcf	3,6	;RP1=0, select bank0
  3265     0726  00E2               	movwf	main@adcResult
  3266     0727                     l2766:
  3267                           
  3268                           ;main.c: 139:                 LCD_cursor_set(1, 1);
  3269     0727  01C6               	clrf	LCD_cursor_set@column
  3270     0728  0AC6               	incf	LCD_cursor_set@column,f
  3271     0729  3001               	movlw	1
  3272     072A  120A  158A  2793  120A  118A  	fcall	_LCD_cursor_set
  3273     072F                     l2768:
  3274                           
  3275                           ;main.c: 140:                 LCD_write_string("Check IR SR");
  3276     072F  3070               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  3277     0730  1283               	bcf	3,5	;RP0=0, select bank0
  3278     0731  1303               	bcf	3,6	;RP1=0, select bank0
  3279     0732  00C6               	movwf	LCD_write_string@string
  3280     0733  3080               	movlw	128
  3281     0734  00C7               	movwf	LCD_write_string@string+1
  3282     0735  120A  158A  2766  120A  118A  	fcall	_LCD_write_string
  3283     073A                     l2770:
  3284                           
  3285                           ;main.c: 141:                 LCD_cursor_set(1, 13);
  3286     073A  300D               	movlw	13
  3287     073B  1283               	bcf	3,5	;RP0=0, select bank0
  3288     073C  1303               	bcf	3,6	;RP1=0, select bank0
  3289     073D  00C6               	movwf	LCD_cursor_set@column
  3290     073E  3001               	movlw	1
  3291     073F  120A  158A  2793  120A  118A  	fcall	_LCD_cursor_set
  3292     0744                     l2772:
  3293                           
  3294                           ;main.c: 142:                 LCD_write_variable(adcResult, 4);
  3295     0744  1283               	bcf	3,5	;RP0=0, select bank0
  3296     0745  1303               	bcf	3,6	;RP1=0, select bank0
  3297     0746  0862               	movf	main@adcResult,w
  3298     0747  00D4               	movwf	LCD_write_variable@variable
  3299     0748  0863               	movf	main@adcResult+1,w
  3300     0749  00D5               	movwf	LCD_write_variable@variable+1
  3301     074A  01D6               	clrf	LCD_write_variable@variable+2
  3302     074B  01D7               	clrf	LCD_write_variable@variable+3
  3303     074C  3004               	movlw	4
  3304     074D  00D8               	movwf	LCD_write_variable@left_offset
  3305     074E  120A  118A  24B9  120A  118A  	fcall	_LCD_write_variable
  3306     0753                     l2774:
  3307                           
  3308                           ;main.c: 143:                 if(adcResult < 500){
  3309     0753  3001               	movlw	1
  3310     0754  1283               	bcf	3,5	;RP0=0, select bank0
  3311     0755  1303               	bcf	3,6	;RP1=0, select bank0
  3312     0756  0263               	subwf	main@adcResult+1,w
  3313     0757  30F4               	movlw	244
  3314     0758  1903               	skipnz
  3315     0759  0262               	subwf	main@adcResult,w
  3316     075A  1803               	skipnc
  3317     075B  2F5D               	goto	u2631
  3318     075C  2F5E               	goto	u2630
  3319     075D                     u2631:
  3320     075D  2F5F               	goto	l2778
  3321     075E                     u2630:
  3322     075E  2F68               	goto	l2780
  3323     075F                     l2778:
  3324                           
  3325                           ;main.c: 133:             while(adcResult > 500){
  3326     075F  3001               	movlw	1
  3327     0760  0263               	subwf	main@adcResult+1,w
  3328     0761  30F5               	movlw	245
  3329     0762  1903               	skipnz
  3330     0763  0262               	subwf	main@adcResult,w
  3331     0764  1803               	skipnc
  3332     0765  2F67               	goto	u2641
  3333     0766  2F68               	goto	u2640
  3334     0767                     u2641:
  3335     0767  2F10               	goto	l266
  3336     0768                     u2640:
  3337     0768                     l2780:
  3338                           
  3339                           ;main.c: 147:             LCD_cursor_set(1, 1);
  3340     0768  01C6               	clrf	LCD_cursor_set@column
  3341     0769  0AC6               	incf	LCD_cursor_set@column,f
  3342     076A  3001               	movlw	1
  3343     076B  120A  158A  2793  120A  118A  	fcall	_LCD_cursor_set
  3344     0770                     l2782:
  3345                           
  3346                           ;main.c: 148:             LCD_write_string("Doned IR SR");
  3347     0770  3064               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  3348     0771  1283               	bcf	3,5	;RP0=0, select bank0
  3349     0772  1303               	bcf	3,6	;RP1=0, select bank0
  3350     0773  00C6               	movwf	LCD_write_string@string
  3351     0774  3080               	movlw	128
  3352     0775  00C7               	movwf	LCD_write_string@string+1
  3353     0776  120A  158A  2766  120A  118A  	fcall	_LCD_write_string
  3354     077B                     l2784:
  3355                           
  3356                           ;main.c: 149:             _delay((unsigned long)((500)*(4000000/4000.0)));
  3357     077B  3003               	movlw	3
  3358     077C  1283               	bcf	3,5	;RP0=0, select bank0
  3359     077D  1303               	bcf	3,6	;RP1=0, select bank0
  3360     077E  00E1               	movwf	??_main+2
  3361     077F  308A               	movlw	138
  3362     0780  00E0               	movwf	??_main+1
  3363     0781  3055               	movlw	85
  3364     0782  00DF               	movwf	??_main
  3365     0783                     u2717:
  3366     0783  0BDF               	decfsz	??_main,f
  3367     0784  2F83               	goto	u2717
  3368     0785  0BE0               	decfsz	??_main+1,f
  3369     0786  2F83               	goto	u2717
  3370     0787  0BE1               	decfsz	??_main+2,f
  3371     0788  2F83               	goto	u2717
  3372     0789                     l2786:
  3373                           
  3374                           ;main.c: 150:             PORTBbits.RB6 = 0;
  3375     0789  1283               	bcf	3,5	;RP0=0, select bank0
  3376     078A  1303               	bcf	3,6	;RP1=0, select bank0
  3377     078B  1306               	bcf	6,6	;volatile
  3378     078C                     l2788:
  3379                           
  3380                           ;main.c: 151:             _delay((unsigned long)((1000)*(4000000/4000.0)));
  3381     078C  3006               	movlw	6
  3382     078D  1283               	bcf	3,5	;RP0=0, select bank0
  3383     078E  1303               	bcf	3,6	;RP1=0, select bank0
  3384     078F  00E1               	movwf	??_main+2
  3385     0790  3013               	movlw	19
  3386     0791  00E0               	movwf	??_main+1
  3387     0792  30AD               	movlw	173
  3388     0793  00DF               	movwf	??_main
  3389     0794                     u2727:
  3390     0794  0BDF               	decfsz	??_main,f
  3391     0795  2F94               	goto	u2727
  3392     0796  0BE0               	decfsz	??_main+1,f
  3393     0797  2F94               	goto	u2727
  3394     0798  0BE1               	decfsz	??_main+2,f
  3395     0799  2F94               	goto	u2727
  3396     079A                     l2790:
  3397                           
  3398                           ;main.c: 152:             PORTBbits.RB7 = 0;
  3399     079A  1283               	bcf	3,5	;RP0=0, select bank0
  3400     079B  1303               	bcf	3,6	;RP1=0, select bank0
  3401     079C  1386               	bcf	6,7	;volatile
  3402     079D                     l2792:
  3403                           
  3404                           ;main.c: 154:             ClearStringReceive();
  3405     079D  120A  158A  2728  120A  118A  	fcall	_ClearStringReceive
  3406                           
  3407                           ;main.c: 155:         }else{
  3408     07A2  2FB3               	goto	l2796
  3409     07A3                     l2794:
  3410                           
  3411                           ;main.c: 156:             LCD_write_string("Door Closed");
  3412     07A3  3088               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
  3413     07A4  1283               	bcf	3,5	;RP0=0, select bank0
  3414     07A5  1303               	bcf	3,6	;RP1=0, select bank0
  3415     07A6  00C6               	movwf	LCD_write_string@string
  3416     07A7  3080               	movlw	128
  3417     07A8  00C7               	movwf	LCD_write_string@string+1
  3418     07A9  120A  158A  2766  120A  118A  	fcall	_LCD_write_string
  3419                           
  3420                           ;main.c: 157:             ClearStringReceive();
  3421     07AE  120A  158A  2728  120A  118A  	fcall	_ClearStringReceive
  3422     07B3                     l2796:
  3423                           
  3424                           ;main.c: 161:         _delay((unsigned long)((1000)*(4000000/4000.0)));
  3425     07B3  3006               	movlw	6
  3426     07B4  1283               	bcf	3,5	;RP0=0, select bank0
  3427     07B5  1303               	bcf	3,6	;RP1=0, select bank0
  3428     07B6  00E1               	movwf	??_main+2
  3429     07B7  3013               	movlw	19
  3430     07B8  00E0               	movwf	??_main+1
  3431     07B9  30AD               	movlw	173
  3432     07BA  00DF               	movwf	??_main
  3433     07BB                     u2737:
  3434     07BB  0BDF               	decfsz	??_main,f
  3435     07BC  2FBB               	goto	u2737
  3436     07BD  0BE0               	decfsz	??_main+1,f
  3437     07BE  2FBB               	goto	u2737
  3438     07BF  0BE1               	decfsz	??_main+2,f
  3439     07C0  2FBB               	goto	u2737
  3440     07C1                     l2798:
  3441                           
  3442                           ;main.c: 162:         LCD_clear();
  3443     07C1  120A  158A  26C7  120A  118A  	fcall	_LCD_clear
  3444     07C6  2E9C               	goto	l2738
  3445     07C7  120A  118A  280E   	ljmp	start
  3446     07CA                     __end_of_main:
  3447                           
  3448                           	psect	text1
  3449     0142                     __ptext1:	
  3450 ;; *************** function _strstr *****************
  3451 ;; Defined at:
  3452 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\strstr.c"
  3453 ;; Parameters:    Size  Location     Type
  3454 ;;  h               1    wreg     PTR const unsigned char 
  3455 ;;		 -> NULL(0), StringReceive(30), 
  3456 ;;  n               1    2[BANK0 ] PTR const unsigned char 
  3457 ;;		 -> STR_9(5), 
  3458 ;; Auto vars:     Size  Location     Type
  3459 ;;  h               1    7[BANK0 ] PTR const unsigned char 
  3460 ;;		 -> NULL(0), StringReceive(30), 
  3461 ;;  nl              2    5[BANK0 ] unsigned int 
  3462 ;; Return value:  Size  Location     Type
  3463 ;;                  1    wreg      PTR unsigned char 
  3464 ;; Registers used:
  3465 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3466 ;; Tracked objects:
  3467 ;;		On entry : 0/0
  3468 ;;		On exit  : 0/0
  3469 ;;		Unchanged: 0/0
  3470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3471 ;;      Params:         0       1       0       0       0
  3472 ;;      Locals:         0       3       0       0       0
  3473 ;;      Temps:          0       2       0       0       0
  3474 ;;      Totals:         0       6       0       0       0
  3475 ;;Total ram usage:        6 bytes
  3476 ;; Hardware stack levels used: 1
  3477 ;; Hardware stack levels required when called: 3
  3478 ;; This function calls:
  3479 ;;		_strchr
  3480 ;;		_strlen
  3481 ;;		_strncmp
  3482 ;; This function is called by:
  3483 ;;		_main
  3484 ;; This function uses a non-reentrant model
  3485 ;;
  3486                           
  3487     0142                     _strstr:	
  3488                           ;psect for function _strstr
  3489                           
  3490                           
  3491                           ;incstack = 0
  3492                           ; Regs used in _strstr: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3493                           ;strstr@h stored from wreg
  3494     0142  1283               	bcf	3,5	;RP0=0, select bank0
  3495     0143  1303               	bcf	3,6	;RP1=0, select bank0
  3496     0144  00CD               	movwf	strstr@h
  3497     0145                     l2566:
  3498     0145  0848               	movf	strstr@n,w
  3499     0146  1903               	btfsc	3,2
  3500     0147  2949               	goto	u2461
  3501     0148  294A               	goto	u2460
  3502     0149                     u2461:
  3503     0149  2993               	goto	l2582
  3504     014A                     u2460:
  3505     014A                     l2568:
  3506     014A  0848               	movf	strstr@n,w
  3507     014B  120A  158A  270D  120A  118A  	fcall	_strlen
  3508     0150  0875               	movf	?_strlen+1,w
  3509     0151  1283               	bcf	3,5	;RP0=0, select bank0
  3510     0152  1303               	bcf	3,6	;RP1=0, select bank0
  3511     0153  00CC               	movwf	strstr@nl+1
  3512     0154  0874               	movf	?_strlen,w
  3513     0155  00CB               	movwf	strstr@nl
  3514     0156  2986               	goto	l2578
  3515     0157                     l2570:
  3516     0157  0848               	movf	strstr@n,w
  3517     0158  00F4               	movwf	strncmp@r
  3518     0159  084C               	movf	strstr@nl+1,w
  3519     015A  00F6               	movwf	strncmp@n+1
  3520     015B  084B               	movf	strstr@nl,w
  3521     015C  00F5               	movwf	strncmp@n
  3522     015D  084D               	movf	strstr@h,w
  3523     015E  120A  118A  2195  120A  118A  	fcall	_strncmp
  3524     0163  0874               	movf	?_strncmp,w
  3525     0164  0475               	iorwf	?_strncmp+1,w
  3526     0165  1D03               	btfss	3,2
  3527     0166  2968               	goto	u2471
  3528     0167  2969               	goto	u2470
  3529     0168                     u2471:
  3530     0168  296D               	goto	l2576
  3531     0169                     u2470:
  3532     0169                     l2572:
  3533     0169  1283               	bcf	3,5	;RP0=0, select bank0
  3534     016A  1303               	bcf	3,6	;RP1=0, select bank0
  3535     016B  084D               	movf	strstr@h,w
  3536     016C  2994               	goto	l978
  3537     016D                     l2576:
  3538     016D  1283               	bcf	3,5	;RP0=0, select bank0
  3539     016E  1303               	bcf	3,6	;RP1=0, select bank0
  3540     016F  0848               	movf	strstr@n,w
  3541     0170  0084               	movwf	4
  3542     0171  120A  118A  201B  120A  118A  	fcall	stringdir
  3543     0176  00C9               	movwf	??_strstr
  3544     0177  01CA               	clrf	??_strstr+1
  3545     0178  0849               	movf	??_strstr,w
  3546     0179  00F4               	movwf	strchr@c
  3547     017A  084A               	movf	??_strstr+1,w
  3548     017B  00F5               	movwf	strchr@c+1
  3549     017C  084D               	movf	strstr@h,w
  3550     017D  3E01               	addlw	1
  3551     017E  120A  158A  26DE  120A  118A  	fcall	_strchr
  3552     0183  1283               	bcf	3,5	;RP0=0, select bank0
  3553     0184  1303               	bcf	3,6	;RP1=0, select bank0
  3554     0185  00CD               	movwf	strstr@h
  3555     0186                     l2578:
  3556     0186  084D               	movf	strstr@h,w
  3557     0187  1903               	btfsc	3,2
  3558     0188  298A               	goto	u2481
  3559     0189  298B               	goto	u2480
  3560     018A                     u2481:
  3561     018A  2993               	goto	l2582
  3562     018B                     u2480:
  3563     018B                     l2580:
  3564     018B  084D               	movf	strstr@h,w
  3565     018C  0084               	movwf	4
  3566     018D  1383               	bcf	3,7	;select IRP bank0
  3567     018E  0800               	movf	0,w
  3568     018F  1D03               	btfss	3,2
  3569     0190  2992               	goto	u2491
  3570     0191  2993               	goto	u2490
  3571     0192                     u2491:
  3572     0192  2957               	goto	l2570
  3573     0193                     u2490:
  3574     0193                     l2582:
  3575     0193  3000               	movlw	0
  3576     0194                     l978:
  3577     0194  0008               	return
  3578     0195                     __end_of_strstr:
  3579                           
  3580                           	psect	text2
  3581     0195                     __ptext2:	
  3582 ;; *************** function _strncmp *****************
  3583 ;; Defined at:
  3584 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\strncmp.c"
  3585 ;; Parameters:    Size  Location     Type
  3586 ;;  l               1    wreg     PTR const unsigned char 
  3587 ;;		 -> NULL(0), StringReceive(30), 
  3588 ;;  r               1    3[COMMON] PTR const unsigned char 
  3589 ;;		 -> STR_9(5), 
  3590 ;;  n               2    4[COMMON] unsigned int 
  3591 ;; Auto vars:     Size  Location     Type
  3592 ;;  l               1    6[COMMON] PTR const unsigned char 
  3593 ;;		 -> NULL(0), StringReceive(30), 
  3594 ;; Return value:  Size  Location     Type
  3595 ;;                  2    3[COMMON] int 
  3596 ;; Registers used:
  3597 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  3598 ;; Tracked objects:
  3599 ;;		On entry : 0/0
  3600 ;;		On exit  : 0/0
  3601 ;;		Unchanged: 0/0
  3602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3603 ;;      Params:         3       0       0       0       0
  3604 ;;      Locals:         1       0       0       0       0
  3605 ;;      Temps:          0       2       0       0       0
  3606 ;;      Totals:         4       2       0       0       0
  3607 ;;Total ram usage:        6 bytes
  3608 ;; Hardware stack levels used: 2
  3609 ;; Hardware stack levels required when called: 1
  3610 ;; This function calls:
  3611 ;;		Nothing
  3612 ;; This function is called by:
  3613 ;;		_strstr
  3614 ;; This function uses a non-reentrant model
  3615 ;;
  3616                           
  3617     0195                     _strncmp:	
  3618                           ;psect for function _strncmp
  3619                           
  3620                           
  3621                           ;incstack = 0
  3622                           ; Regs used in _strncmp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  3623                           ;strncmp@l stored from wreg
  3624     0195  00F7               	movwf	strncmp@l
  3625     0196                     l2436:
  3626     0196  3001               	movlw	1
  3627     0197  02F5               	subwf	strncmp@n,f
  3628     0198  3000               	movlw	0
  3629     0199  1C03               	skipc
  3630     019A  03F6               	decf	strncmp@n+1,f
  3631     019B  02F6               	subwf	strncmp@n+1,f
  3632     019C  0A75               	incf	strncmp@n,w
  3633     019D  1D03               	skipz
  3634     019E  29A3               	goto	u2311
  3635     019F  0A76               	incf	strncmp@n+1,w
  3636     01A0  1D03               	btfss	3,2
  3637     01A1  29A3               	goto	u2311
  3638     01A2  29A4               	goto	u2310
  3639     01A3                     u2311:
  3640     01A3  29B5               	goto	l2446
  3641     01A4                     u2310:
  3642     01A4                     l2438:
  3643     01A4  01F4               	clrf	?_strncmp
  3644     01A5  01F5               	clrf	?_strncmp+1
  3645     01A6  29F5               	goto	l997
  3646     01A7                     l2442:
  3647     01A7  3001               	movlw	1
  3648     01A8  00FF               	movwf	btemp+1
  3649     01A9  087F               	movf	btemp+1,w
  3650     01AA  07F7               	addwf	strncmp@l,f
  3651     01AB  3001               	movlw	1
  3652     01AC  00FF               	movwf	btemp+1
  3653     01AD  087F               	movf	btemp+1,w
  3654     01AE  07F4               	addwf	strncmp@r,f
  3655     01AF                     l2444:
  3656     01AF  3001               	movlw	1
  3657     01B0  02F5               	subwf	strncmp@n,f
  3658     01B1  3000               	movlw	0
  3659     01B2  1C03               	skipc
  3660     01B3  03F6               	decf	strncmp@n+1,f
  3661     01B4  02F6               	subwf	strncmp@n+1,f
  3662     01B5                     l2446:
  3663     01B5  0877               	movf	strncmp@l,w
  3664     01B6  0084               	movwf	4
  3665     01B7  1383               	bcf	3,7	;select IRP bank0
  3666     01B8  0800               	movf	0,w
  3667     01B9  1903               	btfsc	3,2
  3668     01BA  29BC               	goto	u2321
  3669     01BB  29BD               	goto	u2320
  3670     01BC                     u2321:
  3671     01BC  29E1               	goto	l2454
  3672     01BD                     u2320:
  3673     01BD                     l2448:
  3674     01BD  0874               	movf	strncmp@r,w
  3675     01BE  0084               	movwf	4
  3676     01BF  120A  118A  201B  120A  118A  	fcall	stringdir
  3677     01C4  3A00               	xorlw	0
  3678     01C5  1903               	skipnz
  3679     01C6  29C8               	goto	u2331
  3680     01C7  29C9               	goto	u2330
  3681     01C8                     u2331:
  3682     01C8  29E1               	goto	l2454
  3683     01C9                     u2330:
  3684     01C9                     l2450:
  3685     01C9  0875               	movf	strncmp@n,w
  3686     01CA  0476               	iorwf	strncmp@n+1,w
  3687     01CB  1903               	btfsc	3,2
  3688     01CC  29CE               	goto	u2341
  3689     01CD  29CF               	goto	u2340
  3690     01CE                     u2341:
  3691     01CE  29E1               	goto	l2454
  3692     01CF                     u2340:
  3693     01CF                     l2452:
  3694     01CF  0874               	movf	strncmp@r,w
  3695     01D0  0084               	movwf	4
  3696     01D1  120A  118A  201B  120A  118A  	fcall	stringdir
  3697     01D6  1283               	bcf	3,5	;RP0=0, select bank0
  3698     01D7  1303               	bcf	3,6	;RP1=0, select bank0
  3699     01D8  00C6               	movwf	??_strncmp
  3700     01D9  0877               	movf	strncmp@l,w
  3701     01DA  0084               	movwf	4
  3702     01DB  0800               	movf	0,w
  3703     01DC  0646               	xorwf	??_strncmp,w
  3704     01DD  1903               	skipnz
  3705     01DE  29E0               	goto	u2351
  3706     01DF  29E1               	goto	u2350
  3707     01E0                     u2351:
  3708     01E0  29A7               	goto	l2442
  3709     01E1                     u2350:
  3710     01E1                     l2454:
  3711     01E1  0874               	movf	strncmp@r,w
  3712     01E2  0084               	movwf	4
  3713     01E3  120A  118A  201B  120A  118A  	fcall	stringdir
  3714     01E8  1283               	bcf	3,5	;RP0=0, select bank0
  3715     01E9  1303               	bcf	3,6	;RP1=0, select bank0
  3716     01EA  00C6               	movwf	??_strncmp
  3717     01EB  0877               	movf	strncmp@l,w
  3718     01EC  0084               	movwf	4
  3719     01ED  0800               	movf	0,w
  3720     01EE  00C7               	movwf	??_strncmp+1
  3721     01EF  0846               	movf	??_strncmp,w
  3722     01F0  0247               	subwf	??_strncmp+1,w
  3723     01F1  00F4               	movwf	?_strncmp
  3724     01F2  01F5               	clrf	?_strncmp+1
  3725     01F3  1C03               	skipc
  3726     01F4  03F5               	decf	?_strncmp+1,f
  3727     01F5                     l997:
  3728     01F5  0008               	return
  3729     01F6                     __end_of_strncmp:
  3730                           
  3731                           	psect	text3
  3732     0F0D                     __ptext3:	
  3733 ;; *************** function _strlen *****************
  3734 ;; Defined at:
  3735 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\strlen.c"
  3736 ;; Parameters:    Size  Location     Type
  3737 ;;  s               1    wreg     PTR const unsigned char 
  3738 ;;		 -> STR_9(5), 
  3739 ;; Auto vars:     Size  Location     Type
  3740 ;;  s               1    6[COMMON] PTR const unsigned char 
  3741 ;;		 -> STR_9(5), 
  3742 ;;  a               1    5[COMMON] PTR const unsigned char 
  3743 ;;		 -> STR_9(5), 
  3744 ;; Return value:  Size  Location     Type
  3745 ;;                  2    3[COMMON] unsigned int 
  3746 ;; Registers used:
  3747 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  3748 ;; Tracked objects:
  3749 ;;		On entry : 0/0
  3750 ;;		On exit  : 0/0
  3751 ;;		Unchanged: 0/0
  3752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3753 ;;      Params:         2       0       0       0       0
  3754 ;;      Locals:         2       0       0       0       0
  3755 ;;      Temps:          0       0       0       0       0
  3756 ;;      Totals:         4       0       0       0       0
  3757 ;;Total ram usage:        4 bytes
  3758 ;; Hardware stack levels used: 2
  3759 ;; Hardware stack levels required when called: 1
  3760 ;; This function calls:
  3761 ;;		Nothing
  3762 ;; This function is called by:
  3763 ;;		_strstr
  3764 ;; This function uses a non-reentrant model
  3765 ;;
  3766                           
  3767     0F0D                     _strlen:	
  3768                           ;psect for function _strlen
  3769                           
  3770                           
  3771                           ;incstack = 0
  3772                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  3773                           ;strlen@s stored from wreg
  3774     0F0D  00F7               	movwf	strlen@s
  3775     0F0E                     l1858:
  3776     0F0E  0877               	movf	strlen@s,w
  3777     0F0F  00F6               	movwf	strlen@a
  3778     0F10  2F15               	goto	l1862
  3779     0F11                     l1860:
  3780     0F11  3001               	movlw	1
  3781     0F12  00FF               	movwf	btemp+1
  3782     0F13  087F               	movf	btemp+1,w
  3783     0F14  07F7               	addwf	strlen@s,f
  3784     0F15                     l1862:
  3785     0F15  0877               	movf	strlen@s,w
  3786     0F16  0084               	movwf	4
  3787     0F17  120A  118A  201B  120A  158A  	fcall	stringdir
  3788     0F1C  3A00               	xorlw	0
  3789     0F1D  1D03               	skipz
  3790     0F1E  2F20               	goto	u1561
  3791     0F1F  2F21               	goto	u1560
  3792     0F20                     u1561:
  3793     0F20  2F11               	goto	l1860
  3794     0F21                     u1560:
  3795     0F21                     l1864:
  3796     0F21  0876               	movf	strlen@a,w
  3797     0F22  0277               	subwf	strlen@s,w
  3798     0F23  00F4               	movwf	?_strlen
  3799     0F24  01F5               	clrf	?_strlen+1
  3800     0F25  1BF4               	btfsc	?_strlen,7
  3801     0F26  03F5               	decf	?_strlen+1,f
  3802     0F27                     l993:
  3803     0F27  0008               	return
  3804     0F28                     __end_of_strlen:
  3805                           
  3806                           	psect	text4
  3807     0EDE                     __ptext4:	
  3808 ;; *************** function _strchr *****************
  3809 ;; Defined at:
  3810 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\strchr.c"
  3811 ;; Parameters:    Size  Location     Type
  3812 ;;  s               1    wreg     PTR const unsigned char 
  3813 ;;		 -> NULL(0), StringReceive(30), 
  3814 ;;  c               2    3[COMMON] int 
  3815 ;; Auto vars:     Size  Location     Type
  3816 ;;  s               1    5[COMMON] PTR const unsigned char 
  3817 ;;		 -> NULL(0), StringReceive(30), 
  3818 ;; Return value:  Size  Location     Type
  3819 ;;                  1    wreg      PTR unsigned char 
  3820 ;; Registers used:
  3821 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3822 ;; Tracked objects:
  3823 ;;		On entry : 0/0
  3824 ;;		On exit  : 0/0
  3825 ;;		Unchanged: 0/0
  3826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3827 ;;      Params:         2       0       0       0       0
  3828 ;;      Locals:         1       0       0       0       0
  3829 ;;      Temps:          0       0       0       0       0
  3830 ;;      Totals:         3       0       0       0       0
  3831 ;;Total ram usage:        3 bytes
  3832 ;; Hardware stack levels used: 1
  3833 ;; Hardware stack levels required when called: 1
  3834 ;; This function calls:
  3835 ;;		Nothing
  3836 ;; This function is called by:
  3837 ;;		_strstr
  3838 ;; This function uses a non-reentrant model
  3839 ;;
  3840                           
  3841     0EDE                     _strchr:	
  3842                           ;psect for function _strchr
  3843                           
  3844                           
  3845                           ;incstack = 0
  3846                           ; Regs used in _strchr: [wreg-fsr0h+status,2+status,0]
  3847                           ;strchr@s stored from wreg
  3848     0EDE  00F6               	movwf	strchr@s
  3849     0EDF                     l984:
  3850     0EDF                     l1890:
  3851     0EDF  0876               	movf	strchr@s,w
  3852     0EE0  0084               	movwf	4
  3853     0EE1  1383               	bcf	3,7	;select IRP bank0
  3854     0EE2  0800               	movf	0,w
  3855     0EE3  0674               	xorwf	strchr@c,w
  3856     0EE4  1D03               	skipz
  3857     0EE5  2EE7               	goto	u1621
  3858     0EE6  2EE8               	goto	u1620
  3859     0EE7                     u1621:
  3860     0EE7  2EEA               	goto	l1896
  3861     0EE8                     u1620:
  3862     0EE8                     l1892:
  3863     0EE8  0876               	movf	strchr@s,w
  3864     0EE9  2EF4               	goto	l986
  3865     0EEA                     l1896:
  3866     0EEA  0876               	movf	strchr@s,w
  3867     0EEB  0084               	movwf	4
  3868     0EEC  3001               	movlw	1
  3869     0EED  07F6               	addwf	strchr@s,f
  3870     0EEE  0800               	movf	0,w
  3871     0EEF  1D03               	btfss	3,2
  3872     0EF0  2EF2               	goto	u1631
  3873     0EF1  2EF3               	goto	u1630
  3874     0EF2                     u1631:
  3875     0EF2  2EDF               	goto	l984
  3876     0EF3                     u1630:
  3877     0EF3                     l1898:
  3878     0EF3  3000               	movlw	0
  3879     0EF4                     l986:
  3880     0EF4  0008               	return
  3881     0EF5                     __end_of_strchr:
  3882                           
  3883                           	psect	text5
  3884     0EA6                     __ptext5:	
  3885 ;; *************** function _SendCommandAT *****************
  3886 ;; Defined at:
  3887 ;;		line 81 in file "esp8266.c"
  3888 ;; Parameters:    Size  Location     Type
  3889 ;;  command         1    wreg     PTR unsigned char 
  3890 ;;		 -> STR_6(20), STR_4(3), 
  3891 ;; Auto vars:     Size  Location     Type
  3892 ;;  command         1    5[COMMON] PTR unsigned char 
  3893 ;;		 -> STR_6(20), STR_4(3), 
  3894 ;; Return value:  Size  Location     Type
  3895 ;;                  1    wreg      void 
  3896 ;; Registers used:
  3897 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3898 ;; Tracked objects:
  3899 ;;		On entry : 0/0
  3900 ;;		On exit  : 0/0
  3901 ;;		Unchanged: 0/0
  3902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3903 ;;      Params:         0       0       0       0       0
  3904 ;;      Locals:         1       0       0       0       0
  3905 ;;      Temps:          0       0       0       0       0
  3906 ;;      Totals:         1       0       0       0       0
  3907 ;;Total ram usage:        1 bytes
  3908 ;; Hardware stack levels used: 1
  3909 ;; Hardware stack levels required when called: 3
  3910 ;; This function calls:
  3911 ;;		_SendStringSerially
  3912 ;; This function is called by:
  3913 ;;		_main
  3914 ;; This function uses a non-reentrant model
  3915 ;;
  3916                           
  3917     0EA6                     _SendCommandAT:	
  3918                           ;psect for function _SendCommandAT
  3919                           
  3920                           
  3921                           ;incstack = 0
  3922                           ; Regs used in _SendCommandAT: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3923                           ;SendCommandAT@command stored from wreg
  3924     0EA6  00F6               	movwf	SendCommandAT@command
  3925     0EA7                     l2044:
  3926                           
  3927                           ;esp8266.c: 81: void SendCommandAT(unsigned char* command);esp8266.c: 82:     {;esp8266.
      +                          c: 84:     SendStringSerially(command);
  3928     0EA7  0876               	movf	SendCommandAT@command,w
  3929     0EA8  120A  158A  2747  120A  158A  	fcall	_SendStringSerially
  3930                           
  3931                           ;esp8266.c: 88:     SendStringSerially("\r\n");
  3932     0EAD  30AC               	movlw	(low ((STR_14-__stringbase)| (0+32768)))& (0+255)
  3933     0EAE  120A  158A  2747  120A  158A  	fcall	_SendStringSerially
  3934     0EB3                     l334:
  3935     0EB3  0008               	return
  3936     0EB4                     __end_of_SendCommandAT:
  3937                           
  3938                           	psect	text6
  3939     0F47                     __ptext6:	
  3940 ;; *************** function _SendStringSerially *****************
  3941 ;; Defined at:
  3942 ;;		line 75 in file "esp8266.c"
  3943 ;; Parameters:    Size  Location     Type
  3944 ;;  st              1    wreg     PTR unsigned char 
  3945 ;;		 -> STR_14(3), STR_6(20), STR_4(3), 
  3946 ;; Auto vars:     Size  Location     Type
  3947 ;;  st              1    4[COMMON] PTR unsigned char 
  3948 ;;		 -> STR_14(3), STR_6(20), STR_4(3), 
  3949 ;; Return value:  Size  Location     Type
  3950 ;;                  1    wreg      void 
  3951 ;; Registers used:
  3952 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3953 ;; Tracked objects:
  3954 ;;		On entry : 0/0
  3955 ;;		On exit  : 0/0
  3956 ;;		Unchanged: 0/0
  3957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3958 ;;      Params:         0       0       0       0       0
  3959 ;;      Locals:         1       0       0       0       0
  3960 ;;      Temps:          0       0       0       0       0
  3961 ;;      Totals:         1       0       0       0       0
  3962 ;;Total ram usage:        1 bytes
  3963 ;; Hardware stack levels used: 1
  3964 ;; Hardware stack levels required when called: 2
  3965 ;; This function calls:
  3966 ;;		_SendByteSerially
  3967 ;; This function is called by:
  3968 ;;		_SendCommandAT
  3969 ;; This function uses a non-reentrant model
  3970 ;;
  3971                           
  3972     0F47                     _SendStringSerially:	
  3973                           ;psect for function _SendStringSerially
  3974                           
  3975                           
  3976                           ;incstack = 0
  3977                           ; Regs used in _SendStringSerially: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3978                           ;SendStringSerially@st stored from wreg
  3979     0F47  00F5               	movwf	SendStringSerially@st
  3980     0F48                     l1760:
  3981                           
  3982                           ;esp8266.c: 75: void SendStringSerially(unsigned char* st);esp8266.c: 76:     {;esp8266.
      +                          c: 77:     while (*st)
  3983     0F48  2F59               	goto	l1766
  3984     0F49                     l1762:
  3985                           
  3986                           ;esp8266.c: 78:         SendByteSerially(*st++);
  3987     0F49  0875               	movf	SendStringSerially@st,w
  3988     0F4A  0084               	movwf	4
  3989     0F4B  120A  118A  201B  120A  158A  	fcall	stringdir
  3990     0F50  120A  158A  2691  120A  158A  	fcall	_SendByteSerially
  3991     0F55                     l1764:
  3992     0F55  3001               	movlw	1
  3993     0F56  00FF               	movwf	btemp+1
  3994     0F57  087F               	movf	btemp+1,w
  3995     0F58  07F5               	addwf	SendStringSerially@st,f
  3996     0F59                     l1766:
  3997                           
  3998                           ;esp8266.c: 77:     while (*st)
  3999     0F59  0875               	movf	SendStringSerially@st,w
  4000     0F5A  0084               	movwf	4
  4001     0F5B  120A  118A  201B  120A  158A  	fcall	stringdir
  4002     0F60  3A00               	xorlw	0
  4003     0F61  1D03               	skipz
  4004     0F62  2F64               	goto	u1311
  4005     0F63  2F65               	goto	u1310
  4006     0F64                     u1311:
  4007     0F64  2F49               	goto	l1762
  4008     0F65                     u1310:
  4009     0F65                     l331:
  4010     0F65  0008               	return
  4011     0F66                     __end_of_SendStringSerially:
  4012                           
  4013                           	psect	text7
  4014     0E91                     __ptext7:	
  4015 ;; *************** function _SendByteSerially *****************
  4016 ;; Defined at:
  4017 ;;		line 58 in file "esp8266.c"
  4018 ;; Parameters:    Size  Location     Type
  4019 ;;  Byte            1    wreg     unsigned char 
  4020 ;; Auto vars:     Size  Location     Type
  4021 ;;  Byte            1    3[COMMON] unsigned char 
  4022 ;; Return value:  Size  Location     Type
  4023 ;;                  1    wreg      void 
  4024 ;; Registers used:
  4025 ;;		wreg
  4026 ;; Tracked objects:
  4027 ;;		On entry : 0/0
  4028 ;;		On exit  : 0/0
  4029 ;;		Unchanged: 0/0
  4030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4031 ;;      Params:         0       0       0       0       0
  4032 ;;      Locals:         1       0       0       0       0
  4033 ;;      Temps:          0       0       0       0       0
  4034 ;;      Totals:         1       0       0       0       0
  4035 ;;Total ram usage:        1 bytes
  4036 ;; Hardware stack levels used: 1
  4037 ;; Hardware stack levels required when called: 1
  4038 ;; This function calls:
  4039 ;;		Nothing
  4040 ;; This function is called by:
  4041 ;;		_SendStringSerially
  4042 ;; This function uses a non-reentrant model
  4043 ;;
  4044                           
  4045     0E91                     _SendByteSerially:	
  4046                           ;psect for function _SendByteSerially
  4047                           
  4048                           
  4049                           ;incstack = 0
  4050                           ; Regs used in _SendByteSerially: [wreg]
  4051                           ;SendByteSerially@Byte stored from wreg
  4052     0E91  00F4               	movwf	SendByteSerially@Byte
  4053     0E92                     l1734:
  4054     0E92                     l315:	
  4055                           ;esp8266.c: 58: void SendByteSerially(unsigned char Byte);esp8266.c: 59:     {;esp8266.c
      +                          : 60:     while (!TXIF);
  4056                           
  4057     0E92  1283               	bcf	3,5	;RP0=0, select bank0
  4058     0E93  1303               	bcf	3,6	;RP1=0, select bank0
  4059     0E94  1E0C               	btfss	12,4	;volatile
  4060     0E95  2E97               	goto	u1241
  4061     0E96  2E98               	goto	u1240
  4062     0E97                     u1241:
  4063     0E97  2E92               	goto	l315
  4064     0E98                     u1240:
  4065     0E98                     l1736:
  4066                           
  4067                           ;esp8266.c: 61:     TXREG = Byte;
  4068     0E98  0874               	movf	SendByteSerially@Byte,w
  4069     0E99  0099               	movwf	25	;volatile
  4070     0E9A                     l318:
  4071     0E9A  0008               	return
  4072     0E9B                     __end_of_SendByteSerially:
  4073                           
  4074                           	psect	text8
  4075     04B9                     __ptext8:	
  4076 ;; *************** function _LCD_write_variable *****************
  4077 ;; Defined at:
  4078 ;;		line 16 in file "LCD_write_variable.c"
  4079 ;; Parameters:    Size  Location     Type
  4080 ;;  variable        4   14[BANK0 ] long 
  4081 ;;  left_offset     1   18[BANK0 ] unsigned char 
  4082 ;; Auto vars:     Size  Location     Type
  4083 ;;  i               1   19[BANK0 ] unsigned char 
  4084 ;;  temp_variabl    4   21[BANK0 ] long 
  4085 ;;  digits          1   20[BANK0 ] unsigned char 
  4086 ;; Return value:  Size  Location     Type
  4087 ;;                  1    wreg      void 
  4088 ;; Registers used:
  4089 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4090 ;; Tracked objects:
  4091 ;;		On entry : 0/0
  4092 ;;		On exit  : 0/0
  4093 ;;		Unchanged: 0/0
  4094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4095 ;;      Params:         0       5       0       0       0
  4096 ;;      Locals:         0       6       0       0       0
  4097 ;;      Temps:          0       0       0       0       0
  4098 ;;      Totals:         0      11       0       0       0
  4099 ;;Total ram usage:       11 bytes
  4100 ;; Hardware stack levels used: 1
  4101 ;; Hardware stack levels required when called: 3
  4102 ;; This function calls:
  4103 ;;		_LCD_write_data
  4104 ;;		___aldiv
  4105 ;;		___almod
  4106 ;;		___lmul
  4107 ;; This function is called by:
  4108 ;;		_main
  4109 ;;		_LCD_write_float
  4110 ;; This function uses a non-reentrant model
  4111 ;;
  4112                           
  4113     04B9                     _LCD_write_variable:	
  4114                           ;psect for function _LCD_write_variable
  4115                           
  4116     04B9                     l2516:	
  4117                           ;incstack = 0
  4118                           ; Regs used in _LCD_write_variable: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4119                           
  4120                           
  4121                           ;LCD_write_variable.c: 18:     int32_t temp_variable;;LCD_write_variable.c: 19:     uint
      +                          8_t digits = 0;
  4122     04B9  1283               	bcf	3,5	;RP0=0, select bank0
  4123     04BA  1303               	bcf	3,6	;RP1=0, select bank0
  4124     04BB  01DA               	clrf	LCD_write_variable@digits
  4125     04BC                     l2518:
  4126                           
  4127                           ;LCD_write_variable.c: 22:     if(variable < 0) variable *= -1;
  4128     04BC  1FD7               	btfss	LCD_write_variable@variable+3,7
  4129     04BD  2CBF               	goto	u2401
  4130     04BE  2CC0               	goto	u2400
  4131     04BF                     u2401:
  4132     04BF  2CDF               	goto	l2522
  4133     04C0                     u2400:
  4134     04C0                     l2520:
  4135     04C0  30FF               	movlw	255
  4136     04C1  00C9               	movwf	___lmul@multiplier+3
  4137     04C2  30FF               	movlw	255
  4138     04C3  00C8               	movwf	___lmul@multiplier+2
  4139     04C4  30FF               	movlw	255
  4140     04C5  00C7               	movwf	___lmul@multiplier+1
  4141     04C6  30FF               	movlw	255
  4142     04C7  00C6               	movwf	___lmul@multiplier
  4143     04C8  0857               	movf	LCD_write_variable@variable+3,w
  4144     04C9  00CD               	movwf	___lmul@multiplicand+3
  4145     04CA  0856               	movf	LCD_write_variable@variable+2,w
  4146     04CB  00CC               	movwf	___lmul@multiplicand+2
  4147     04CC  0855               	movf	LCD_write_variable@variable+1,w
  4148     04CD  00CB               	movwf	___lmul@multiplicand+1
  4149     04CE  0854               	movf	LCD_write_variable@variable,w
  4150     04CF  00CA               	movwf	___lmul@multiplicand
  4151     04D0  120A  118A  20FA  120A  118A  	fcall	___lmul
  4152     04D5  1283               	bcf	3,5	;RP0=0, select bank0
  4153     04D6  1303               	bcf	3,6	;RP1=0, select bank0
  4154     04D7  0849               	movf	?___lmul+3,w
  4155     04D8  00D7               	movwf	LCD_write_variable@variable+3
  4156     04D9  0848               	movf	?___lmul+2,w
  4157     04DA  00D6               	movwf	LCD_write_variable@variable+2
  4158     04DB  0847               	movf	?___lmul+1,w
  4159     04DC  00D5               	movwf	LCD_write_variable@variable+1
  4160     04DD  0846               	movf	?___lmul,w
  4161     04DE  00D4               	movwf	LCD_write_variable@variable
  4162     04DF                     l2522:
  4163                           
  4164                           ;LCD_write_variable.c: 25:     temp_variable = variable;
  4165     04DF  0857               	movf	LCD_write_variable@variable+3,w
  4166     04E0  00DE               	movwf	LCD_write_variable@temp_variable+3
  4167     04E1  0856               	movf	LCD_write_variable@variable+2,w
  4168     04E2  00DD               	movwf	LCD_write_variable@temp_variable+2
  4169     04E3  0855               	movf	LCD_write_variable@variable+1,w
  4170     04E4  00DC               	movwf	LCD_write_variable@temp_variable+1
  4171     04E5  0854               	movf	LCD_write_variable@variable,w
  4172     04E6  00DB               	movwf	LCD_write_variable@temp_variable
  4173     04E7                     l2524:
  4174                           
  4175                           ;LCD_write_variable.c: 27:         digits++;
  4176     04E7  3001               	movlw	1
  4177     04E8  00FF               	movwf	btemp+1
  4178     04E9  087F               	movf	btemp+1,w
  4179     04EA  07DA               	addwf	LCD_write_variable@digits,f
  4180     04EB                     l2526:
  4181                           
  4182                           ;LCD_write_variable.c: 28:         if(temp_variable < 10) break;
  4183     04EB  1BDE               	btfsc	LCD_write_variable@temp_variable+3,7
  4184     04EC  2CFE               	goto	u2410
  4185     04ED  085E               	movf	LCD_write_variable@temp_variable+3,w
  4186     04EE  1D03               	btfss	3,2
  4187     04EF  2CFD               	goto	u2411
  4188     04F0  085D               	movf	LCD_write_variable@temp_variable+2,w
  4189     04F1  1D03               	btfss	3,2
  4190     04F2  2CFD               	goto	u2411
  4191     04F3  085C               	movf	LCD_write_variable@temp_variable+1,w
  4192     04F4  1D03               	btfss	3,2
  4193     04F5  2CFD               	goto	u2411
  4194     04F6  300A               	movlw	10
  4195     04F7  025B               	subwf	LCD_write_variable@temp_variable,w
  4196     04F8  1D03               	skipz
  4197     04F9  2CFA               	goto	u2413
  4198     04FA                     u2413:
  4199     04FA  1803               	btfsc	3,0
  4200     04FB  2CFD               	goto	u2411
  4201     04FC  2CFE               	goto	u2410
  4202     04FD                     u2411:
  4203     04FD  2CFF               	goto	l2530
  4204     04FE                     u2410:
  4205     04FE  2D21               	goto	l2532
  4206     04FF                     l2530:
  4207                           
  4208                           ;LCD_write_variable.c: 29:         temp_variable /= 10;
  4209     04FF  3000               	movlw	0
  4210     0500  1283               	bcf	3,5	;RP0=0, select bank0
  4211     0501  1303               	bcf	3,6	;RP1=0, select bank0
  4212     0502  00C9               	movwf	___aldiv@divisor+3
  4213     0503  3000               	movlw	0
  4214     0504  00C8               	movwf	___aldiv@divisor+2
  4215     0505  3000               	movlw	0
  4216     0506  00C7               	movwf	___aldiv@divisor+1
  4217     0507  300A               	movlw	10
  4218     0508  00C6               	movwf	___aldiv@divisor
  4219     0509  085E               	movf	LCD_write_variable@temp_variable+3,w
  4220     050A  00CD               	movwf	___aldiv@dividend+3
  4221     050B  085D               	movf	LCD_write_variable@temp_variable+2,w
  4222     050C  00CC               	movwf	___aldiv@dividend+2
  4223     050D  085C               	movf	LCD_write_variable@temp_variable+1,w
  4224     050E  00CB               	movwf	___aldiv@dividend+1
  4225     050F  085B               	movf	LCD_write_variable@temp_variable,w
  4226     0510  00CA               	movwf	___aldiv@dividend
  4227     0511  120A  118A  241C  120A  118A  	fcall	___aldiv
  4228     0516  1283               	bcf	3,5	;RP0=0, select bank0
  4229     0517  1303               	bcf	3,6	;RP1=0, select bank0
  4230     0518  0849               	movf	?___aldiv+3,w
  4231     0519  00DE               	movwf	LCD_write_variable@temp_variable+3
  4232     051A  0848               	movf	?___aldiv+2,w
  4233     051B  00DD               	movwf	LCD_write_variable@temp_variable+2
  4234     051C  0847               	movf	?___aldiv+1,w
  4235     051D  00DC               	movwf	LCD_write_variable@temp_variable+1
  4236     051E  0846               	movf	?___aldiv,w
  4237     051F  00DB               	movwf	LCD_write_variable@temp_variable
  4238     0520  2CE7               	goto	l2524
  4239     0521                     l2532:
  4240                           
  4241                           ;LCD_write_variable.c: 34:         if(left_offset <= digits) break;
  4242     0521  1283               	bcf	3,5	;RP0=0, select bank0
  4243     0522  1303               	bcf	3,6	;RP1=0, select bank0
  4244     0523  0858               	movf	LCD_write_variable@left_offset,w
  4245     0524  025A               	subwf	LCD_write_variable@digits,w
  4246     0525  1C03               	skipc
  4247     0526  2D28               	goto	u2421
  4248     0527  2D29               	goto	u2420
  4249     0528                     u2421:
  4250     0528  2D2A               	goto	l2536
  4251     0529                     u2420:
  4252     0529  2D35               	goto	l2540
  4253     052A                     l2536:
  4254                           
  4255                           ;LCD_write_variable.c: 35:         LCD_write_data(' ');
  4256     052A  3020               	movlw	32
  4257     052B  120A  118A  2388  120A  118A  	fcall	_LCD_write_data
  4258     0530                     l2538:
  4259                           
  4260                           ;LCD_write_variable.c: 36:         left_offset--;
  4261     0530  3001               	movlw	1
  4262     0531  1283               	bcf	3,5	;RP0=0, select bank0
  4263     0532  1303               	bcf	3,6	;RP1=0, select bank0
  4264     0533  02D8               	subwf	LCD_write_variable@left_offset,f
  4265     0534  2D21               	goto	l2532
  4266     0535                     l2540:
  4267                           
  4268                           ;LCD_write_variable.c: 41:         temp_variable = variable;
  4269     0535  0857               	movf	LCD_write_variable@variable+3,w
  4270     0536  00DE               	movwf	LCD_write_variable@temp_variable+3
  4271     0537  0856               	movf	LCD_write_variable@variable+2,w
  4272     0538  00DD               	movwf	LCD_write_variable@temp_variable+2
  4273     0539  0855               	movf	LCD_write_variable@variable+1,w
  4274     053A  00DC               	movwf	LCD_write_variable@temp_variable+1
  4275     053B  0854               	movf	LCD_write_variable@variable,w
  4276     053C  00DB               	movwf	LCD_write_variable@temp_variable
  4277     053D                     l2542:
  4278                           
  4279                           ;LCD_write_variable.c: 42:         for(uint8_t i = 1 ; i < digits ; i++){
  4280     053D  01D9               	clrf	LCD_write_variable@i
  4281     053E  0AD9               	incf	LCD_write_variable@i,f
  4282     053F  2D63               	goto	l2548
  4283     0540                     l2544:
  4284                           
  4285                           ;LCD_write_variable.c: 43:             temp_variable /= 10;
  4286     0540  3000               	movlw	0
  4287     0541  00C9               	movwf	___aldiv@divisor+3
  4288     0542  3000               	movlw	0
  4289     0543  00C8               	movwf	___aldiv@divisor+2
  4290     0544  3000               	movlw	0
  4291     0545  00C7               	movwf	___aldiv@divisor+1
  4292     0546  300A               	movlw	10
  4293     0547  00C6               	movwf	___aldiv@divisor
  4294     0548  085E               	movf	LCD_write_variable@temp_variable+3,w
  4295     0549  00CD               	movwf	___aldiv@dividend+3
  4296     054A  085D               	movf	LCD_write_variable@temp_variable+2,w
  4297     054B  00CC               	movwf	___aldiv@dividend+2
  4298     054C  085C               	movf	LCD_write_variable@temp_variable+1,w
  4299     054D  00CB               	movwf	___aldiv@dividend+1
  4300     054E  085B               	movf	LCD_write_variable@temp_variable,w
  4301     054F  00CA               	movwf	___aldiv@dividend
  4302     0550  120A  118A  241C  120A  118A  	fcall	___aldiv
  4303     0555  1283               	bcf	3,5	;RP0=0, select bank0
  4304     0556  1303               	bcf	3,6	;RP1=0, select bank0
  4305     0557  0849               	movf	?___aldiv+3,w
  4306     0558  00DE               	movwf	LCD_write_variable@temp_variable+3
  4307     0559  0848               	movf	?___aldiv+2,w
  4308     055A  00DD               	movwf	LCD_write_variable@temp_variable+2
  4309     055B  0847               	movf	?___aldiv+1,w
  4310     055C  00DC               	movwf	LCD_write_variable@temp_variable+1
  4311     055D  0846               	movf	?___aldiv,w
  4312     055E  00DB               	movwf	LCD_write_variable@temp_variable
  4313     055F                     l2546:
  4314                           
  4315                           ;LCD_write_variable.c: 44:         }
  4316     055F  3001               	movlw	1
  4317     0560  00FF               	movwf	btemp+1
  4318     0561  087F               	movf	btemp+1,w
  4319     0562  07D9               	addwf	LCD_write_variable@i,f
  4320     0563                     l2548:
  4321     0563  085A               	movf	LCD_write_variable@digits,w
  4322     0564  0259               	subwf	LCD_write_variable@i,w
  4323     0565  1C03               	skipc
  4324     0566  2D68               	goto	u2431
  4325     0567  2D69               	goto	u2430
  4326     0568                     u2431:
  4327     0568  2D40               	goto	l2544
  4328     0569                     u2430:
  4329     0569                     l2550:
  4330                           
  4331                           ;LCD_write_variable.c: 45:         LCD_write_data( (temp_variable%10) + '0' );
  4332     0569  3000               	movlw	0
  4333     056A  00C9               	movwf	___almod@divisor+3
  4334     056B  3000               	movlw	0
  4335     056C  00C8               	movwf	___almod@divisor+2
  4336     056D  3000               	movlw	0
  4337     056E  00C7               	movwf	___almod@divisor+1
  4338     056F  300A               	movlw	10
  4339     0570  00C6               	movwf	___almod@divisor
  4340     0571  085E               	movf	LCD_write_variable@temp_variable+3,w
  4341     0572  00CD               	movwf	___almod@dividend+3
  4342     0573  085D               	movf	LCD_write_variable@temp_variable+2,w
  4343     0574  00CC               	movwf	___almod@dividend+2
  4344     0575  085C               	movf	LCD_write_variable@temp_variable+1,w
  4345     0576  00CB               	movwf	___almod@dividend+1
  4346     0577  085B               	movf	LCD_write_variable@temp_variable,w
  4347     0578  00CA               	movwf	___almod@dividend
  4348     0579  120A  118A  226D  120A  118A  	fcall	___almod
  4349     057E  1283               	bcf	3,5	;RP0=0, select bank0
  4350     057F  1303               	bcf	3,6	;RP1=0, select bank0
  4351     0580  0846               	movf	?___almod,w
  4352     0581  3E30               	addlw	48
  4353     0582  120A  118A  2388  120A  118A  	fcall	_LCD_write_data
  4354     0587                     l2552:
  4355                           
  4356                           ;LCD_write_variable.c: 46:         digits --;
  4357     0587  3001               	movlw	1
  4358     0588  1283               	bcf	3,5	;RP0=0, select bank0
  4359     0589  1303               	bcf	3,6	;RP1=0, select bank0
  4360     058A  02DA               	subwf	LCD_write_variable@digits,f
  4361     058B                     l2554:
  4362                           
  4363                           ;LCD_write_variable.c: 47:         if(digits == 0) break;
  4364     058B  085A               	movf	LCD_write_variable@digits,w
  4365     058C  1D03               	btfss	3,2
  4366     058D  2D8F               	goto	u2441
  4367     058E  2D90               	goto	u2440
  4368     058F                     u2441:
  4369     058F  2D35               	goto	l2540
  4370     0590                     u2440:
  4371     0590                     l192:
  4372     0590  0008               	return
  4373     0591                     __end_of_LCD_write_variable:
  4374                           
  4375                           	psect	text9
  4376     00FA                     __ptext9:	
  4377 ;; *************** function ___lmul *****************
  4378 ;; Defined at:
  4379 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul32.c"
  4380 ;; Parameters:    Size  Location     Type
  4381 ;;  multiplier      4    0[BANK0 ] unsigned long 
  4382 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  4383 ;; Auto vars:     Size  Location     Type
  4384 ;;  product         4    8[BANK0 ] unsigned long 
  4385 ;; Return value:  Size  Location     Type
  4386 ;;                  4    0[BANK0 ] unsigned long 
  4387 ;; Registers used:
  4388 ;;		wreg, status,2, status,0
  4389 ;; Tracked objects:
  4390 ;;		On entry : 0/0
  4391 ;;		On exit  : 0/0
  4392 ;;		Unchanged: 0/0
  4393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4394 ;;      Params:         0       8       0       0       0
  4395 ;;      Locals:         0       4       0       0       0
  4396 ;;      Temps:          1       0       0       0       0
  4397 ;;      Totals:         1      12       0       0       0
  4398 ;;Total ram usage:       13 bytes
  4399 ;; Hardware stack levels used: 1
  4400 ;; Hardware stack levels required when called: 1
  4401 ;; This function calls:
  4402 ;;		Nothing
  4403 ;; This function is called by:
  4404 ;;		_LCD_write_variable
  4405 ;; This function uses a non-reentrant model
  4406 ;;
  4407                           
  4408     00FA                     ___lmul:	
  4409                           ;psect for function ___lmul
  4410                           
  4411     00FA                     l2380:	
  4412                           ;incstack = 0
  4413                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  4414                           
  4415     00FA  3000               	movlw	0
  4416     00FB  1283               	bcf	3,5	;RP0=0, select bank0
  4417     00FC  1303               	bcf	3,6	;RP1=0, select bank0
  4418     00FD  00D1               	movwf	___lmul@product+3
  4419     00FE  3000               	movlw	0
  4420     00FF  00D0               	movwf	___lmul@product+2
  4421     0100  3000               	movlw	0
  4422     0101  00CF               	movwf	___lmul@product+1
  4423     0102  3000               	movlw	0
  4424     0103  00CE               	movwf	___lmul@product
  4425     0104                     l2382:
  4426     0104  1C46               	btfss	___lmul@multiplier,0
  4427     0105  2907               	goto	u2161
  4428     0106  2908               	goto	u2160
  4429     0107                     u2161:
  4430     0107  291F               	goto	l2386
  4431     0108                     u2160:
  4432     0108                     l2384:
  4433     0108  084A               	movf	___lmul@multiplicand,w
  4434     0109  07CE               	addwf	___lmul@product,f
  4435     010A  084B               	movf	___lmul@multiplicand+1,w
  4436     010B  1103               	clrz
  4437     010C  1803               	skipnc
  4438     010D  3E01               	addlw	1
  4439     010E  1903               	skipnz
  4440     010F  2911               	goto	u2171
  4441     0110  07CF               	addwf	___lmul@product+1,f
  4442     0111                     u2171:
  4443     0111  084C               	movf	___lmul@multiplicand+2,w
  4444     0112  1103               	clrz
  4445     0113  1803               	skipnc
  4446     0114  3E01               	addlw	1
  4447     0115  1903               	skipnz
  4448     0116  2918               	goto	u2172
  4449     0117  07D0               	addwf	___lmul@product+2,f
  4450     0118                     u2172:
  4451     0118  084D               	movf	___lmul@multiplicand+3,w
  4452     0119  1103               	clrz
  4453     011A  1803               	skipnc
  4454     011B  3E01               	addlw	1
  4455     011C  1903               	skipnz
  4456     011D  291F               	goto	u2173
  4457     011E  07D1               	addwf	___lmul@product+3,f
  4458     011F                     u2173:
  4459     011F                     l2386:
  4460     011F  3001               	movlw	1
  4461     0120  00F4               	movwf	??___lmul
  4462     0121                     u2185:
  4463     0121  1003               	clrc
  4464     0122  0DCA               	rlf	___lmul@multiplicand,f
  4465     0123  0DCB               	rlf	___lmul@multiplicand+1,f
  4466     0124  0DCC               	rlf	___lmul@multiplicand+2,f
  4467     0125  0DCD               	rlf	___lmul@multiplicand+3,f
  4468     0126  0BF4               	decfsz	??___lmul,f
  4469     0127  2921               	goto	u2185
  4470     0128                     l2388:
  4471     0128  3001               	movlw	1
  4472     0129                     u2195:
  4473     0129  1003               	clrc
  4474     012A  0CC9               	rrf	___lmul@multiplier+3,f
  4475     012B  0CC8               	rrf	___lmul@multiplier+2,f
  4476     012C  0CC7               	rrf	___lmul@multiplier+1,f
  4477     012D  0CC6               	rrf	___lmul@multiplier,f
  4478     012E  3EFF               	addlw	-1
  4479     012F  1D03               	skipz
  4480     0130  2929               	goto	u2195
  4481     0131  0849               	movf	___lmul@multiplier+3,w
  4482     0132  0448               	iorwf	___lmul@multiplier+2,w
  4483     0133  0447               	iorwf	___lmul@multiplier+1,w
  4484     0134  0446               	iorwf	___lmul@multiplier,w
  4485     0135  1D03               	skipz
  4486     0136  2938               	goto	u2201
  4487     0137  2939               	goto	u2200
  4488     0138                     u2201:
  4489     0138  2904               	goto	l2382
  4490     0139                     u2200:
  4491     0139                     l2390:
  4492     0139  0851               	movf	___lmul@product+3,w
  4493     013A  00C9               	movwf	?___lmul+3
  4494     013B  0850               	movf	___lmul@product+2,w
  4495     013C  00C8               	movwf	?___lmul+2
  4496     013D  084F               	movf	___lmul@product+1,w
  4497     013E  00C7               	movwf	?___lmul+1
  4498     013F  084E               	movf	___lmul@product,w
  4499     0140  00C6               	movwf	?___lmul
  4500     0141                     l514:
  4501     0141  0008               	return
  4502     0142                     __end_of___lmul:
  4503                           
  4504                           	psect	text10
  4505     026D                     __ptext10:	
  4506 ;; *************** function ___almod *****************
  4507 ;; Defined at:
  4508 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\almod.c"
  4509 ;; Parameters:    Size  Location     Type
  4510 ;;  divisor         4    0[BANK0 ] long 
  4511 ;;  dividend        4    4[BANK0 ] long 
  4512 ;; Auto vars:     Size  Location     Type
  4513 ;;  sign            1    5[COMMON] unsigned char 
  4514 ;;  counter         1    4[COMMON] unsigned char 
  4515 ;; Return value:  Size  Location     Type
  4516 ;;                  4    0[BANK0 ] long 
  4517 ;; Registers used:
  4518 ;;		wreg, status,2, status,0, btemp+1
  4519 ;; Tracked objects:
  4520 ;;		On entry : 0/0
  4521 ;;		On exit  : 0/0
  4522 ;;		Unchanged: 0/0
  4523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4524 ;;      Params:         0       8       0       0       0
  4525 ;;      Locals:         2       0       0       0       0
  4526 ;;      Temps:          1       0       0       0       0
  4527 ;;      Totals:         3       8       0       0       0
  4528 ;;Total ram usage:       11 bytes
  4529 ;; Hardware stack levels used: 1
  4530 ;; Hardware stack levels required when called: 1
  4531 ;; This function calls:
  4532 ;;		Nothing
  4533 ;; This function is called by:
  4534 ;;		_LCD_write_variable
  4535 ;;		_LCD_write_float
  4536 ;; This function uses a non-reentrant model
  4537 ;;
  4538                           
  4539     026D                     ___almod:	
  4540                           ;psect for function ___almod
  4541                           
  4542     026D                     l1824:	
  4543                           ;incstack = 0
  4544                           ; Regs used in ___almod: [wreg+status,2+status,0+btemp+1]
  4545                           
  4546     026D  01F6               	clrf	___almod@sign
  4547     026E                     l1826:
  4548     026E  1283               	bcf	3,5	;RP0=0, select bank0
  4549     026F  1303               	bcf	3,6	;RP1=0, select bank0
  4550     0270  1FCD               	btfss	___almod@dividend+3,7
  4551     0271  2A73               	goto	u1471
  4552     0272  2A74               	goto	u1470
  4553     0273                     u1471:
  4554     0273  2A81               	goto	l578
  4555     0274                     u1470:
  4556     0274                     l1828:
  4557     0274  09CA               	comf	___almod@dividend,f
  4558     0275  09CB               	comf	___almod@dividend+1,f
  4559     0276  09CC               	comf	___almod@dividend+2,f
  4560     0277  09CD               	comf	___almod@dividend+3,f
  4561     0278  0ACA               	incf	___almod@dividend,f
  4562     0279  1903               	skipnz
  4563     027A  0ACB               	incf	___almod@dividend+1,f
  4564     027B  1903               	skipnz
  4565     027C  0ACC               	incf	___almod@dividend+2,f
  4566     027D  1903               	skipnz
  4567     027E  0ACD               	incf	___almod@dividend+3,f
  4568     027F  01F6               	clrf	___almod@sign
  4569     0280  0AF6               	incf	___almod@sign,f
  4570     0281                     l578:
  4571     0281  1FC9               	btfss	___almod@divisor+3,7
  4572     0282  2A84               	goto	u1481
  4573     0283  2A85               	goto	u1480
  4574     0284                     u1481:
  4575     0284  2A90               	goto	l1832
  4576     0285                     u1480:
  4577     0285                     l1830:
  4578     0285  09C6               	comf	___almod@divisor,f
  4579     0286  09C7               	comf	___almod@divisor+1,f
  4580     0287  09C8               	comf	___almod@divisor+2,f
  4581     0288  09C9               	comf	___almod@divisor+3,f
  4582     0289  0AC6               	incf	___almod@divisor,f
  4583     028A  1903               	skipnz
  4584     028B  0AC7               	incf	___almod@divisor+1,f
  4585     028C  1903               	skipnz
  4586     028D  0AC8               	incf	___almod@divisor+2,f
  4587     028E  1903               	skipnz
  4588     028F  0AC9               	incf	___almod@divisor+3,f
  4589     0290                     l1832:
  4590     0290  0849               	movf	___almod@divisor+3,w
  4591     0291  0448               	iorwf	___almod@divisor+2,w
  4592     0292  0447               	iorwf	___almod@divisor+1,w
  4593     0293  0446               	iorwf	___almod@divisor,w
  4594     0294  1903               	skipnz
  4595     0295  2A97               	goto	u1491
  4596     0296  2A98               	goto	u1490
  4597     0297                     u1491:
  4598     0297  2ADB               	goto	l1850
  4599     0298                     u1490:
  4600     0298                     l1834:
  4601     0298  01F5               	clrf	___almod@counter
  4602     0299  0AF5               	incf	___almod@counter,f
  4603     029A  2AA8               	goto	l1840
  4604     029B                     l1836:
  4605     029B  3001               	movlw	1
  4606     029C  00F4               	movwf	??___almod
  4607     029D                     u1505:
  4608     029D  1003               	clrc
  4609     029E  0DC6               	rlf	___almod@divisor,f
  4610     029F  0DC7               	rlf	___almod@divisor+1,f
  4611     02A0  0DC8               	rlf	___almod@divisor+2,f
  4612     02A1  0DC9               	rlf	___almod@divisor+3,f
  4613     02A2  0BF4               	decfsz	??___almod,f
  4614     02A3  2A9D               	goto	u1505
  4615     02A4                     l1838:
  4616     02A4  3001               	movlw	1
  4617     02A5  00FF               	movwf	btemp+1
  4618     02A6  087F               	movf	btemp+1,w
  4619     02A7  07F5               	addwf	___almod@counter,f
  4620     02A8                     l1840:
  4621     02A8  1FC9               	btfss	___almod@divisor+3,7
  4622     02A9  2AAB               	goto	u1511
  4623     02AA  2AAC               	goto	u1510
  4624     02AB                     u1511:
  4625     02AB  2A9B               	goto	l1836
  4626     02AC                     u1510:
  4627     02AC                     l1842:
  4628     02AC  0849               	movf	___almod@divisor+3,w
  4629     02AD  024D               	subwf	___almod@dividend+3,w
  4630     02AE  1D03               	skipz
  4631     02AF  2ABA               	goto	u1525
  4632     02B0  0848               	movf	___almod@divisor+2,w
  4633     02B1  024C               	subwf	___almod@dividend+2,w
  4634     02B2  1D03               	skipz
  4635     02B3  2ABA               	goto	u1525
  4636     02B4  0847               	movf	___almod@divisor+1,w
  4637     02B5  024B               	subwf	___almod@dividend+1,w
  4638     02B6  1D03               	skipz
  4639     02B7  2ABA               	goto	u1525
  4640     02B8  0846               	movf	___almod@divisor,w
  4641     02B9  024A               	subwf	___almod@dividend,w
  4642     02BA                     u1525:
  4643     02BA  1C03               	skipc
  4644     02BB  2ABD               	goto	u1521
  4645     02BC  2ABE               	goto	u1520
  4646     02BD                     u1521:
  4647     02BD  2ACC               	goto	l1846
  4648     02BE                     u1520:
  4649     02BE                     l1844:
  4650     02BE  0846               	movf	___almod@divisor,w
  4651     02BF  02CA               	subwf	___almod@dividend,f
  4652     02C0  0847               	movf	___almod@divisor+1,w
  4653     02C1  1C03               	skipc
  4654     02C2  0F47               	incfsz	___almod@divisor+1,w
  4655     02C3  02CB               	subwf	___almod@dividend+1,f
  4656     02C4  0848               	movf	___almod@divisor+2,w
  4657     02C5  1C03               	skipc
  4658     02C6  0F48               	incfsz	___almod@divisor+2,w
  4659     02C7  02CC               	subwf	___almod@dividend+2,f
  4660     02C8  0849               	movf	___almod@divisor+3,w
  4661     02C9  1C03               	skipc
  4662     02CA  0F49               	incfsz	___almod@divisor+3,w
  4663     02CB  02CD               	subwf	___almod@dividend+3,f
  4664     02CC                     l1846:
  4665     02CC  3001               	movlw	1
  4666     02CD                     u1535:
  4667     02CD  1003               	clrc
  4668     02CE  0CC9               	rrf	___almod@divisor+3,f
  4669     02CF  0CC8               	rrf	___almod@divisor+2,f
  4670     02D0  0CC7               	rrf	___almod@divisor+1,f
  4671     02D1  0CC6               	rrf	___almod@divisor,f
  4672     02D2  3EFF               	addlw	-1
  4673     02D3  1D03               	skipz
  4674     02D4  2ACD               	goto	u1535
  4675     02D5                     l1848:
  4676     02D5  3001               	movlw	1
  4677     02D6  02F5               	subwf	___almod@counter,f
  4678     02D7  1D03               	btfss	3,2
  4679     02D8  2ADA               	goto	u1541
  4680     02D9  2ADB               	goto	u1540
  4681     02DA                     u1541:
  4682     02DA  2AAC               	goto	l1842
  4683     02DB                     u1540:
  4684     02DB                     l1850:
  4685     02DB  0876               	movf	___almod@sign,w
  4686     02DC  1903               	btfsc	3,2
  4687     02DD  2ADF               	goto	u1551
  4688     02DE  2AE0               	goto	u1550
  4689     02DF                     u1551:
  4690     02DF  2AEB               	goto	l1854
  4691     02E0                     u1550:
  4692     02E0                     l1852:
  4693     02E0  09CA               	comf	___almod@dividend,f
  4694     02E1  09CB               	comf	___almod@dividend+1,f
  4695     02E2  09CC               	comf	___almod@dividend+2,f
  4696     02E3  09CD               	comf	___almod@dividend+3,f
  4697     02E4  0ACA               	incf	___almod@dividend,f
  4698     02E5  1903               	skipnz
  4699     02E6  0ACB               	incf	___almod@dividend+1,f
  4700     02E7  1903               	skipnz
  4701     02E8  0ACC               	incf	___almod@dividend+2,f
  4702     02E9  1903               	skipnz
  4703     02EA  0ACD               	incf	___almod@dividend+3,f
  4704     02EB                     l1854:
  4705     02EB  084D               	movf	___almod@dividend+3,w
  4706     02EC  00C9               	movwf	?___almod+3
  4707     02ED  084C               	movf	___almod@dividend+2,w
  4708     02EE  00C8               	movwf	?___almod+2
  4709     02EF  084B               	movf	___almod@dividend+1,w
  4710     02F0  00C7               	movwf	?___almod+1
  4711     02F1  084A               	movf	___almod@dividend,w
  4712     02F2  00C6               	movwf	?___almod
  4713     02F3                     l588:
  4714     02F3  0008               	return
  4715     02F4                     __end_of___almod:
  4716                           
  4717                           	psect	text11
  4718     041C                     __ptext11:	
  4719 ;; *************** function ___aldiv *****************
  4720 ;; Defined at:
  4721 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\aldiv.c"
  4722 ;; Parameters:    Size  Location     Type
  4723 ;;  divisor         4    0[BANK0 ] long 
  4724 ;;  dividend        4    4[BANK0 ] long 
  4725 ;; Auto vars:     Size  Location     Type
  4726 ;;  quotient        4   10[BANK0 ] long 
  4727 ;;  sign            1    9[BANK0 ] unsigned char 
  4728 ;;  counter         1    8[BANK0 ] unsigned char 
  4729 ;; Return value:  Size  Location     Type
  4730 ;;                  4    0[BANK0 ] long 
  4731 ;; Registers used:
  4732 ;;		wreg, status,2, status,0, btemp+1
  4733 ;; Tracked objects:
  4734 ;;		On entry : 0/0
  4735 ;;		On exit  : 0/0
  4736 ;;		Unchanged: 0/0
  4737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4738 ;;      Params:         0       8       0       0       0
  4739 ;;      Locals:         0       6       0       0       0
  4740 ;;      Temps:          1       0       0       0       0
  4741 ;;      Totals:         1      14       0       0       0
  4742 ;;Total ram usage:       15 bytes
  4743 ;; Hardware stack levels used: 1
  4744 ;; Hardware stack levels required when called: 1
  4745 ;; This function calls:
  4746 ;;		Nothing
  4747 ;; This function is called by:
  4748 ;;		_LCD_write_variable
  4749 ;; This function uses a non-reentrant model
  4750 ;;
  4751                           
  4752     041C                     ___aldiv:	
  4753                           ;psect for function ___aldiv
  4754                           
  4755     041C                     l2394:	
  4756                           ;incstack = 0
  4757                           ; Regs used in ___aldiv: [wreg+status,2+status,0+btemp+1]
  4758                           
  4759     041C  1283               	bcf	3,5	;RP0=0, select bank0
  4760     041D  1303               	bcf	3,6	;RP1=0, select bank0
  4761     041E  01CF               	clrf	___aldiv@sign
  4762     041F                     l2396:
  4763     041F  1FC9               	btfss	___aldiv@divisor+3,7
  4764     0420  2C22               	goto	u2211
  4765     0421  2C23               	goto	u2210
  4766     0422                     u2211:
  4767     0422  2C30               	goto	l565
  4768     0423                     u2210:
  4769     0423                     l2398:
  4770     0423  09C6               	comf	___aldiv@divisor,f
  4771     0424  09C7               	comf	___aldiv@divisor+1,f
  4772     0425  09C8               	comf	___aldiv@divisor+2,f
  4773     0426  09C9               	comf	___aldiv@divisor+3,f
  4774     0427  0AC6               	incf	___aldiv@divisor,f
  4775     0428  1903               	skipnz
  4776     0429  0AC7               	incf	___aldiv@divisor+1,f
  4777     042A  1903               	skipnz
  4778     042B  0AC8               	incf	___aldiv@divisor+2,f
  4779     042C  1903               	skipnz
  4780     042D  0AC9               	incf	___aldiv@divisor+3,f
  4781     042E  01CF               	clrf	___aldiv@sign
  4782     042F  0ACF               	incf	___aldiv@sign,f
  4783     0430                     l565:
  4784     0430  1FCD               	btfss	___aldiv@dividend+3,7
  4785     0431  2C33               	goto	u2221
  4786     0432  2C34               	goto	u2220
  4787     0433                     u2221:
  4788     0433  2C43               	goto	l2404
  4789     0434                     u2220:
  4790     0434                     l2400:
  4791     0434  09CA               	comf	___aldiv@dividend,f
  4792     0435  09CB               	comf	___aldiv@dividend+1,f
  4793     0436  09CC               	comf	___aldiv@dividend+2,f
  4794     0437  09CD               	comf	___aldiv@dividend+3,f
  4795     0438  0ACA               	incf	___aldiv@dividend,f
  4796     0439  1903               	skipnz
  4797     043A  0ACB               	incf	___aldiv@dividend+1,f
  4798     043B  1903               	skipnz
  4799     043C  0ACC               	incf	___aldiv@dividend+2,f
  4800     043D  1903               	skipnz
  4801     043E  0ACD               	incf	___aldiv@dividend+3,f
  4802     043F                     l2402:
  4803     043F  3001               	movlw	1
  4804     0440  00FF               	movwf	btemp+1
  4805     0441  087F               	movf	btemp+1,w
  4806     0442  06CF               	xorwf	___aldiv@sign,f
  4807     0443                     l2404:
  4808     0443  3000               	movlw	0
  4809     0444  00D3               	movwf	___aldiv@quotient+3
  4810     0445  3000               	movlw	0
  4811     0446  00D2               	movwf	___aldiv@quotient+2
  4812     0447  3000               	movlw	0
  4813     0448  00D1               	movwf	___aldiv@quotient+1
  4814     0449  3000               	movlw	0
  4815     044A  00D0               	movwf	___aldiv@quotient
  4816     044B                     l2406:
  4817     044B  0849               	movf	___aldiv@divisor+3,w
  4818     044C  0448               	iorwf	___aldiv@divisor+2,w
  4819     044D  0447               	iorwf	___aldiv@divisor+1,w
  4820     044E  0446               	iorwf	___aldiv@divisor,w
  4821     044F  1903               	skipnz
  4822     0450  2C52               	goto	u2231
  4823     0451  2C53               	goto	u2230
  4824     0452                     u2231:
  4825     0452  2CA0               	goto	l2428
  4826     0453                     u2230:
  4827     0453                     l2408:
  4828     0453  01CE               	clrf	___aldiv@counter
  4829     0454  0ACE               	incf	___aldiv@counter,f
  4830     0455  2C63               	goto	l2414
  4831     0456                     l2410:
  4832     0456  3001               	movlw	1
  4833     0457  00F4               	movwf	??___aldiv
  4834     0458                     u2245:
  4835     0458  1003               	clrc
  4836     0459  0DC6               	rlf	___aldiv@divisor,f
  4837     045A  0DC7               	rlf	___aldiv@divisor+1,f
  4838     045B  0DC8               	rlf	___aldiv@divisor+2,f
  4839     045C  0DC9               	rlf	___aldiv@divisor+3,f
  4840     045D  0BF4               	decfsz	??___aldiv,f
  4841     045E  2C58               	goto	u2245
  4842     045F                     l2412:
  4843     045F  3001               	movlw	1
  4844     0460  00FF               	movwf	btemp+1
  4845     0461  087F               	movf	btemp+1,w
  4846     0462  07CE               	addwf	___aldiv@counter,f
  4847     0463                     l2414:
  4848     0463  1FC9               	btfss	___aldiv@divisor+3,7
  4849     0464  2C66               	goto	u2251
  4850     0465  2C67               	goto	u2250
  4851     0466                     u2251:
  4852     0466  2C56               	goto	l2410
  4853     0467                     u2250:
  4854     0467                     l2416:
  4855     0467  3001               	movlw	1
  4856     0468  00F4               	movwf	??___aldiv
  4857     0469                     u2265:
  4858     0469  1003               	clrc
  4859     046A  0DD0               	rlf	___aldiv@quotient,f
  4860     046B  0DD1               	rlf	___aldiv@quotient+1,f
  4861     046C  0DD2               	rlf	___aldiv@quotient+2,f
  4862     046D  0DD3               	rlf	___aldiv@quotient+3,f
  4863     046E  0BF4               	decfsz	??___aldiv,f
  4864     046F  2C69               	goto	u2265
  4865     0470                     l2418:
  4866     0470  0849               	movf	___aldiv@divisor+3,w
  4867     0471  024D               	subwf	___aldiv@dividend+3,w
  4868     0472  1D03               	skipz
  4869     0473  2C7E               	goto	u2275
  4870     0474  0848               	movf	___aldiv@divisor+2,w
  4871     0475  024C               	subwf	___aldiv@dividend+2,w
  4872     0476  1D03               	skipz
  4873     0477  2C7E               	goto	u2275
  4874     0478  0847               	movf	___aldiv@divisor+1,w
  4875     0479  024B               	subwf	___aldiv@dividend+1,w
  4876     047A  1D03               	skipz
  4877     047B  2C7E               	goto	u2275
  4878     047C  0846               	movf	___aldiv@divisor,w
  4879     047D  024A               	subwf	___aldiv@dividend,w
  4880     047E                     u2275:
  4881     047E  1C03               	skipc
  4882     047F  2C81               	goto	u2271
  4883     0480  2C82               	goto	u2270
  4884     0481                     u2271:
  4885     0481  2C91               	goto	l2424
  4886     0482                     u2270:
  4887     0482                     l2420:
  4888     0482  0846               	movf	___aldiv@divisor,w
  4889     0483  02CA               	subwf	___aldiv@dividend,f
  4890     0484  0847               	movf	___aldiv@divisor+1,w
  4891     0485  1C03               	skipc
  4892     0486  0F47               	incfsz	___aldiv@divisor+1,w
  4893     0487  02CB               	subwf	___aldiv@dividend+1,f
  4894     0488  0848               	movf	___aldiv@divisor+2,w
  4895     0489  1C03               	skipc
  4896     048A  0F48               	incfsz	___aldiv@divisor+2,w
  4897     048B  02CC               	subwf	___aldiv@dividend+2,f
  4898     048C  0849               	movf	___aldiv@divisor+3,w
  4899     048D  1C03               	skipc
  4900     048E  0F49               	incfsz	___aldiv@divisor+3,w
  4901     048F  02CD               	subwf	___aldiv@dividend+3,f
  4902     0490                     l2422:
  4903     0490  1450               	bsf	___aldiv@quotient,0
  4904     0491                     l2424:
  4905     0491  3001               	movlw	1
  4906     0492                     u2285:
  4907     0492  1003               	clrc
  4908     0493  0CC9               	rrf	___aldiv@divisor+3,f
  4909     0494  0CC8               	rrf	___aldiv@divisor+2,f
  4910     0495  0CC7               	rrf	___aldiv@divisor+1,f
  4911     0496  0CC6               	rrf	___aldiv@divisor,f
  4912     0497  3EFF               	addlw	-1
  4913     0498  1D03               	skipz
  4914     0499  2C92               	goto	u2285
  4915     049A                     l2426:
  4916     049A  3001               	movlw	1
  4917     049B  02CE               	subwf	___aldiv@counter,f
  4918     049C  1D03               	btfss	3,2
  4919     049D  2C9F               	goto	u2291
  4920     049E  2CA0               	goto	u2290
  4921     049F                     u2291:
  4922     049F  2C67               	goto	l2416
  4923     04A0                     u2290:
  4924     04A0                     l2428:
  4925     04A0  084F               	movf	___aldiv@sign,w
  4926     04A1  1903               	btfsc	3,2
  4927     04A2  2CA4               	goto	u2301
  4928     04A3  2CA5               	goto	u2300
  4929     04A4                     u2301:
  4930     04A4  2CB0               	goto	l2432
  4931     04A5                     u2300:
  4932     04A5                     l2430:
  4933     04A5  09D0               	comf	___aldiv@quotient,f
  4934     04A6  09D1               	comf	___aldiv@quotient+1,f
  4935     04A7  09D2               	comf	___aldiv@quotient+2,f
  4936     04A8  09D3               	comf	___aldiv@quotient+3,f
  4937     04A9  0AD0               	incf	___aldiv@quotient,f
  4938     04AA  1903               	skipnz
  4939     04AB  0AD1               	incf	___aldiv@quotient+1,f
  4940     04AC  1903               	skipnz
  4941     04AD  0AD2               	incf	___aldiv@quotient+2,f
  4942     04AE  1903               	skipnz
  4943     04AF  0AD3               	incf	___aldiv@quotient+3,f
  4944     04B0                     l2432:
  4945     04B0  0853               	movf	___aldiv@quotient+3,w
  4946     04B1  00C9               	movwf	?___aldiv+3
  4947     04B2  0852               	movf	___aldiv@quotient+2,w
  4948     04B3  00C8               	movwf	?___aldiv+2
  4949     04B4  0851               	movf	___aldiv@quotient+1,w
  4950     04B5  00C7               	movwf	?___aldiv+1
  4951     04B6  0850               	movf	___aldiv@quotient,w
  4952     04B7  00C6               	movwf	?___aldiv
  4953     04B8                     l575:
  4954     04B8  0008               	return
  4955     04B9                     __end_of___aldiv:
  4956                           
  4957                           	psect	text12
  4958     0F66                     __ptext12:	
  4959 ;; *************** function _LCD_write_string *****************
  4960 ;; Defined at:
  4961 ;;		line 9 in file "LCD_write_string.c"
  4962 ;; Parameters:    Size  Location     Type
  4963 ;;  string          2    0[BANK0 ] PTR unsigned char 
  4964 ;;		 -> STR_13(12), STR_12(12), STR_11(12), STR_10(12), 
  4965 ;;		 -> STR_8(19), STR_7(12), STR_5(8), STR_3(18), 
  4966 ;;		 -> STR_2(13), STR_1(11), StringReceive(30), 
  4967 ;; Auto vars:     Size  Location     Type
  4968 ;;  i               1    2[BANK0 ] unsigned char 
  4969 ;; Return value:  Size  Location     Type
  4970 ;;                  1    wreg      void 
  4971 ;; Registers used:
  4972 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4973 ;; Tracked objects:
  4974 ;;		On entry : 0/0
  4975 ;;		On exit  : 0/0
  4976 ;;		Unchanged: 0/0
  4977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4978 ;;      Params:         0       2       0       0       0
  4979 ;;      Locals:         0       1       0       0       0
  4980 ;;      Temps:          0       0       0       0       0
  4981 ;;      Totals:         0       3       0       0       0
  4982 ;;Total ram usage:        3 bytes
  4983 ;; Hardware stack levels used: 1
  4984 ;; Hardware stack levels required when called: 3
  4985 ;; This function calls:
  4986 ;;		_LCD_write_data
  4987 ;; This function is called by:
  4988 ;;		_main
  4989 ;; This function uses a non-reentrant model
  4990 ;;
  4991                           
  4992     0F66                     _LCD_write_string:	
  4993                           ;psect for function _LCD_write_string
  4994                           
  4995     0F66                     l2558:	
  4996                           ;incstack = 0
  4997                           ; Regs used in _LCD_write_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4998                           
  4999                           
  5000                           ;LCD_write_string.c: 12:     for(uint8_t i=0 ; string[i] != '\0' ; i++){
  5001     0F66  1283               	bcf	3,5	;RP0=0, select bank0
  5002     0F67  1303               	bcf	3,6	;RP1=0, select bank0
  5003     0F68  01C8               	clrf	LCD_write_string@i
  5004     0F69  2F81               	goto	l2564
  5005     0F6A                     l2560:
  5006                           
  5007                           ;LCD_write_string.c: 13:         LCD_write_data(string[i]);
  5008     0F6A  0848               	movf	LCD_write_string@i,w
  5009     0F6B  0746               	addwf	LCD_write_string@string,w
  5010     0F6C  0084               	movwf	4
  5011     0F6D  0847               	movf	LCD_write_string@string+1,w
  5012     0F6E  1803               	skipnc
  5013     0F6F  0A47               	incf	LCD_write_string@string+1,w
  5014     0F70  00FF               	movwf	btemp+1
  5015     0F71  120A  118A  2011  120A  158A  	fcall	stringtab
  5016     0F76  120A  118A  2388  120A  158A  	fcall	_LCD_write_data
  5017     0F7B                     l2562:
  5018                           
  5019                           ;LCD_write_string.c: 14:     }
  5020     0F7B  3001               	movlw	1
  5021     0F7C  00FF               	movwf	btemp+1
  5022     0F7D  087F               	movf	btemp+1,w
  5023     0F7E  1283               	bcf	3,5	;RP0=0, select bank0
  5024     0F7F  1303               	bcf	3,6	;RP1=0, select bank0
  5025     0F80  07C8               	addwf	LCD_write_string@i,f
  5026     0F81                     l2564:
  5027     0F81  0848               	movf	LCD_write_string@i,w
  5028     0F82  0746               	addwf	LCD_write_string@string,w
  5029     0F83  0084               	movwf	4
  5030     0F84  0847               	movf	LCD_write_string@string+1,w
  5031     0F85  1803               	skipnc
  5032     0F86  0A47               	incf	LCD_write_string@string+1,w
  5033     0F87  00FF               	movwf	btemp+1
  5034     0F88  120A  118A  2011  120A  158A  	fcall	stringtab
  5035     0F8D  3A00               	xorlw	0
  5036     0F8E  1D03               	skipz
  5037     0F8F  2F91               	goto	u2451
  5038     0F90  2F92               	goto	u2450
  5039     0F91                     u2451:
  5040     0F91  2F6A               	goto	l2560
  5041     0F92                     u2450:
  5042     0F92                     l171:
  5043     0F92  0008               	return
  5044     0F93                     __end_of_LCD_write_string:
  5045                           
  5046                           	psect	text13
  5047     0388                     __ptext13:	
  5048 ;; *************** function _LCD_write_data *****************
  5049 ;; Defined at:
  5050 ;;		line 9 in file "LCD_write_data.c"
  5051 ;; Parameters:    Size  Location     Type
  5052 ;;  data            1    wreg     unsigned char 
  5053 ;; Auto vars:     Size  Location     Type
  5054 ;;  data            1    6[COMMON] unsigned char 
  5055 ;; Return value:  Size  Location     Type
  5056 ;;                  1    wreg      void 
  5057 ;; Registers used:
  5058 ;;		wreg, status,2, status,0, pclath, cstack
  5059 ;; Tracked objects:
  5060 ;;		On entry : 0/0
  5061 ;;		On exit  : 0/0
  5062 ;;		Unchanged: 0/0
  5063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5064 ;;      Params:         0       0       0       0       0
  5065 ;;      Locals:         1       0       0       0       0
  5066 ;;      Temps:          2       0       0       0       0
  5067 ;;      Totals:         3       0       0       0       0
  5068 ;;Total ram usage:        3 bytes
  5069 ;; Hardware stack levels used: 1
  5070 ;; Hardware stack levels required when called: 2
  5071 ;; This function calls:
  5072 ;;		_LCD_pulse_clock
  5073 ;; This function is called by:
  5074 ;;		_LCD_write_string
  5075 ;;		_LCD_write_variable
  5076 ;;		_LCD_add_character
  5077 ;;		_LCD_write_char
  5078 ;;		_LCD_write_float
  5079 ;; This function uses a non-reentrant model
  5080 ;;
  5081                           
  5082     0388                     _LCD_write_data:	
  5083                           ;psect for function _LCD_write_data
  5084                           
  5085                           
  5086                           ;incstack = 0
  5087                           ; Regs used in _LCD_write_data: [wreg+status,2+status,0+pclath+cstack]
  5088                           ;LCD_write_data@data stored from wreg
  5089     0388  00F7               	movwf	LCD_write_data@data
  5090     0389                     l2358:
  5091                           
  5092                           ;LCD_write_data.c: 11:     PORTDbits.RD2 = 1;
  5093     0389  1283               	bcf	3,5	;RP0=0, select bank0
  5094     038A  1303               	bcf	3,6	;RP1=0, select bank0
  5095     038B  1508               	bsf	8,2	;volatile
  5096     038C                     l2360:
  5097                           
  5098                           ;LCD_write_data.c: 14:     PORTDbits.RD7 = (data & 0b10000000) >> 7;
  5099     038C  0877               	movf	LCD_write_data@data,w
  5100     038D  00F5               	movwf	??_LCD_write_data
  5101     038E  3007               	movlw	7
  5102     038F                     u2105:
  5103     038F  1003               	clrc
  5104     0390  0CF5               	rrf	??_LCD_write_data,f
  5105     0391  3EFF               	addlw	-1
  5106     0392  1D03               	skipz
  5107     0393  2B8F               	goto	u2105
  5108     0394  0875               	movf	??_LCD_write_data,w
  5109     0395  3901               	andlw	1
  5110     0396  00F6               	movwf	??_LCD_write_data+1
  5111     0397  0CF6               	rrf	??_LCD_write_data+1,f
  5112     0398  0CF6               	rrf	??_LCD_write_data+1,f
  5113     0399  0808               	movf	8,w	;volatile
  5114     039A  0676               	xorwf	??_LCD_write_data+1,w
  5115     039B  397F               	andlw	-129
  5116     039C  0676               	xorwf	??_LCD_write_data+1,w
  5117     039D  0088               	movwf	8	;volatile
  5118                           
  5119                           ;LCD_write_data.c: 15:     PORTDbits.RD6 = (data & 0b01000000) >> 6;
  5120     039E  0877               	movf	LCD_write_data@data,w
  5121     039F  00F5               	movwf	??_LCD_write_data
  5122     03A0  3006               	movlw	6
  5123     03A1                     u2115:
  5124     03A1  1003               	clrc
  5125     03A2  0CF5               	rrf	??_LCD_write_data,f
  5126     03A3  3EFF               	addlw	-1
  5127     03A4  1D03               	skipz
  5128     03A5  2BA1               	goto	u2115
  5129     03A6  0875               	movf	??_LCD_write_data,w
  5130     03A7  3901               	andlw	1
  5131     03A8  00F6               	movwf	??_LCD_write_data+1
  5132     03A9  0EF6               	swapf	??_LCD_write_data+1,f
  5133     03AA  0DF6               	rlf	??_LCD_write_data+1,f
  5134     03AB  0DF6               	rlf	??_LCD_write_data+1,f
  5135     03AC  0808               	movf	8,w	;volatile
  5136     03AD  0676               	xorwf	??_LCD_write_data+1,w
  5137     03AE  39BF               	andlw	-65
  5138     03AF  0676               	xorwf	??_LCD_write_data+1,w
  5139     03B0  0088               	movwf	8	;volatile
  5140                           
  5141                           ;LCD_write_data.c: 16:     PORTDbits.RD5 = (data & 0b00100000) >> 5;
  5142     03B1  0877               	movf	LCD_write_data@data,w
  5143     03B2  00F5               	movwf	??_LCD_write_data
  5144     03B3  3005               	movlw	5
  5145     03B4                     u2125:
  5146     03B4  1003               	clrc
  5147     03B5  0CF5               	rrf	??_LCD_write_data,f
  5148     03B6  3EFF               	addlw	-1
  5149     03B7  1D03               	skipz
  5150     03B8  2BB4               	goto	u2125
  5151     03B9  0875               	movf	??_LCD_write_data,w
  5152     03BA  3901               	andlw	1
  5153     03BB  00F6               	movwf	??_LCD_write_data+1
  5154     03BC  0EF6               	swapf	??_LCD_write_data+1,f
  5155     03BD  0DF6               	rlf	??_LCD_write_data+1,f
  5156     03BE  0808               	movf	8,w	;volatile
  5157     03BF  0676               	xorwf	??_LCD_write_data+1,w
  5158     03C0  39DF               	andlw	-33
  5159     03C1  0676               	xorwf	??_LCD_write_data+1,w
  5160     03C2  0088               	movwf	8	;volatile
  5161                           
  5162                           ;LCD_write_data.c: 17:     PORTDbits.RD4 = (data & 0b00010000) >> 4;
  5163     03C3  0877               	movf	LCD_write_data@data,w
  5164     03C4  00F5               	movwf	??_LCD_write_data
  5165     03C5  3004               	movlw	4
  5166     03C6                     u2135:
  5167     03C6  1003               	clrc
  5168     03C7  0CF5               	rrf	??_LCD_write_data,f
  5169     03C8  3EFF               	addlw	-1
  5170     03C9  1D03               	skipz
  5171     03CA  2BC6               	goto	u2135
  5172     03CB  0875               	movf	??_LCD_write_data,w
  5173     03CC  3901               	andlw	1
  5174     03CD  00F6               	movwf	??_LCD_write_data+1
  5175     03CE  0EF6               	swapf	??_LCD_write_data+1,f
  5176     03CF  0808               	movf	8,w	;volatile
  5177     03D0  0676               	xorwf	??_LCD_write_data+1,w
  5178     03D1  39EF               	andlw	-17
  5179     03D2  0676               	xorwf	??_LCD_write_data+1,w
  5180     03D3  0088               	movwf	8	;volatile
  5181     03D4                     l2362:
  5182                           
  5183                           ;LCD_write_data.c: 20:     LCD_pulse_clock();
  5184     03D4  120A  158A  269B  120A  118A  	fcall	_LCD_pulse_clock
  5185     03D9                     l2364:
  5186                           
  5187                           ;LCD_write_data.c: 23:     PORTDbits.RD7 = (data & 0b00001000) >> 3;
  5188     03D9  0877               	movf	LCD_write_data@data,w
  5189     03DA  00F5               	movwf	??_LCD_write_data
  5190     03DB  3003               	movlw	3
  5191     03DC                     u2145:
  5192     03DC  1003               	clrc
  5193     03DD  0CF5               	rrf	??_LCD_write_data,f
  5194     03DE  3EFF               	addlw	-1
  5195     03DF  1D03               	skipz
  5196     03E0  2BDC               	goto	u2145
  5197     03E1  0875               	movf	??_LCD_write_data,w
  5198     03E2  3901               	andlw	1
  5199     03E3  00F6               	movwf	??_LCD_write_data+1
  5200     03E4  0CF6               	rrf	??_LCD_write_data+1,f
  5201     03E5  0CF6               	rrf	??_LCD_write_data+1,f
  5202     03E6  1283               	bcf	3,5	;RP0=0, select bank0
  5203     03E7  1303               	bcf	3,6	;RP1=0, select bank0
  5204     03E8  0808               	movf	8,w	;volatile
  5205     03E9  0676               	xorwf	??_LCD_write_data+1,w
  5206     03EA  397F               	andlw	-129
  5207     03EB  0676               	xorwf	??_LCD_write_data+1,w
  5208     03EC  0088               	movwf	8	;volatile
  5209     03ED                     l2366:
  5210                           
  5211                           ;LCD_write_data.c: 24:     PORTDbits.RD6 = (data & 0b00000100) >> 2;
  5212     03ED  0877               	movf	LCD_write_data@data,w
  5213     03EE  00F5               	movwf	??_LCD_write_data
  5214     03EF  3002               	movlw	2
  5215     03F0                     u2155:
  5216     03F0  1003               	clrc
  5217     03F1  0CF5               	rrf	??_LCD_write_data,f
  5218     03F2  3EFF               	addlw	-1
  5219     03F3  1D03               	skipz
  5220     03F4  2BF0               	goto	u2155
  5221     03F5  0875               	movf	??_LCD_write_data,w
  5222     03F6  3901               	andlw	1
  5223     03F7  00F6               	movwf	??_LCD_write_data+1
  5224     03F8  0EF6               	swapf	??_LCD_write_data+1,f
  5225     03F9  0DF6               	rlf	??_LCD_write_data+1,f
  5226     03FA  0DF6               	rlf	??_LCD_write_data+1,f
  5227     03FB  0808               	movf	8,w	;volatile
  5228     03FC  0676               	xorwf	??_LCD_write_data+1,w
  5229     03FD  39BF               	andlw	-65
  5230     03FE  0676               	xorwf	??_LCD_write_data+1,w
  5231     03FF  0088               	movwf	8	;volatile
  5232     0400                     l2368:
  5233                           
  5234                           ;LCD_write_data.c: 25:     PORTDbits.RD5 = (data & 0b00000010) >> 1;
  5235     0400  0877               	movf	LCD_write_data@data,w
  5236     0401  00F5               	movwf	??_LCD_write_data
  5237     0402  1003               	clrc
  5238     0403  0C75               	rrf	??_LCD_write_data,w
  5239     0404  3901               	andlw	1
  5240     0405  00F6               	movwf	??_LCD_write_data+1
  5241     0406  0EF6               	swapf	??_LCD_write_data+1,f
  5242     0407  0DF6               	rlf	??_LCD_write_data+1,f
  5243     0408  0808               	movf	8,w	;volatile
  5244     0409  0676               	xorwf	??_LCD_write_data+1,w
  5245     040A  39DF               	andlw	-33
  5246     040B  0676               	xorwf	??_LCD_write_data+1,w
  5247     040C  0088               	movwf	8	;volatile
  5248     040D                     l2370:
  5249                           
  5250                           ;LCD_write_data.c: 26:     PORTDbits.RD4 = (data & 0b00000001) ;
  5251     040D  0877               	movf	LCD_write_data@data,w
  5252     040E  3901               	andlw	1
  5253     040F  00F5               	movwf	??_LCD_write_data
  5254     0410  0EF5               	swapf	??_LCD_write_data,f
  5255     0411  0808               	movf	8,w	;volatile
  5256     0412  0675               	xorwf	??_LCD_write_data,w
  5257     0413  39EF               	andlw	-17
  5258     0414  0675               	xorwf	??_LCD_write_data,w
  5259     0415  0088               	movwf	8	;volatile
  5260     0416                     l2372:
  5261                           
  5262                           ;LCD_write_data.c: 29:     LCD_pulse_clock();
  5263     0416  120A  158A  269B  120A  118A  	fcall	_LCD_pulse_clock
  5264     041B                     l146:
  5265     041B  0008               	return
  5266     041C                     __end_of_LCD_write_data:
  5267                           
  5268                           	psect	text14
  5269     01F6                     __ptext14:	
  5270 ;; *************** function _LCD_init *****************
  5271 ;; Defined at:
  5272 ;;		line 18 in file "LCD_init.c"
  5273 ;; Parameters:    Size  Location     Type
  5274 ;;		None
  5275 ;; Auto vars:     Size  Location     Type
  5276 ;;		None
  5277 ;; Return value:  Size  Location     Type
  5278 ;;                  1    wreg      void 
  5279 ;; Registers used:
  5280 ;;		wreg, status,2, status,0, pclath, cstack
  5281 ;; Tracked objects:
  5282 ;;		On entry : 0/0
  5283 ;;		On exit  : 0/0
  5284 ;;		Unchanged: 0/0
  5285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5286 ;;      Params:         0       0       0       0       0
  5287 ;;      Locals:         0       0       0       0       0
  5288 ;;      Temps:          0       2       0       0       0
  5289 ;;      Totals:         0       2       0       0       0
  5290 ;;Total ram usage:        2 bytes
  5291 ;; Hardware stack levels used: 1
  5292 ;; Hardware stack levels required when called: 4
  5293 ;; This function calls:
  5294 ;;		_LCD_clear
  5295 ;;		_LCD_pulse_clock
  5296 ;;		_LCD_write_command
  5297 ;; This function is called by:
  5298 ;;		_main
  5299 ;; This function uses a non-reentrant model
  5300 ;;
  5301                           
  5302     01F6                     _LCD_init:	
  5303                           ;psect for function _LCD_init
  5304                           
  5305     01F6                     l2476:	
  5306                           ;incstack = 0
  5307                           ; Regs used in _LCD_init: [wreg+status,2+status,0+pclath+cstack]
  5308                           
  5309                           
  5310                           ;LCD_init.c: 21:     TRISDbits.TRISD2 = 0; PORTDbits.RD2 = 0;
  5311     01F6  1683               	bsf	3,5	;RP0=1, select bank1
  5312     01F7  1303               	bcf	3,6	;RP1=0, select bank1
  5313     01F8  1108               	bcf	8,2	;volatile
  5314     01F9  1283               	bcf	3,5	;RP0=0, select bank0
  5315     01FA  1303               	bcf	3,6	;RP1=0, select bank0
  5316     01FB  1108               	bcf	8,2	;volatile
  5317                           
  5318                           ;LCD_init.c: 22:     TRISDbits.TRISD3 = 0; PORTDbits.RD3 = 0;
  5319     01FC  1683               	bsf	3,5	;RP0=1, select bank1
  5320     01FD  1303               	bcf	3,6	;RP1=0, select bank1
  5321     01FE  1188               	bcf	8,3	;volatile
  5322     01FF  1283               	bcf	3,5	;RP0=0, select bank0
  5323     0200  1303               	bcf	3,6	;RP1=0, select bank0
  5324     0201  1188               	bcf	8,3	;volatile
  5325                           
  5326                           ;LCD_init.c: 23:     TRISDbits.TRISD4 = 0; PORTDbits.RD4 = 0;
  5327     0202  1683               	bsf	3,5	;RP0=1, select bank1
  5328     0203  1303               	bcf	3,6	;RP1=0, select bank1
  5329     0204  1208               	bcf	8,4	;volatile
  5330     0205  1283               	bcf	3,5	;RP0=0, select bank0
  5331     0206  1303               	bcf	3,6	;RP1=0, select bank0
  5332     0207  1208               	bcf	8,4	;volatile
  5333                           
  5334                           ;LCD_init.c: 24:     TRISDbits.TRISD5 = 0; PORTDbits.RD5 = 0;
  5335     0208  1683               	bsf	3,5	;RP0=1, select bank1
  5336     0209  1303               	bcf	3,6	;RP1=0, select bank1
  5337     020A  1288               	bcf	8,5	;volatile
  5338     020B  1283               	bcf	3,5	;RP0=0, select bank0
  5339     020C  1303               	bcf	3,6	;RP1=0, select bank0
  5340     020D  1288               	bcf	8,5	;volatile
  5341                           
  5342                           ;LCD_init.c: 25:     TRISDbits.TRISD6 = 0; PORTDbits.RD6 = 0;
  5343     020E  1683               	bsf	3,5	;RP0=1, select bank1
  5344     020F  1303               	bcf	3,6	;RP1=0, select bank1
  5345     0210  1308               	bcf	8,6	;volatile
  5346     0211  1283               	bcf	3,5	;RP0=0, select bank0
  5347     0212  1303               	bcf	3,6	;RP1=0, select bank0
  5348     0213  1308               	bcf	8,6	;volatile
  5349                           
  5350                           ;LCD_init.c: 26:     TRISDbits.TRISD7 = 0; PORTDbits.RD7 = 0;
  5351     0214  1683               	bsf	3,5	;RP0=1, select bank1
  5352     0215  1303               	bcf	3,6	;RP1=0, select bank1
  5353     0216  1388               	bcf	8,7	;volatile
  5354     0217  1283               	bcf	3,5	;RP0=0, select bank0
  5355     0218  1303               	bcf	3,6	;RP1=0, select bank0
  5356     0219  1388               	bcf	8,7	;volatile
  5357     021A                     l2478:
  5358                           
  5359                           ;LCD_init.c: 33:     _delay((unsigned long)((60)*(4000000/4000.0)));
  5360     021A  304E               	movlw	78
  5361     021B  1283               	bcf	3,5	;RP0=0, select bank0
  5362     021C  1303               	bcf	3,6	;RP1=0, select bank0
  5363     021D  00C8               	movwf	??_LCD_init+1
  5364     021E  30EA               	movlw	234
  5365     021F  00C7               	movwf	??_LCD_init
  5366     0220                     u2747:
  5367     0220  0BC7               	decfsz	??_LCD_init,f
  5368     0221  2A20               	goto	u2747
  5369     0222  0BC8               	decfsz	??_LCD_init+1,f
  5370     0223  2A20               	goto	u2747
  5371     0224  0000               	nop
  5372     0225                     l2480:
  5373                           
  5374                           ;LCD_init.c: 36:     PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; PORTDbits.
      +                          RD4 = 1;
  5375     0225  1283               	bcf	3,5	;RP0=0, select bank0
  5376     0226  1303               	bcf	3,6	;RP1=0, select bank0
  5377     0227  1388               	bcf	8,7	;volatile
  5378     0228                     l2482:
  5379     0228  1308               	bcf	8,6	;volatile
  5380     0229                     l2484:
  5381     0229  1688               	bsf	8,5	;volatile
  5382     022A                     l2486:
  5383     022A  1608               	bsf	8,4	;volatile
  5384     022B                     l2488:
  5385                           
  5386                           ;LCD_init.c: 39:     LCD_pulse_clock();
  5387     022B  120A  158A  269B  120A  118A  	fcall	_LCD_pulse_clock
  5388     0230                     l2490:
  5389                           
  5390                           ;LCD_init.c: 42:     _delay((unsigned long)((6)*(4000000/4000.0)));
  5391     0230  3008               	movlw	8
  5392     0231  1283               	bcf	3,5	;RP0=0, select bank0
  5393     0232  1303               	bcf	3,6	;RP1=0, select bank0
  5394     0233  00C8               	movwf	??_LCD_init+1
  5395     0234  30C9               	movlw	201
  5396     0235  00C7               	movwf	??_LCD_init
  5397     0236                     u2757:
  5398     0236  0BC7               	decfsz	??_LCD_init,f
  5399     0237  2A36               	goto	u2757
  5400     0238  0BC8               	decfsz	??_LCD_init+1,f
  5401     0239  2A36               	goto	u2757
  5402                           
  5403                           ;LCD_init.c: 45:     LCD_pulse_clock();
  5404     023A  120A  158A  269B  120A  118A  	fcall	_LCD_pulse_clock
  5405     023F                     l2492:
  5406                           
  5407                           ;LCD_init.c: 48:     _delay((unsigned long)((150)*(4000000/4000000.0)));
  5408     023F  3031               	movlw	49
  5409     0240  1283               	bcf	3,5	;RP0=0, select bank0
  5410     0241  1303               	bcf	3,6	;RP1=0, select bank0
  5411     0242  00C7               	movwf	??_LCD_init
  5412     0243                     u2767:
  5413     0243  0BC7               	decfsz	??_LCD_init,f
  5414     0244  2A43               	goto	u2767
  5415     0245                     l2494:
  5416                           
  5417                           ;LCD_init.c: 51:     LCD_pulse_clock();
  5418     0245  120A  158A  269B  120A  118A  	fcall	_LCD_pulse_clock
  5419     024A                     l2496:
  5420                           
  5421                           ;LCD_init.c: 54:     PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; PORTDbits.
      +                          RD4 = 0;
  5422     024A  1283               	bcf	3,5	;RP0=0, select bank0
  5423     024B  1303               	bcf	3,6	;RP1=0, select bank0
  5424     024C  1388               	bcf	8,7	;volatile
  5425     024D                     l2498:
  5426     024D  1308               	bcf	8,6	;volatile
  5427     024E                     l2500:
  5428     024E  1688               	bsf	8,5	;volatile
  5429     024F                     l2502:
  5430     024F  1208               	bcf	8,4	;volatile
  5431     0250                     l2504:
  5432                           
  5433                           ;LCD_init.c: 57:     LCD_pulse_clock();
  5434     0250  120A  158A  269B  120A  118A  	fcall	_LCD_pulse_clock
  5435     0255                     l2506:
  5436                           
  5437                           ;LCD_init.c: 60:     LCD_write_command(0x28);
  5438     0255  3028               	movlw	40
  5439     0256  120A  118A  22F4  120A  118A  	fcall	_LCD_write_command
  5440     025B                     l2508:
  5441                           
  5442                           ;LCD_init.c: 61:     LCD_write_command(LCD_display_control);
  5443     025B  0879               	movf	_LCD_display_control,w
  5444     025C  120A  118A  22F4  120A  118A  	fcall	_LCD_write_command
  5445     0261                     l2510:
  5446                           
  5447                           ;LCD_init.c: 62:     LCD_write_command(LCD_entry_mode);
  5448     0261  087A               	movf	_LCD_entry_mode,w
  5449     0262  120A  118A  22F4  120A  118A  	fcall	_LCD_write_command
  5450     0267                     l2512:
  5451                           
  5452                           ;LCD_init.c: 63:     LCD_clear();
  5453     0267  120A  158A  26C7  120A  118A  	fcall	_LCD_clear
  5454     026C                     l103:
  5455     026C  0008               	return
  5456     026D                     __end_of_LCD_init:
  5457                           
  5458                           	psect	text15
  5459     0EC7                     __ptext15:	
  5460 ;; *************** function _LCD_clear *****************
  5461 ;; Defined at:
  5462 ;;		line 7 in file "LCD_clear.c"
  5463 ;; Parameters:    Size  Location     Type
  5464 ;;		None
  5465 ;; Auto vars:     Size  Location     Type
  5466 ;;		None
  5467 ;; Return value:  Size  Location     Type
  5468 ;;                  1    wreg      void 
  5469 ;; Registers used:
  5470 ;;		wreg, status,2, status,0, pclath, cstack
  5471 ;; Tracked objects:
  5472 ;;		On entry : 0/0
  5473 ;;		On exit  : 0/0
  5474 ;;		Unchanged: 0/0
  5475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5476 ;;      Params:         0       0       0       0       0
  5477 ;;      Locals:         0       0       0       0       0
  5478 ;;      Temps:          0       1       0       0       0
  5479 ;;      Totals:         0       1       0       0       0
  5480 ;;Total ram usage:        1 bytes
  5481 ;; Hardware stack levels used: 1
  5482 ;; Hardware stack levels required when called: 3
  5483 ;; This function calls:
  5484 ;;		_LCD_write_command
  5485 ;; This function is called by:
  5486 ;;		_LCD_init
  5487 ;;		_main
  5488 ;; This function uses a non-reentrant model
  5489 ;;
  5490                           
  5491     0EC7                     _LCD_clear:	
  5492                           ;psect for function _LCD_clear
  5493                           
  5494     0EC7                     l2374:	
  5495                           ;incstack = 0
  5496                           ; Regs used in _LCD_clear: [wreg+status,2+status,0+pclath+cstack]
  5497                           
  5498                           
  5499                           ;LCD_clear.c: 10:     LCD_write_command(0x01);
  5500     0EC7  3001               	movlw	1
  5501     0EC8  120A  118A  22F4  120A  158A  	fcall	_LCD_write_command
  5502     0ECD                     l2376:
  5503                           
  5504                           ;LCD_clear.c: 13:     _delay((unsigned long)(((1600 - 40))*(4000000/4000000.0)));
  5505     0ECD  30DE               	movlw	222
  5506     0ECE  1283               	bcf	3,5	;RP0=0, select bank0
  5507     0ECF  1303               	bcf	3,6	;RP1=0, select bank0
  5508     0ED0  00C6               	movwf	??_LCD_clear
  5509     0ED1                     u2777:
  5510     0ED1  2ED2               	nop2
  5511     0ED2  2ED3               	nop2
  5512     0ED3  0BC6               	decfsz	??_LCD_clear,f
  5513     0ED4  2ED1               	goto	u2777
  5514     0ED5  2ED6               	nop2
  5515     0ED6  0000               	nop
  5516     0ED7                     l2378:
  5517                           
  5518                           ;LCD_clear.c: 16:     LCD_write_command(LCD_entry_mode);
  5519     0ED7  087A               	movf	_LCD_entry_mode,w
  5520     0ED8  120A  118A  22F4  120A  158A  	fcall	_LCD_write_command
  5521     0EDD                     l20:
  5522     0EDD  0008               	return
  5523     0EDE                     __end_of_LCD_clear:
  5524                           
  5525                           	psect	text16
  5526     0F93                     __ptext16:	
  5527 ;; *************** function _LCD_cursor_set *****************
  5528 ;; Defined at:
  5529 ;;		line 9 in file "LCD_cursor_set.c"
  5530 ;; Parameters:    Size  Location     Type
  5531 ;;  row             1    wreg     unsigned char 
  5532 ;;  column          1    0[BANK0 ] unsigned char 
  5533 ;; Auto vars:     Size  Location     Type
  5534 ;;  row             1    1[BANK0 ] unsigned char 
  5535 ;; Return value:  Size  Location     Type
  5536 ;;                  1    wreg      void 
  5537 ;; Registers used:
  5538 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5539 ;; Tracked objects:
  5540 ;;		On entry : 0/0
  5541 ;;		On exit  : 0/0
  5542 ;;		Unchanged: 0/0
  5543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5544 ;;      Params:         0       1       0       0       0
  5545 ;;      Locals:         0       1       0       0       0
  5546 ;;      Temps:          0       0       0       0       0
  5547 ;;      Totals:         0       2       0       0       0
  5548 ;;Total ram usage:        2 bytes
  5549 ;; Hardware stack levels used: 1
  5550 ;; Hardware stack levels required when called: 3
  5551 ;; This function calls:
  5552 ;;		_LCD_write_command
  5553 ;; This function is called by:
  5554 ;;		_main
  5555 ;;		_LCD_add_character
  5556 ;; This function uses a non-reentrant model
  5557 ;;
  5558                           
  5559     0F93                     _LCD_cursor_set:	
  5560                           ;psect for function _LCD_cursor_set
  5561                           
  5562                           
  5563                           ;incstack = 0
  5564                           ; Regs used in _LCD_cursor_set: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5565                           ;LCD_cursor_set@row stored from wreg
  5566     0F93  1283               	bcf	3,5	;RP0=0, select bank0
  5567     0F94  1303               	bcf	3,6	;RP1=0, select bank0
  5568     0F95  00C7               	movwf	LCD_cursor_set@row
  5569     0F96                     l2458:
  5570                           
  5571                           ;LCD_cursor_set.c: 12:     if(row == 1) column += (0x80 - 1);
  5572     0F96  0347               	decf	LCD_cursor_set@row,w
  5573     0F97  1D03               	btfss	3,2
  5574     0F98  2F9A               	goto	u2361
  5575     0F99  2F9B               	goto	u2360
  5576     0F9A                     u2361:
  5577     0F9A  2F9F               	goto	l2462
  5578     0F9B                     u2360:
  5579     0F9B                     l2460:
  5580     0F9B  307F               	movlw	127
  5581     0F9C  00FF               	movwf	btemp+1
  5582     0F9D  087F               	movf	btemp+1,w
  5583     0F9E  07C6               	addwf	LCD_cursor_set@column,f
  5584     0F9F                     l2462:
  5585                           
  5586                           ;LCD_cursor_set.c: 13:     if(row == 2) column += (0xC0 - 1);
  5587     0F9F  3002               	movlw	2
  5588     0FA0  0647               	xorwf	LCD_cursor_set@row,w
  5589     0FA1  1D03               	btfss	3,2
  5590     0FA2  2FA4               	goto	u2371
  5591     0FA3  2FA5               	goto	u2370
  5592     0FA4                     u2371:
  5593     0FA4  2FA9               	goto	l2466
  5594     0FA5                     u2370:
  5595     0FA5                     l2464:
  5596     0FA5  30BF               	movlw	191
  5597     0FA6  00FF               	movwf	btemp+1
  5598     0FA7  087F               	movf	btemp+1,w
  5599     0FA8  07C6               	addwf	LCD_cursor_set@column,f
  5600     0FA9                     l2466:
  5601                           
  5602                           ;LCD_cursor_set.c: 14:     if(row == 3) column += (0x80 + 19);
  5603     0FA9  3003               	movlw	3
  5604     0FAA  0647               	xorwf	LCD_cursor_set@row,w
  5605     0FAB  1D03               	btfss	3,2
  5606     0FAC  2FAE               	goto	u2381
  5607     0FAD  2FAF               	goto	u2380
  5608     0FAE                     u2381:
  5609     0FAE  2FB3               	goto	l2470
  5610     0FAF                     u2380:
  5611     0FAF                     l2468:
  5612     0FAF  3093               	movlw	147
  5613     0FB0  00FF               	movwf	btemp+1
  5614     0FB1  087F               	movf	btemp+1,w
  5615     0FB2  07C6               	addwf	LCD_cursor_set@column,f
  5616     0FB3                     l2470:
  5617                           
  5618                           ;LCD_cursor_set.c: 15:     if(row == 4) column += (0xC0 + 19);
  5619     0FB3  3004               	movlw	4
  5620     0FB4  0647               	xorwf	LCD_cursor_set@row,w
  5621     0FB5  1D03               	btfss	3,2
  5622     0FB6  2FB8               	goto	u2391
  5623     0FB7  2FB9               	goto	u2390
  5624     0FB8                     u2391:
  5625     0FB8  2FBD               	goto	l2474
  5626     0FB9                     u2390:
  5627     0FB9                     l2472:
  5628     0FB9  30D3               	movlw	211
  5629     0FBA  00FF               	movwf	btemp+1
  5630     0FBB  087F               	movf	btemp+1,w
  5631     0FBC  07C6               	addwf	LCD_cursor_set@column,f
  5632     0FBD                     l2474:
  5633                           
  5634                           ;LCD_cursor_set.c: 18:    LCD_write_command(column);
  5635     0FBD  0846               	movf	LCD_cursor_set@column,w
  5636     0FBE  120A  118A  22F4  120A  158A  	fcall	_LCD_write_command
  5637     0FC3                     l84:
  5638     0FC3  0008               	return
  5639     0FC4                     __end_of_LCD_cursor_set:
  5640                           
  5641                           	psect	text17
  5642     02F4                     __ptext17:	
  5643 ;; *************** function _LCD_write_command *****************
  5644 ;; Defined at:
  5645 ;;		line 9 in file "LCD_write_command.c"
  5646 ;; Parameters:    Size  Location     Type
  5647 ;;  command         1    wreg     unsigned char 
  5648 ;; Auto vars:     Size  Location     Type
  5649 ;;  command         1    6[COMMON] unsigned char 
  5650 ;; Return value:  Size  Location     Type
  5651 ;;                  1    wreg      void 
  5652 ;; Registers used:
  5653 ;;		wreg, status,2, status,0, pclath, cstack
  5654 ;; Tracked objects:
  5655 ;;		On entry : 0/0
  5656 ;;		On exit  : 0/0
  5657 ;;		Unchanged: 0/0
  5658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5659 ;;      Params:         0       0       0       0       0
  5660 ;;      Locals:         1       0       0       0       0
  5661 ;;      Temps:          2       0       0       0       0
  5662 ;;      Totals:         3       0       0       0       0
  5663 ;;Total ram usage:        3 bytes
  5664 ;; Hardware stack levels used: 1
  5665 ;; Hardware stack levels required when called: 2
  5666 ;; This function calls:
  5667 ;;		_LCD_pulse_clock
  5668 ;; This function is called by:
  5669 ;;		_LCD_clear
  5670 ;;		_LCD_cursor_set
  5671 ;;		_LCD_init
  5672 ;;		_LCD_add_character
  5673 ;;		_LCD_configure_cursor_blink
  5674 ;;		_LCD_configure_cursor_display
  5675 ;;		_LCD_configure_entry_id
  5676 ;;		_LCD_configure_entry_shift
  5677 ;;		_LCD_configure_lcd_display
  5678 ;;		_LCD_cursor_decrement
  5679 ;;		_LCD_cursor_increment
  5680 ;;		_LCD_shift_left
  5681 ;;		_LCD_shift_reset
  5682 ;;		_LCD_shift_right
  5683 ;; This function uses a non-reentrant model
  5684 ;;
  5685                           
  5686     02F4                     _LCD_write_command:	
  5687                           ;psect for function _LCD_write_command
  5688                           
  5689                           
  5690                           ;incstack = 0
  5691                           ; Regs used in _LCD_write_command: [wreg+status,2+status,0+pclath+cstack]
  5692                           ;LCD_write_command@command stored from wreg
  5693     02F4  00F7               	movwf	LCD_write_command@command
  5694     02F5                     l2342:
  5695                           
  5696                           ;LCD_write_command.c: 11:     PORTDbits.RD2 = 0;
  5697     02F5  1283               	bcf	3,5	;RP0=0, select bank0
  5698     02F6  1303               	bcf	3,6	;RP1=0, select bank0
  5699     02F7  1108               	bcf	8,2	;volatile
  5700     02F8                     l2344:
  5701                           
  5702                           ;LCD_write_command.c: 14:     PORTDbits.RD7 = (command & 0b10000000) >> 7;
  5703     02F8  0877               	movf	LCD_write_command@command,w
  5704     02F9  00F5               	movwf	??_LCD_write_command
  5705     02FA  3007               	movlw	7
  5706     02FB                     u2045:
  5707     02FB  1003               	clrc
  5708     02FC  0CF5               	rrf	??_LCD_write_command,f
  5709     02FD  3EFF               	addlw	-1
  5710     02FE  1D03               	skipz
  5711     02FF  2AFB               	goto	u2045
  5712     0300  0875               	movf	??_LCD_write_command,w
  5713     0301  3901               	andlw	1
  5714     0302  00F6               	movwf	??_LCD_write_command+1
  5715     0303  0CF6               	rrf	??_LCD_write_command+1,f
  5716     0304  0CF6               	rrf	??_LCD_write_command+1,f
  5717     0305  0808               	movf	8,w	;volatile
  5718     0306  0676               	xorwf	??_LCD_write_command+1,w
  5719     0307  397F               	andlw	-129
  5720     0308  0676               	xorwf	??_LCD_write_command+1,w
  5721     0309  0088               	movwf	8	;volatile
  5722                           
  5723                           ;LCD_write_command.c: 15:     PORTDbits.RD6 = (command & 0b01000000) >> 6;
  5724     030A  0877               	movf	LCD_write_command@command,w
  5725     030B  00F5               	movwf	??_LCD_write_command
  5726     030C  3006               	movlw	6
  5727     030D                     u2055:
  5728     030D  1003               	clrc
  5729     030E  0CF5               	rrf	??_LCD_write_command,f
  5730     030F  3EFF               	addlw	-1
  5731     0310  1D03               	skipz
  5732     0311  2B0D               	goto	u2055
  5733     0312  0875               	movf	??_LCD_write_command,w
  5734     0313  3901               	andlw	1
  5735     0314  00F6               	movwf	??_LCD_write_command+1
  5736     0315  0EF6               	swapf	??_LCD_write_command+1,f
  5737     0316  0DF6               	rlf	??_LCD_write_command+1,f
  5738     0317  0DF6               	rlf	??_LCD_write_command+1,f
  5739     0318  0808               	movf	8,w	;volatile
  5740     0319  0676               	xorwf	??_LCD_write_command+1,w
  5741     031A  39BF               	andlw	-65
  5742     031B  0676               	xorwf	??_LCD_write_command+1,w
  5743     031C  0088               	movwf	8	;volatile
  5744                           
  5745                           ;LCD_write_command.c: 16:     PORTDbits.RD5 = (command & 0b00100000) >> 5;
  5746     031D  0877               	movf	LCD_write_command@command,w
  5747     031E  00F5               	movwf	??_LCD_write_command
  5748     031F  3005               	movlw	5
  5749     0320                     u2065:
  5750     0320  1003               	clrc
  5751     0321  0CF5               	rrf	??_LCD_write_command,f
  5752     0322  3EFF               	addlw	-1
  5753     0323  1D03               	skipz
  5754     0324  2B20               	goto	u2065
  5755     0325  0875               	movf	??_LCD_write_command,w
  5756     0326  3901               	andlw	1
  5757     0327  00F6               	movwf	??_LCD_write_command+1
  5758     0328  0EF6               	swapf	??_LCD_write_command+1,f
  5759     0329  0DF6               	rlf	??_LCD_write_command+1,f
  5760     032A  0808               	movf	8,w	;volatile
  5761     032B  0676               	xorwf	??_LCD_write_command+1,w
  5762     032C  39DF               	andlw	-33
  5763     032D  0676               	xorwf	??_LCD_write_command+1,w
  5764     032E  0088               	movwf	8	;volatile
  5765                           
  5766                           ;LCD_write_command.c: 17:     PORTDbits.RD4 = (command & 0b00010000) >> 4;
  5767     032F  0877               	movf	LCD_write_command@command,w
  5768     0330  00F5               	movwf	??_LCD_write_command
  5769     0331  3004               	movlw	4
  5770     0332                     u2075:
  5771     0332  1003               	clrc
  5772     0333  0CF5               	rrf	??_LCD_write_command,f
  5773     0334  3EFF               	addlw	-1
  5774     0335  1D03               	skipz
  5775     0336  2B32               	goto	u2075
  5776     0337  0875               	movf	??_LCD_write_command,w
  5777     0338  3901               	andlw	1
  5778     0339  00F6               	movwf	??_LCD_write_command+1
  5779     033A  0EF6               	swapf	??_LCD_write_command+1,f
  5780     033B  0808               	movf	8,w	;volatile
  5781     033C  0676               	xorwf	??_LCD_write_command+1,w
  5782     033D  39EF               	andlw	-17
  5783     033E  0676               	xorwf	??_LCD_write_command+1,w
  5784     033F  0088               	movwf	8	;volatile
  5785     0340                     l2346:
  5786                           
  5787                           ;LCD_write_command.c: 20:     LCD_pulse_clock();
  5788     0340  120A  158A  269B  120A  118A  	fcall	_LCD_pulse_clock
  5789     0345                     l2348:
  5790                           
  5791                           ;LCD_write_command.c: 23:     PORTDbits.RD7 = (command & 0b00001000) >> 3;
  5792     0345  0877               	movf	LCD_write_command@command,w
  5793     0346  00F5               	movwf	??_LCD_write_command
  5794     0347  3003               	movlw	3
  5795     0348                     u2085:
  5796     0348  1003               	clrc
  5797     0349  0CF5               	rrf	??_LCD_write_command,f
  5798     034A  3EFF               	addlw	-1
  5799     034B  1D03               	skipz
  5800     034C  2B48               	goto	u2085
  5801     034D  0875               	movf	??_LCD_write_command,w
  5802     034E  3901               	andlw	1
  5803     034F  00F6               	movwf	??_LCD_write_command+1
  5804     0350  0CF6               	rrf	??_LCD_write_command+1,f
  5805     0351  0CF6               	rrf	??_LCD_write_command+1,f
  5806     0352  1283               	bcf	3,5	;RP0=0, select bank0
  5807     0353  1303               	bcf	3,6	;RP1=0, select bank0
  5808     0354  0808               	movf	8,w	;volatile
  5809     0355  0676               	xorwf	??_LCD_write_command+1,w
  5810     0356  397F               	andlw	-129
  5811     0357  0676               	xorwf	??_LCD_write_command+1,w
  5812     0358  0088               	movwf	8	;volatile
  5813     0359                     l2350:
  5814                           
  5815                           ;LCD_write_command.c: 24:     PORTDbits.RD6 = (command & 0b00000100) >> 2;
  5816     0359  0877               	movf	LCD_write_command@command,w
  5817     035A  00F5               	movwf	??_LCD_write_command
  5818     035B  3002               	movlw	2
  5819     035C                     u2095:
  5820     035C  1003               	clrc
  5821     035D  0CF5               	rrf	??_LCD_write_command,f
  5822     035E  3EFF               	addlw	-1
  5823     035F  1D03               	skipz
  5824     0360  2B5C               	goto	u2095
  5825     0361  0875               	movf	??_LCD_write_command,w
  5826     0362  3901               	andlw	1
  5827     0363  00F6               	movwf	??_LCD_write_command+1
  5828     0364  0EF6               	swapf	??_LCD_write_command+1,f
  5829     0365  0DF6               	rlf	??_LCD_write_command+1,f
  5830     0366  0DF6               	rlf	??_LCD_write_command+1,f
  5831     0367  0808               	movf	8,w	;volatile
  5832     0368  0676               	xorwf	??_LCD_write_command+1,w
  5833     0369  39BF               	andlw	-65
  5834     036A  0676               	xorwf	??_LCD_write_command+1,w
  5835     036B  0088               	movwf	8	;volatile
  5836     036C                     l2352:
  5837                           
  5838                           ;LCD_write_command.c: 25:     PORTDbits.RD5 = (command & 0b00000010) >> 1;
  5839     036C  0877               	movf	LCD_write_command@command,w
  5840     036D  00F5               	movwf	??_LCD_write_command
  5841     036E  1003               	clrc
  5842     036F  0C75               	rrf	??_LCD_write_command,w
  5843     0370  3901               	andlw	1
  5844     0371  00F6               	movwf	??_LCD_write_command+1
  5845     0372  0EF6               	swapf	??_LCD_write_command+1,f
  5846     0373  0DF6               	rlf	??_LCD_write_command+1,f
  5847     0374  0808               	movf	8,w	;volatile
  5848     0375  0676               	xorwf	??_LCD_write_command+1,w
  5849     0376  39DF               	andlw	-33
  5850     0377  0676               	xorwf	??_LCD_write_command+1,w
  5851     0378  0088               	movwf	8	;volatile
  5852     0379                     l2354:
  5853                           
  5854                           ;LCD_write_command.c: 26:     PORTDbits.RD4 = (command & 0b00000001) ;
  5855     0379  0877               	movf	LCD_write_command@command,w
  5856     037A  3901               	andlw	1
  5857     037B  00F5               	movwf	??_LCD_write_command
  5858     037C  0EF5               	swapf	??_LCD_write_command,f
  5859     037D  0808               	movf	8,w	;volatile
  5860     037E  0675               	xorwf	??_LCD_write_command,w
  5861     037F  39EF               	andlw	-17
  5862     0380  0675               	xorwf	??_LCD_write_command,w
  5863     0381  0088               	movwf	8	;volatile
  5864     0382                     l2356:
  5865                           
  5866                           ;LCD_write_command.c: 29:     LCD_pulse_clock();
  5867     0382  120A  158A  269B  120A  118A  	fcall	_LCD_pulse_clock
  5868     0387                     l139:
  5869     0387  0008               	return
  5870     0388                     __end_of_LCD_write_command:
  5871                           
  5872                           	psect	text18
  5873     0E9B                     __ptext18:	
  5874 ;; *************** function _LCD_pulse_clock *****************
  5875 ;; Defined at:
  5876 ;;		line 8 in file "LCD_pulse_clock.c"
  5877 ;; Parameters:    Size  Location     Type
  5878 ;;		None
  5879 ;; Auto vars:     Size  Location     Type
  5880 ;;		None
  5881 ;; Return value:  Size  Location     Type
  5882 ;;                  1    wreg      void 
  5883 ;; Registers used:
  5884 ;;		wreg
  5885 ;; Tracked objects:
  5886 ;;		On entry : 0/0
  5887 ;;		On exit  : 0/0
  5888 ;;		Unchanged: 0/0
  5889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5890 ;;      Params:         0       0       0       0       0
  5891 ;;      Locals:         0       0       0       0       0
  5892 ;;      Temps:          1       0       0       0       0
  5893 ;;      Totals:         1       0       0       0       0
  5894 ;;Total ram usage:        1 bytes
  5895 ;; Hardware stack levels used: 1
  5896 ;; Hardware stack levels required when called: 1
  5897 ;; This function calls:
  5898 ;;		Nothing
  5899 ;; This function is called by:
  5900 ;;		_LCD_init
  5901 ;;		_LCD_write_command
  5902 ;;		_LCD_write_data
  5903 ;; This function uses a non-reentrant model
  5904 ;;
  5905                           
  5906     0E9B                     _LCD_pulse_clock:	
  5907                           ;psect for function _LCD_pulse_clock
  5908                           
  5909     0E9B                     l2336:	
  5910                           ;incstack = 0
  5911                           ; Regs used in _LCD_pulse_clock: [wreg]
  5912                           
  5913                           
  5914                           ;LCD_pulse_clock.c: 10:   PORTDbits.RD3 = 1;
  5915     0E9B  1283               	bcf	3,5	;RP0=0, select bank0
  5916     0E9C  1303               	bcf	3,6	;RP1=0, select bank0
  5917     0E9D  1588               	bsf	8,3	;volatile
  5918     0E9E                     l2338:
  5919                           
  5920                           ;LCD_pulse_clock.c: 11:   _delay((unsigned long)((40)*(4000000/4000000.0)));
  5921     0E9E  300D               	movlw	13
  5922     0E9F  00F4               	movwf	??_LCD_pulse_clock
  5923     0EA0                     u2787:
  5924     0EA0  0BF4               	decfsz	??_LCD_pulse_clock,f
  5925     0EA1  2EA0               	goto	u2787
  5926     0EA2                     l2340:
  5927                           
  5928                           ;LCD_pulse_clock.c: 12:   PORTDbits.RD3 = 0;
  5929     0EA2  1283               	bcf	3,5	;RP0=0, select bank0
  5930     0EA3  1303               	bcf	3,6	;RP1=0, select bank0
  5931     0EA4  1188               	bcf	8,3	;volatile
  5932     0EA5                     l110:
  5933     0EA5  0008               	return
  5934     0EA6                     __end_of_LCD_pulse_clock:
  5935                           
  5936                           	psect	text19
  5937     0EF5                     __ptext19:	
  5938 ;; *************** function _InitUART *****************
  5939 ;; Defined at:
  5940 ;;		line 10 in file "esp8266.c"
  5941 ;; Parameters:    Size  Location     Type
  5942 ;;		None
  5943 ;; Auto vars:     Size  Location     Type
  5944 ;;		None
  5945 ;; Return value:  Size  Location     Type
  5946 ;;                  1    wreg      void 
  5947 ;; Registers used:
  5948 ;;		status,2
  5949 ;; Tracked objects:
  5950 ;;		On entry : 0/0
  5951 ;;		On exit  : 0/0
  5952 ;;		Unchanged: 0/0
  5953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5954 ;;      Params:         0       0       0       0       0
  5955 ;;      Locals:         0       0       0       0       0
  5956 ;;      Temps:          0       0       0       0       0
  5957 ;;      Totals:         0       0       0       0       0
  5958 ;;Total ram usage:        0 bytes
  5959 ;; Hardware stack levels used: 1
  5960 ;; Hardware stack levels required when called: 1
  5961 ;; This function calls:
  5962 ;;		Nothing
  5963 ;; This function is called by:
  5964 ;;		_main
  5965 ;; This function uses a non-reentrant model
  5966 ;;
  5967                           
  5968     0EF5                     _InitUART:	
  5969                           ;psect for function _InitUART
  5970                           
  5971     0EF5                     l2022:	
  5972                           ;incstack = 0
  5973                           ; Regs used in _InitUART: [status,2]
  5974                           
  5975                           
  5976                           ;esp8266.c: 13:     TRISC6 = 0;
  5977     0EF5  1683               	bsf	3,5	;RP0=1, select bank1
  5978     0EF6  1303               	bcf	3,6	;RP1=0, select bank1
  5979     0EF7  1307               	bcf	7,6	;volatile
  5980                           
  5981                           ;esp8266.c: 14:     TRISC7 = 1;
  5982     0EF8  1787               	bsf	7,7	;volatile
  5983                           
  5984                           ;esp8266.c: 16:     TXSTAbits.BRGH = 1;
  5985     0EF9  1518               	bsf	24,2	;volatile
  5986     0EFA                     l2024:
  5987                           
  5988                           ;esp8266.c: 17:     SPBRG = 0;
  5989     0EFA  0199               	clrf	25	;volatile
  5990     0EFB                     l2026:
  5991                           
  5992                           ;esp8266.c: 19:     TXSTAbits.SYNC = 0;
  5993     0EFB  1218               	bcf	24,4	;volatile
  5994     0EFC                     l2028:
  5995                           
  5996                           ;esp8266.c: 20:     RCSTAbits.SPEN = 1;
  5997     0EFC  1283               	bcf	3,5	;RP0=0, select bank0
  5998     0EFD  1303               	bcf	3,6	;RP1=0, select bank0
  5999     0EFE  1798               	bsf	24,7	;volatile
  6000     0EFF                     l2030:
  6001                           
  6002                           ;esp8266.c: 22:     TXSTAbits.TXEN = 1;
  6003     0EFF  1683               	bsf	3,5	;RP0=1, select bank1
  6004     0F00  1303               	bcf	3,6	;RP1=0, select bank1
  6005     0F01  1698               	bsf	24,5	;volatile
  6006     0F02                     l2032:
  6007                           
  6008                           ;esp8266.c: 23:     TXSTAbits.TX9 = 0;
  6009     0F02  1318               	bcf	24,6	;volatile
  6010     0F03                     l2034:
  6011                           
  6012                           ;esp8266.c: 25:     RCSTAbits.CREN = 1;
  6013     0F03  1283               	bcf	3,5	;RP0=0, select bank0
  6014     0F04  1303               	bcf	3,6	;RP1=0, select bank0
  6015     0F05  1618               	bsf	24,4	;volatile
  6016     0F06                     l2036:
  6017                           
  6018                           ;esp8266.c: 27:     RCSTAbits.RX9 = 0;
  6019     0F06  1318               	bcf	24,6	;volatile
  6020     0F07                     l2038:
  6021                           
  6022                           ;esp8266.c: 30:     PIE1bits.RCIE = 1;
  6023     0F07  1683               	bsf	3,5	;RP0=1, select bank1
  6024     0F08  1303               	bcf	3,6	;RP1=0, select bank1
  6025     0F09  168C               	bsf	12,5	;volatile
  6026     0F0A                     l2040:
  6027                           
  6028                           ;esp8266.c: 31:     PEIE = 1;
  6029     0F0A  170B               	bsf	11,6	;volatile
  6030     0F0B                     l2042:
  6031                           
  6032                           ;esp8266.c: 32:     GIE = 1;
  6033     0F0B  178B               	bsf	11,7	;volatile
  6034     0F0C                     l312:
  6035     0F0C  0008               	return
  6036     0F0D                     __end_of_InitUART:
  6037                           
  6038                           	psect	text20
  6039     0F28                     __ptext20:	
  6040 ;; *************** function _ClearStringReceive *****************
  6041 ;; Defined at:
  6042 ;;		line 63 in file "main.c"
  6043 ;; Parameters:    Size  Location     Type
  6044 ;;		None
  6045 ;; Auto vars:     Size  Location     Type
  6046 ;;  i               2    3[COMMON] int 
  6047 ;; Return value:  Size  Location     Type
  6048 ;;                  1    wreg      void 
  6049 ;; Registers used:
  6050 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  6051 ;; Tracked objects:
  6052 ;;		On entry : 0/0
  6053 ;;		On exit  : 0/0
  6054 ;;		Unchanged: 0/0
  6055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6056 ;;      Params:         0       0       0       0       0
  6057 ;;      Locals:         2       0       0       0       0
  6058 ;;      Temps:          0       0       0       0       0
  6059 ;;      Totals:         2       0       0       0       0
  6060 ;;Total ram usage:        2 bytes
  6061 ;; Hardware stack levels used: 1
  6062 ;; Hardware stack levels required when called: 1
  6063 ;; This function calls:
  6064 ;;		Nothing
  6065 ;; This function is called by:
  6066 ;;		_main
  6067 ;; This function uses a non-reentrant model
  6068 ;;
  6069                           
  6070     0F28                     _ClearStringReceive:	
  6071                           ;psect for function _ClearStringReceive
  6072                           
  6073     0F28                     l2010:	
  6074                           ;incstack = 0
  6075                           ; Regs used in _ClearStringReceive: [wreg-fsr0h+status,2+status,0+btemp+1]
  6076                           
  6077                           
  6078                           ;main.c: 64:     pos = 0;
  6079     0F28  1283               	bcf	3,5	;RP0=0, select bank0
  6080     0F29  1303               	bcf	3,6	;RP1=0, select bank0
  6081     0F2A  01A6               	clrf	_pos
  6082     0F2B  01A7               	clrf	_pos+1
  6083                           
  6084                           ;main.c: 65:     for (int i = 0; i < 30; i++)
  6085     0F2C  01F4               	clrf	ClearStringReceive@i
  6086     0F2D  01F5               	clrf	ClearStringReceive@i+1
  6087     0F2E                     l2016:
  6088                           
  6089                           ;main.c: 66:         StringReceive[i] = '\0';
  6090     0F2E  0874               	movf	ClearStringReceive@i,w
  6091     0F2F  3E28               	addlw	(low (_StringReceive| 0))& (0+255)
  6092     0F30  0084               	movwf	4
  6093     0F31  1383               	bcf	3,7	;select IRP bank0
  6094     0F32  0180               	clrf	0
  6095     0F33                     l2018:
  6096     0F33  3001               	movlw	1
  6097     0F34  07F4               	addwf	ClearStringReceive@i,f
  6098     0F35  1803               	skipnc
  6099     0F36  0AF5               	incf	ClearStringReceive@i+1,f
  6100     0F37  3000               	movlw	0
  6101     0F38  07F5               	addwf	ClearStringReceive@i+1,f
  6102     0F39                     l2020:
  6103     0F39  0875               	movf	ClearStringReceive@i+1,w
  6104     0F3A  3A80               	xorlw	128
  6105     0F3B  00FF               	movwf	btemp+1
  6106     0F3C  3080               	movlw	128
  6107     0F3D  027F               	subwf	btemp+1,w
  6108     0F3E  1D03               	skipz
  6109     0F3F  2F42               	goto	u1745
  6110     0F40  301E               	movlw	30
  6111     0F41  0274               	subwf	ClearStringReceive@i,w
  6112     0F42                     u1745:
  6113     0F42  1C03               	skipc
  6114     0F43  2F45               	goto	u1741
  6115     0F44  2F46               	goto	u1740
  6116     0F45                     u1741:
  6117     0F45  2F2E               	goto	l2016
  6118     0F46                     u1740:
  6119     0F46                     l253:
  6120     0F46  0008               	return
  6121     0F47                     __end_of_ClearStringReceive:
  6122                           
  6123                           	psect	text21
  6124     00D5                     __ptext21:	
  6125 ;; *************** function _ISR *****************
  6126 ;; Defined at:
  6127 ;;		line 169 in file "main.c"
  6128 ;; Parameters:    Size  Location     Type
  6129 ;;		None
  6130 ;; Auto vars:     Size  Location     Type
  6131 ;;		None
  6132 ;; Return value:  Size  Location     Type
  6133 ;;                  1    wreg      void 
  6134 ;; Registers used:
  6135 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6136 ;; Tracked objects:
  6137 ;;		On entry : 0/0
  6138 ;;		On exit  : 0/0
  6139 ;;		Unchanged: 0/0
  6140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6141 ;;      Params:         0       0       0       0       0
  6142 ;;      Locals:         0       0       0       0       0
  6143 ;;      Temps:          3       0       0       0       0
  6144 ;;      Totals:         3       0       0       0       0
  6145 ;;Total ram usage:        3 bytes
  6146 ;; Hardware stack levels used: 1
  6147 ;; This function calls:
  6148 ;;		Nothing
  6149 ;; This function is called by:
  6150 ;;		Interrupt level 1
  6151 ;; This function uses a non-reentrant model
  6152 ;;
  6153                           
  6154     00D5                     _ISR:	
  6155                           ;psect for function _ISR
  6156                           
  6157     00D5                     i1l2326:
  6158                           
  6159                           ;main.c: 170:     if (PIR1bits.RCIF == 1 && pos < 28) {
  6160     00D5  1283               	bcf	3,5	;RP0=0, select bank0
  6161     00D6  1303               	bcf	3,6	;RP1=0, select bank0
  6162     00D7  1E8C               	btfss	12,5	;volatile
  6163     00D8  28DA               	goto	u202_21
  6164     00D9  28DB               	goto	u202_20
  6165     00DA                     u202_21:
  6166     00DA  28F1               	goto	i1l281
  6167     00DB                     u202_20:
  6168     00DB                     i1l2328:
  6169     00DB  3000               	movlw	0
  6170     00DC  0227               	subwf	_pos+1,w
  6171     00DD  301C               	movlw	28
  6172     00DE  1903               	skipnz
  6173     00DF  0226               	subwf	_pos,w
  6174     00E0  1803               	skipnc
  6175     00E1  28E3               	goto	u203_21
  6176     00E2  28E4               	goto	u203_20
  6177     00E3                     u203_21:
  6178     00E3  28F1               	goto	i1l281
  6179     00E4                     u203_20:
  6180     00E4                     i1l2330:
  6181                           
  6182                           ;main.c: 171:         StringReceive[pos] = RCREG;
  6183     00E4  0826               	movf	_pos,w
  6184     00E5  3E28               	addlw	(low (_StringReceive| 0))& (0+255)
  6185     00E6  0084               	movwf	4
  6186     00E7  081A               	movf	26,w	;volatile
  6187     00E8  1383               	bcf	3,7	;select IRP bank0
  6188     00E9  0080               	movwf	0
  6189     00EA                     i1l2332:
  6190                           
  6191                           ;main.c: 172:         pos++;
  6192     00EA  3001               	movlw	1
  6193     00EB  07A6               	addwf	_pos,f
  6194     00EC  1803               	skipnc
  6195     00ED  0AA7               	incf	_pos+1,f
  6196     00EE  3000               	movlw	0
  6197     00EF  07A7               	addwf	_pos+1,f
  6198     00F0                     i1l2334:
  6199                           
  6200                           ;main.c: 174:         RCIF = 0;
  6201     00F0  128C               	bcf	12,5	;volatile
  6202     00F1                     i1l281:
  6203     00F1  0873               	movf	??_ISR+2,w
  6204     00F2  008A               	movwf	10
  6205     00F3  0872               	movf	??_ISR+1,w
  6206     00F4  0084               	movwf	4
  6207     00F5  0E71               	swapf	??_ISR,w
  6208     00F6  0083               	movwf	3
  6209     00F7  0EFE               	swapf	btemp,f
  6210     00F8  0E7E               	swapf	btemp,w
  6211     00F9  0009               	retfie
  6212     00FA                     __end_of_ISR:
  6213     007E                     btemp	set	126	;btemp
  6214     007E                     wtemp0	set	126
  6215                           
  6216                           	psect	intentry
  6217     0004                     __pintentry:	
  6218                           ;incstack = 0
  6219                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0]
  6220                           
  6221     0004                     interrupt_function:
  6222     007E                     saved_w	set	btemp
  6223     0004  00FE               	movwf	btemp
  6224     0005  0E03               	swapf	3,w
  6225     0006  00F1               	movwf	??_ISR
  6226     0007  0804               	movf	4,w
  6227     0008  00F2               	movwf	??_ISR+1
  6228     0009  080A               	movf	10,w
  6229     000A  00F3               	movwf	??_ISR+2
  6230     000B  120A  118A  28D5   	ljmp	_ISR
  6231                           
  6232                           	psect	config
  6233                           
  6234                           ;Config register CONFIG1 @ 0x2007
  6235                           ;	Oscillator Selection bits
  6236                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  6237                           ;	Watchdog Timer Enable bit
  6238                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  6239                           ;	Power-up Timer Enable bit
  6240                           ;	PWRTE = OFF, PWRT disabled
  6241                           ;	RE3/MCLR pin function select bit
  6242                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  6243                           ;	Code Protection bit
  6244                           ;	CP = OFF, Program memory code protection is disabled
  6245                           ;	Data Code Protection bit
  6246                           ;	CPD = OFF, Data memory code protection is disabled
  6247                           ;	Brown Out Reset Selection bits
  6248                           ;	BOREN = ON, BOR enabled
  6249                           ;	Internal External Switchover bit
  6250                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  6251                           ;	Fail-Safe Clock Monitor Enabled bit
  6252                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  6253                           ;	Low Voltage Programming Enable bit
  6254                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  6255                           ;	In-Circuit Debugger Mode bit
  6256                           ;	DEBUG = 0x1, unprogrammed default
  6257     2007                     	org	8199
  6258     2007  23D2               	dw	9170
  6259                           
  6260                           ;Config register CONFIG2 @ 0x2008
  6261                           ;	Brown-out Reset Selection bit
  6262                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  6263                           ;	Flash Program Memory Self Write Enable bits
  6264                           ;	WRT = OFF, Write protection off
  6265     2008                     	org	8200
  6266     2008  3FFF               	dw	16383

Data Sizes:
    Strings     160
    Constant    17
    Data        63
    BSS         70
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           13      7      10
    BANK0            80     30      68
    BANK1            80      0      60
    BANK3            85      0      32
    BANK2            96      0       0

Pointer List with Targets:

    LCD_write_string@string	PTR unsigned char  size(2) Largest target is 30
		 -> STR_1(CODE[11]), STR_10(CODE[12]), STR_11(CODE[12]), STR_12(CODE[12]), 
		 -> STR_13(CODE[12]), STR_2(CODE[13]), STR_3(CODE[18]), STR_5(CODE[8]), 
		 -> STR_7(CODE[12]), STR_8(CODE[19]), StringReceive(BANK0[30]), 

    SendCommandAT@command	PTR unsigned char  size(1) Largest target is 20
		 -> STR_4(CODE[3]), STR_6(CODE[20]), 

    SendStringSerially@st	PTR unsigned char  size(1) Largest target is 20
		 -> STR_14(CODE[3]), STR_4(CODE[3]), STR_6(CODE[20]), 

    sp__strchr	PTR unsigned char  size(1) Largest target is 30
		 -> StringReceive(BANK0[30]), NULL(NULL[0]), 

    sp__strstr	PTR unsigned char  size(1) Largest target is 30
		 -> StringReceive(BANK0[30]), NULL(NULL[0]), 

    strchr@s	PTR const unsigned char  size(1) Largest target is 30
		 -> StringReceive(BANK0[30]), NULL(NULL[0]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_9(CODE[5]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_9(CODE[5]), 

    strncmp@l	PTR const unsigned char  size(1) Largest target is 30
		 -> StringReceive(BANK0[30]), NULL(NULL[0]), 

    strncmp@r	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_9(CODE[5]), 

    strstr@h	PTR const unsigned char  size(1) Largest target is 30
		 -> StringReceive(BANK0[30]), NULL(NULL[0]), 

    strstr@n	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_9(CODE[5]), 


Critical Paths under _main in COMMON

    _strstr->_strlen
    _strstr->_strncmp
    _SendCommandAT->_SendStringSerially
    _SendStringSerially->_SendByteSerially
    _LCD_write_variable->_LCD_write_data
    _LCD_write_string->_LCD_write_data
    _LCD_write_data->_LCD_pulse_clock
    _LCD_init->_LCD_write_command
    _LCD_clear->_LCD_write_command
    _LCD_cursor_set->_LCD_write_command
    _LCD_write_command->_LCD_pulse_clock

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_LCD_write_variable
    _strstr->_strncmp
    _LCD_write_variable->___aldiv
    _LCD_init->_LCD_clear

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0    8476
                                             25 BANK0      5     5      0
                 _ClearStringReceive
                           _InitUART
                          _LCD_clear
                     _LCD_cursor_set
                           _LCD_init
                   _LCD_write_string
                 _LCD_write_variable
                      _SendCommandAT
                             _strstr
 ---------------------------------------------------------------------------------
 (1) _strstr                                               6     5      1    1235
                                              2 BANK0      6     5      1
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (3) _strncmp                                              6     3      3     473
                                              3 COMMON     4     1      3
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _strlen                                               4     2      2     123
                                              3 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (2) _strchr                                               3     1      2     197
                                              3 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (1) _SendCommandAT                                        1     1      0     221
                                              5 COMMON     1     1      0
                 _SendStringSerially
 ---------------------------------------------------------------------------------
 (2) _SendStringSerially                                   1     1      0     133
                                              4 COMMON     1     1      0
                   _SendByteSerially
 ---------------------------------------------------------------------------------
 (3) _SendByteSerially                                     1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LCD_write_variable                                  11     6      5    2945
                                             14 BANK0     11     6      5
                     _LCD_write_data
                            ___aldiv
                            ___almod
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              13     5      8     316
                                              3 COMMON     1     1      0
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___almod                                             11     3      8     600
                                              3 COMMON     3     3      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     805
                                              3 COMMON     1     1      0
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) _LCD_write_string                                     3     1      2    1368
                                              0 BANK0      3     1      2
                     _LCD_write_data
 ---------------------------------------------------------------------------------
 (2) _LCD_write_data                                       3     3      0     248
                                              4 COMMON     3     3      0
                    _LCD_pulse_clock
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             2     2      0     496
                                              1 BANK0      2     2      0
                          _LCD_clear
                    _LCD_pulse_clock
                  _LCD_write_command
 ---------------------------------------------------------------------------------
 (2) _LCD_clear                                            1     1      0     248
                                              0 BANK0      1     1      0
                  _LCD_write_command
 ---------------------------------------------------------------------------------
 (1) _LCD_cursor_set                                       2     1      1    1765
                                              0 BANK0      2     1      1
                  _LCD_write_command
 ---------------------------------------------------------------------------------
 (2) _LCD_write_command                                    3     3      0     248
                                              4 COMMON     3     3      0
                    _LCD_pulse_clock
 ---------------------------------------------------------------------------------
 (3) _LCD_pulse_clock                                      1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _InitUART                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ClearStringReceive                                   2     2      0      68
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ClearStringReceive
   _InitUART
   _LCD_clear
     _LCD_write_command
       _LCD_pulse_clock
   _LCD_cursor_set
     _LCD_write_command
   _LCD_init
     _LCD_clear
     _LCD_pulse_clock
     _LCD_write_command
   _LCD_write_string
     _LCD_write_data
       _LCD_pulse_clock
   _LCD_write_variable
     _LCD_write_data
     ___aldiv
     ___almod
     ___lmul
   _SendCommandAT
     _SendStringSerially
       _SendByteSerially
   _strstr
     _strchr
     _strlen
     _strncmp

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               55      0      20       9       37.6%
BITBANK3            55      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      3C       7       75.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     1E      44       5       85.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               D      7       A       1       76.9%
BITCOMMON            D      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      AA      12        0.0%
ABS                  0      0      AA       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Thu Jan 25 04:12:24 2024

                              pc 0002                               l20 0EDD                               l84 0FC3  
                             fsr 0004                              l110 0EA5                              l103 026C  
                            l312 0F0C                              l146 041B                              l139 0387  
                            l171 0F92                              l315 0E92                              l331 0F65  
                            l253 0F46                              l261 069F                              l318 0E9A  
                            l334 0EB3                              l192 0590                              l514 0141  
                            l266 0710                              l267 0711                              l565 0430  
                            l575 04B8                              l578 0281                              l588 02F3  
                            l984 0EDF                              l993 0F27                              l986 0EF4  
                            l978 0194                              _GIE 005F                              l997 01F5  
                            _RB0 0030                              _RB1 0031                              _RB2 0032  
                            _RB3 0033                              _RB4 0034                              _RB5 0035  
                            _RB6 0036                              _RB7 0037                              _ISR 00D5  
                            _pos 0026                              fsr0 0004                              indf 0000  
                           ?_ISR 0071                             l2010 0F28                             l2020 0F39  
                           l2030 0EFF                             l2022 0EF5                             l2016 0F2E  
                           l2040 0F0A                             l2032 0F02                             l2024 0EFA  
                           l2018 0F33                             l2042 0F0B                             l2034 0F03  
                           l2026 0EFB                             l2036 0F06                             l2028 0EFC  
                           l2044 0EA7                             l2038 0F07                             l2400 0434  
                           l2410 0456                             l2402 043F                             l2340 0EA2  
                           l2500 024E                             l2420 0482                             l2412 045F  
                           l2404 0443                             l2350 0359                             l2342 02F5  
                           l2510 0261                             l2502 024F                             l2430 04A5  
                           l2422 0490                             l2414 0463                             l2406 044B  
                           l2336 0E9B                             l2352 036C                             l2344 02F8  
                           l2512 0267                             l2504 0250                             l2360 038C  
                           l2432 04B0                             l2424 0491                             l2416 0467  
                           l2408 0453                             l2520 04C0                             l2338 0E9E  
                           l2354 0379                             l2346 0340                             l2506 0255  
                           l2370 040D                             l2362 03D4                             l2426 049A  
                           l2418 0470                             l2530 04FF                             l2522 04DF  
                           l2450 01C9                             l2442 01A7                             l2356 0382  
                           l2348 0345                             l2460 0F9B                             l2508 025B  
                           l2372 0416                             l2364 03D9                             l2428 04A0  
                           l2380 00FA                             l2540 0535                             l2532 0521  
                           l2524 04E7                             l2516 04B9                             l2452 01CF  
                           l2444 01AF                             l2436 0196                             l2700 0618  
                           l2470 0FB3                             l2462 0F9F                             l2374 0EC7  
                           l2366 03ED                             l2358 0389                             l1830 0285  
                           l2390 0139                             l2382 0104                             l2550 0569  
                           l2542 053D                             l2526 04EB                             l2518 04BC  
                           l1734 0E92                             l2454 01E1                             l2438 01A4  
                           l2446 01B5                             l2710 0647                             l2702 061E  
                           l2472 0FB9                             l2464 0FA5                             l2376 0ECD  
                           l2480 0225                             l2368 0400                             l2560 0F6A  
                           l1840 02A8                             l1832 0290                             l1824 026D  
                           l2384 0108                             l2552 0587                             l2544 0540  
                           l2536 052A                             l1736 0E98                             l1760 0F48  
                           l2448 01BD                             l2720 0676                             l2712 064C  
                           l2704 0629                             l2474 0FBD                             l2466 0FA9  
                           l2458 0F96                             l2378 0ED7                             l2490 0230  
                           l2482 0228                             l2562 0F7B                             l2394 041C  
                           l1842 02AC                             l1834 0298                             l1850 02DB  
                           l1826 026E                             l2386 011F                             l2554 058B  
                           l2546 055F                             l2538 0530                             l1762 0F49  
                           l2570 0157                             l2730 0690                             l2722 0684  
                           l2714 0656                             l2706 0633                             l2468 0FAF  
                           l2492 023F                             l2484 0229                             l2476 01F6  
                           l2564 0F81                             l2396 041F                             l1852 02E0  
                           l1844 02BE                             l1836 029B                             l1828 0274  
                           l2388 0128                             l2548 0563                             l1764 0F55  
                           l1860 0F11                             l2580 018B                             l2572 0169  
                           l2740 06A3                             l2732 0691                             l2724 0689  
                           l2716 0661                             l2708 0639                             l2494 0245  
                           l2486 022A                             l2478 021A                             l2558 0F66  
                           l2398 0423                             l1854 02EB                             l1846 02CC  
                           l1838 02A4                             l1766 0F59                             l1862 0F15  
                           l2582 0193                             l2566 0145                             l2750 06D7  
                           l2742 06AB                             l2734 0695                             l2726 068C  
                           l2718 066B                             l2496 024A                             l2488 022B  
                           l1848 02D5                             l1864 0F21                             l2576 016D  
                           l2568 014A                             l2760 070C                             l2752 06E1  
                           l2744 06B3                             l2736 0699                             l2728 068F  
                           l2680 05B0                             l2498 024D                             l1890 0EDF  
                           l1858 0F0E                             l2578 0186                             l2770 073A  
                           l2762 0715                             l2754 06F0                             l2746 06BE  
                           l2738 069C                             l2690 05E6                             l2682 05BE  
                           l2674 0591                             l1892 0EE8                             l2780 0768  
                           l2772 0744                             l2764 071D                             l2756 06FB  
                           l2748 06C8                             l2692 05F0                             l2684 05C8  
                           l2676 059B                             l2790 079A                             l2782 0770  
                           l2774 0753                             l2766 0727                             l2758 06FE  
                           l2694 05FB                             l2686 05D3                             l2678 05A5  
                           l1896 0EEA                             l2792 079D                             l2784 077B  
                           l2768 072F                             l2696 0609                             l2688 05E1  
                           l1898 0EF3                             l2786 0789                             l2778 075F  
                           l2794 07A3                             l2698 060E                             l2796 07B3  
                           l2788 078C                             l2798 07C1                             STR_1 00B4  
                           STR_2 006B                             STR_3 0059                             STR_4 00CF  
                           STR_5 00BF                             STR_6 0032                             STR_7 0078  
                           STR_8 0046                             STR_9 00C7                             _CREN 00C4  
                           u1310 0F65                             u1311 0F64                             u2200 0139  
                           u1240 0E98                             u2105 038F                             u2201 0138  
                           u1241 0E97                             u2210 0423                             u2115 03A1  
                           u2211 0422                             u2300 04A5                             u2220 0434  
                           u2045 02FB                             u2125 03B4                             u2301 04A4  
                           u2221 0433                             u2230 0453                             u1510 02AC  
                           u2310 01A4                             u2055 030D                             u2135 03C6  
                           u2231 0452                             u1511 02AB                             u2311 01A3  
                           u1520 02BE                             u2160 0108                             u2400 04C0  
                           u2320 01BD                             u2065 0320                             u2145 03DC  
                           u1521 02BD                             u1505 029D                             u2161 0107  
                           u2401 04BF                             u2321 01BC                             u2250 0467  
                           u2410 04FE                             u2330 01C9                             u2075 0332  
                           u2155 03F0                             u2251 0466                             u2171 0111  
                           u2411 04FD                             u2331 01C8                             u1540 02DB  
                           u2172 0118                             u2420 0529                             u1620 0EE8  
                           u2340 01CF                             u2085 0348                             u2245 0458  
                           u1541 02DA                             u1525 02BA                             u2173 011F  
                           u2421 0528                             u2413 04FA                             u1621 0EE7  
                           u2341 01CE                             u2270 0482                             u1550 02E0  
                           u1470 0274                             u2430 0569                             u1630 0EF3  
                           u2350 01E1                             u2095 035C                             u2271 0481  
                           u1551 02DF                             u1535 02CD                             u1471 0273  
                           u2431 0568                             u1631 0EF2                             u2351 01E0  
                           u2360 0F9B                             u1480 0285                             u2440 0590  
                           u1560 0F21                             u2600 06A3                             u2361 0F9A  
                           u2265 0469                             u1481 0284                             u2185 0121  
                           u2441 058F                             u1561 0F20                             u2601 06A2  
                           u2370 0FA5                             u2450 0F92                             u2290 04A0  
                           u1490 0298                             u2610 06F0                             u2371 0FA4  
                           u2451 0F91                             u2291 049F                             u2275 047E  
                           u1491 0297                             u2195 0129                             u2611 06EF  
                           u1740 0F46                             u2380 0FAF                             u2460 014A  
                           u2620 0715                             u1741 0F45                             u2381 0FAE  
                           u2285 0492                             u2461 0149                             u2621 0714  
                           u2390 0FB9                             u2470 0169                             u2630 075E  
                           u2391 0FB8                             u2471 0168                             u2631 075D  
                           u2480 018B                             u2640 0768                             u1745 0F42  
                           u2481 018A                             u2641 0767                             u2490 0193  
                           u2491 0192                             u2707 0706                             u2717 0783  
                           u2727 0794                             u2737 07BB                             u2657 05B8  
                           u2747 0220                             u2667 05DB                             _PEIE 005E  
                           u2757 0236                             u2677 0603                             u2767 0243  
                           u2687 0641                             u2777 0ED1                             u2697 067E  
                           u2787 0EA0                             _RCIF 0065                             _OERR 00C1  
                           _TXIF 0064                             _main 0591                             _mode 0078  
                           btemp 007E                             start 000E                            ??_ISR 0071  
               __end_of_LCD_init 026D                  __end_of___aldiv 04B9                  __end_of___almod 02F4  
                          ?_main 0071                            STR_10 009C                            STR_11 0090  
                          STR_12 0084                            STR_13 00A8                            STR_14 00CC  
                          i1l281 00F1                            _RCREG 001A                            _SPBRG 0099  
                          _PORTB 0006                            _TRISB 0086                            _TXREG 0019  
            ___lmul@multiplicand 004A                    _StringDisplay 0190               _SendStringSerially 0F47  
                  _StringReceive 0028                       _KeyPadChar 0021                            pclath 000A  
                  main@adcResult 0062              ?_SendStringSerially 0071                            status 0003  
                          wtemp0 007E                  __end_of_strncmp 01F6                  __initialization 07CA  
                   __end_of_main 07CA                 __end_of_InitUART 0F0D             ??_SendStringSerially 0075  
              ?_LCD_write_string 0046                           ??_main 005F               ??_LCD_write_string 0078  
              __end_of_LCD_clear 0EDE                           _ADCON0 001F                           _ADCON1 009F  
                         _ADRESH 001E                           _ADRESL 009E                           i1l2330 00E4  
                         i1l2332 00EA                           i1l2334 00F0                           i1l2326 00D5  
                         i1l2328 00DB                           u202_20 00DB                           u202_21 00DA  
                         u203_20 00E4                           u203_21 00E3           LCD_write_string@string 0046  
                         _TRISA0 0428                           _TRISB0 0430                           _TRISB1 0431  
                         _TRISB2 0432                           _TRISB3 0433                           _TRISB4 0434  
                         _TRISB5 0435                           _TRISB6 0436                           _TRISB7 0437  
                         _TRISC6 043E                           _TRISC7 043F  LCD_write_variable@temp_variable 005B  
                         ___lmul 00FA                        ??___aldiv 0074                        ??___almod 0074  
                         _strchr 0EDE                           _strlen 0F0D                           _strstr 0142  
     __end_of_ClearStringReceive 0F47         __end_of_SendByteSerially 0E9B                     __pdataCOMMON 0078  
                         saved_w 007E                        ??_strncmp 0046          __end_of__initialization 07FC  
                      ?_LCD_init 0071                   __pcstackCOMMON 0071                     __pidataBANK1 0FC4  
                 _LCD_entry_mode 007A                _LCD_write_command 02F4             SendByteSerially@Byte 0074  
                 _LCD_cursor_set 0F93               ?_LCD_write_command 0071       __end_of_LCD_write_variable 0591  
            ??_LCD_write_command 0075                       __pbssBANK0 0020                       __pbssBANK3 0190  
                      ?_InitUART 0071                       ??_LCD_init 0047        __end_of_LCD_write_command 0388  
                     __pmaintext 0591                          ?___lmul 0046           __end_of_LCD_cursor_set 0FC4  
                     __pintentry 0004              ClearStringReceive@i 0074                   ___lmul@product 004E  
                        ?_strchr 0074                          ?_strlen 0074                          ?_strstr 0048  
                  _SendCommandAT 0EA6                       __stringtab 0011         LCD_write_command@command 0077  
                     ??_InitUART 0074             SendStringSerially@st 0075                          ___aldiv 041C  
                        ___almod 026D                  ?_LCD_cursor_set 0046                   _LCD_write_data 0388  
     LCD_write_variable@variable 0054                          __ptext1 0142                          __ptext2 0195  
                        __ptext3 0F0D                          __ptext4 0EDE                   ?_SendCommandAT 0071  
                        __ptext5 0EA6                          __ptext6 0F47                          __ptext7 0E91  
                        __ptext8 04B9                          __ptext9 00FA                 ___aldiv@dividend 004A  
                        clrloop0 0E8A                          _strncmp 0195                        _LCD_clear 0EC7  
           end_of_initialization 07FC             LCD_cursor_set@column 0046              _LCD_display_control 0079  
         __end_of_LCD_write_data 041C                        _RCSTAbits 0018                 ___aldiv@quotient 0050  
                        strchr@c 0074                          strchr@s 0076                          strlen@a 0076  
                        strlen@s 0077                          strstr@h 004D                          strstr@n 0048  
                      _PORTBbits 0006                        _PORTDbits 0008                ??_LCD_pulse_clock 0074  
              ?_SendByteSerially 0071                        _TRISDbits 0088               ??_SendByteSerially 0074  
                     ?_LCD_clear 0071               _ClearStringReceive 0F28                        _TXSTAbits 0098  
            ?_ClearStringReceive 0071                  ?_LCD_write_data 0071                   __end_of___lmul 0142  
                ??_SendCommandAT 0076                    __pidataCOMMON 00D2               __end_of_KeyPadChar 0032  
                 __end_of_strchr 0EF5                   __end_of_strlen 0F28                   __end_of_strstr 0195  
            start_initialization 07CA             ??_ClearStringReceive 0074                      __end_of_ISR 00FA  
             _LCD_write_variable 04B9              LCD_write_variable@i 0059              ?_LCD_write_variable 0054  
                       ??___lmul 0074                       init_fetch0 0EB4                      __pdataBANK1 00A0  
                       ??_strchr 0076                         ??_strlen 0076                         ??_strstr 0049  
           ??_LCD_write_variable 0078                        ___latbits 0002                        _adcResult 0024  
                  __pcstackBANK0 0046                      ??_LCD_clear 0046                 _LCD_write_string 0F66  
               ??_LCD_cursor_set 0078             SendCommandAT@command 0076                         ?___aldiv 0046  
                       ?___almod 0046                 ___almod@dividend 004A                        __pstrings 0011  
             LCD_write_data@data 0077                         ?_strncmp 0074                  ___aldiv@divisor 0046  
              interrupt_function 0004                  ___aldiv@counter 004E                         _LCD_init 01F6  
                      clear_ram0 0E89                         _PIE1bits 008C                         _PIR1bits 000C  
                       _GO_nDONE 00F9                  _LCD_pulse_clock 0E9B                      __stringbase 0020  
              ___lmul@multiplier 0046                         _InitUART 0EF5                 ??_LCD_write_data 0075  
                       _PassWord 00A0         LCD_write_variable@digits 005A                        modff@F522 0020  
                       _WifiName 00BE                LCD_cursor_set@row 0047       __end_of_SendStringSerially 0F66  
             __end_of__stringtab 0021                         __ptext10 026D                         __ptext11 041C  
                       __ptext20 0F28                         __ptext12 0F66                         __ptext21 00D5  
                       __ptext13 0388                         __ptext14 01F6                         __ptext15 0EC7  
                       __ptext16 0F93                         __ptext17 02F4                         __ptext18 0E9B  
                       __ptext19 0EF5                  ___almod@divisor 0046                  ___almod@counter 0075  
        __end_of_LCD_pulse_clock 0EA6         __end_of_LCD_write_string 0F93            __end_of_SendCommandAT 0EB4  
  LCD_write_variable@left_offset 0058                         init_ram0 0EB8                LCD_write_string@i 0048  
                       intlevel1 0000                        stringcode 001B                         strncmp@l 0077  
                       strncmp@n 0075                         strncmp@r 0074                         stringdir 001B  
                       stringtab 0011                     ___aldiv@sign 004F                         strstr@nl 004B  
                   ___almod@sign 0076                 ?_LCD_pulse_clock 0071                 _SendByteSerially 0E91  
