

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Wed Feb 07 00:22:06 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	intentry,global,class=CODE,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    39                           	dabs	1,0x7E,2
    40     0000                     
    41                           ; Generated 22/03/2023 GMT
    42                           ; 
    43                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution. Publication is not required when
    57                           ;        this file is used in an embedded application.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC16F887 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75     0000                     	;# 
    76     0001                     	;# 
    77     0002                     	;# 
    78     0003                     	;# 
    79     0004                     	;# 
    80     0005                     	;# 
    81     0006                     	;# 
    82     0007                     	;# 
    83     0008                     	;# 
    84     0009                     	;# 
    85     000A                     	;# 
    86     000B                     	;# 
    87     000C                     	;# 
    88     000D                     	;# 
    89     000E                     	;# 
    90     000E                     	;# 
    91     000F                     	;# 
    92     0010                     	;# 
    93     0011                     	;# 
    94     0012                     	;# 
    95     0013                     	;# 
    96     0014                     	;# 
    97     0015                     	;# 
    98     0015                     	;# 
    99     0016                     	;# 
   100     0017                     	;# 
   101     0018                     	;# 
   102     0019                     	;# 
   103     001A                     	;# 
   104     001B                     	;# 
   105     001B                     	;# 
   106     001C                     	;# 
   107     001D                     	;# 
   108     001E                     	;# 
   109     001F                     	;# 
   110     0081                     	;# 
   111     0085                     	;# 
   112     0086                     	;# 
   113     0087                     	;# 
   114     0088                     	;# 
   115     0089                     	;# 
   116     008C                     	;# 
   117     008D                     	;# 
   118     008E                     	;# 
   119     008F                     	;# 
   120     0090                     	;# 
   121     0091                     	;# 
   122     0092                     	;# 
   123     0093                     	;# 
   124     0093                     	;# 
   125     0093                     	;# 
   126     0094                     	;# 
   127     0095                     	;# 
   128     0096                     	;# 
   129     0097                     	;# 
   130     0098                     	;# 
   131     0099                     	;# 
   132     009A                     	;# 
   133     009B                     	;# 
   134     009C                     	;# 
   135     009D                     	;# 
   136     009E                     	;# 
   137     009F                     	;# 
   138     0105                     	;# 
   139     0107                     	;# 
   140     0108                     	;# 
   141     0109                     	;# 
   142     010C                     	;# 
   143     010C                     	;# 
   144     010D                     	;# 
   145     010E                     	;# 
   146     010F                     	;# 
   147     0185                     	;# 
   148     0187                     	;# 
   149     0188                     	;# 
   150     0189                     	;# 
   151     018C                     	;# 
   152     018D                     	;# 
   153     0000                     	;# 
   154     0001                     	;# 
   155     0002                     	;# 
   156     0003                     	;# 
   157     0004                     	;# 
   158     0005                     	;# 
   159     0006                     	;# 
   160     0007                     	;# 
   161     0008                     	;# 
   162     0009                     	;# 
   163     000A                     	;# 
   164     000B                     	;# 
   165     000C                     	;# 
   166     000D                     	;# 
   167     000E                     	;# 
   168     000E                     	;# 
   169     000F                     	;# 
   170     0010                     	;# 
   171     0011                     	;# 
   172     0012                     	;# 
   173     0013                     	;# 
   174     0014                     	;# 
   175     0015                     	;# 
   176     0015                     	;# 
   177     0016                     	;# 
   178     0017                     	;# 
   179     0018                     	;# 
   180     0019                     	;# 
   181     001A                     	;# 
   182     001B                     	;# 
   183     001B                     	;# 
   184     001C                     	;# 
   185     001D                     	;# 
   186     001E                     	;# 
   187     001F                     	;# 
   188     0081                     	;# 
   189     0085                     	;# 
   190     0086                     	;# 
   191     0087                     	;# 
   192     0088                     	;# 
   193     0089                     	;# 
   194     008C                     	;# 
   195     008D                     	;# 
   196     008E                     	;# 
   197     008F                     	;# 
   198     0090                     	;# 
   199     0091                     	;# 
   200     0092                     	;# 
   201     0093                     	;# 
   202     0093                     	;# 
   203     0093                     	;# 
   204     0094                     	;# 
   205     0095                     	;# 
   206     0096                     	;# 
   207     0097                     	;# 
   208     0098                     	;# 
   209     0099                     	;# 
   210     009A                     	;# 
   211     009B                     	;# 
   212     009C                     	;# 
   213     009D                     	;# 
   214     009E                     	;# 
   215     009F                     	;# 
   216     0105                     	;# 
   217     0107                     	;# 
   218     0108                     	;# 
   219     0109                     	;# 
   220     010C                     	;# 
   221     010C                     	;# 
   222     010D                     	;# 
   223     010E                     	;# 
   224     010F                     	;# 
   225     0185                     	;# 
   226     0187                     	;# 
   227     0188                     	;# 
   228     0189                     	;# 
   229     018C                     	;# 
   230     018D                     	;# 
   231     0000                     	;# 
   232     0001                     	;# 
   233     0002                     	;# 
   234     0003                     	;# 
   235     0004                     	;# 
   236     0005                     	;# 
   237     0006                     	;# 
   238     0007                     	;# 
   239     0008                     	;# 
   240     0009                     	;# 
   241     000A                     	;# 
   242     000B                     	;# 
   243     000C                     	;# 
   244     000D                     	;# 
   245     000E                     	;# 
   246     000E                     	;# 
   247     000F                     	;# 
   248     0010                     	;# 
   249     0011                     	;# 
   250     0012                     	;# 
   251     0013                     	;# 
   252     0014                     	;# 
   253     0015                     	;# 
   254     0015                     	;# 
   255     0016                     	;# 
   256     0017                     	;# 
   257     0018                     	;# 
   258     0019                     	;# 
   259     001A                     	;# 
   260     001B                     	;# 
   261     001B                     	;# 
   262     001C                     	;# 
   263     001D                     	;# 
   264     001E                     	;# 
   265     001F                     	;# 
   266     0081                     	;# 
   267     0085                     	;# 
   268     0086                     	;# 
   269     0087                     	;# 
   270     0088                     	;# 
   271     0089                     	;# 
   272     008C                     	;# 
   273     008D                     	;# 
   274     008E                     	;# 
   275     008F                     	;# 
   276     0090                     	;# 
   277     0091                     	;# 
   278     0092                     	;# 
   279     0093                     	;# 
   280     0093                     	;# 
   281     0093                     	;# 
   282     0094                     	;# 
   283     0095                     	;# 
   284     0096                     	;# 
   285     0097                     	;# 
   286     0098                     	;# 
   287     0099                     	;# 
   288     009A                     	;# 
   289     009B                     	;# 
   290     009C                     	;# 
   291     009D                     	;# 
   292     009E                     	;# 
   293     009F                     	;# 
   294     0105                     	;# 
   295     0107                     	;# 
   296     0108                     	;# 
   297     0109                     	;# 
   298     010C                     	;# 
   299     010C                     	;# 
   300     010D                     	;# 
   301     010E                     	;# 
   302     010F                     	;# 
   303     0185                     	;# 
   304     0187                     	;# 
   305     0188                     	;# 
   306     0189                     	;# 
   307     018C                     	;# 
   308     018D                     	;# 
   309     0000                     	;# 
   310     0001                     	;# 
   311     0002                     	;# 
   312     0003                     	;# 
   313     0004                     	;# 
   314     0005                     	;# 
   315     0006                     	;# 
   316     0007                     	;# 
   317     0008                     	;# 
   318     0009                     	;# 
   319     000A                     	;# 
   320     000B                     	;# 
   321     000C                     	;# 
   322     000D                     	;# 
   323     000E                     	;# 
   324     000E                     	;# 
   325     000F                     	;# 
   326     0010                     	;# 
   327     0011                     	;# 
   328     0012                     	;# 
   329     0013                     	;# 
   330     0014                     	;# 
   331     0015                     	;# 
   332     0015                     	;# 
   333     0016                     	;# 
   334     0017                     	;# 
   335     0018                     	;# 
   336     0019                     	;# 
   337     001A                     	;# 
   338     001B                     	;# 
   339     001B                     	;# 
   340     001C                     	;# 
   341     001D                     	;# 
   342     001E                     	;# 
   343     001F                     	;# 
   344     0081                     	;# 
   345     0085                     	;# 
   346     0086                     	;# 
   347     0087                     	;# 
   348     0088                     	;# 
   349     0089                     	;# 
   350     008C                     	;# 
   351     008D                     	;# 
   352     008E                     	;# 
   353     008F                     	;# 
   354     0090                     	;# 
   355     0091                     	;# 
   356     0092                     	;# 
   357     0093                     	;# 
   358     0093                     	;# 
   359     0093                     	;# 
   360     0094                     	;# 
   361     0095                     	;# 
   362     0096                     	;# 
   363     0097                     	;# 
   364     0098                     	;# 
   365     0099                     	;# 
   366     009A                     	;# 
   367     009B                     	;# 
   368     009C                     	;# 
   369     009D                     	;# 
   370     009E                     	;# 
   371     009F                     	;# 
   372     0105                     	;# 
   373     0107                     	;# 
   374     0108                     	;# 
   375     0109                     	;# 
   376     010C                     	;# 
   377     010C                     	;# 
   378     010D                     	;# 
   379     010E                     	;# 
   380     010F                     	;# 
   381     0185                     	;# 
   382     0187                     	;# 
   383     0188                     	;# 
   384     0189                     	;# 
   385     018C                     	;# 
   386     018D                     	;# 
   387     0000                     	;# 
   388     0001                     	;# 
   389     0002                     	;# 
   390     0003                     	;# 
   391     0004                     	;# 
   392     0005                     	;# 
   393     0006                     	;# 
   394     0007                     	;# 
   395     0008                     	;# 
   396     0009                     	;# 
   397     000A                     	;# 
   398     000B                     	;# 
   399     000C                     	;# 
   400     000D                     	;# 
   401     000E                     	;# 
   402     000E                     	;# 
   403     000F                     	;# 
   404     0010                     	;# 
   405     0011                     	;# 
   406     0012                     	;# 
   407     0013                     	;# 
   408     0014                     	;# 
   409     0015                     	;# 
   410     0015                     	;# 
   411     0016                     	;# 
   412     0017                     	;# 
   413     0018                     	;# 
   414     0019                     	;# 
   415     001A                     	;# 
   416     001B                     	;# 
   417     001B                     	;# 
   418     001C                     	;# 
   419     001D                     	;# 
   420     001E                     	;# 
   421     001F                     	;# 
   422     0081                     	;# 
   423     0085                     	;# 
   424     0086                     	;# 
   425     0087                     	;# 
   426     0088                     	;# 
   427     0089                     	;# 
   428     008C                     	;# 
   429     008D                     	;# 
   430     008E                     	;# 
   431     008F                     	;# 
   432     0090                     	;# 
   433     0091                     	;# 
   434     0092                     	;# 
   435     0093                     	;# 
   436     0093                     	;# 
   437     0093                     	;# 
   438     0094                     	;# 
   439     0095                     	;# 
   440     0096                     	;# 
   441     0097                     	;# 
   442     0098                     	;# 
   443     0099                     	;# 
   444     009A                     	;# 
   445     009B                     	;# 
   446     009C                     	;# 
   447     009D                     	;# 
   448     009E                     	;# 
   449     009F                     	;# 
   450     0105                     	;# 
   451     0107                     	;# 
   452     0108                     	;# 
   453     0109                     	;# 
   454     010C                     	;# 
   455     010C                     	;# 
   456     010D                     	;# 
   457     010E                     	;# 
   458     010F                     	;# 
   459     0185                     	;# 
   460     0187                     	;# 
   461     0188                     	;# 
   462     0189                     	;# 
   463     018C                     	;# 
   464     018D                     	;# 
   465     0000                     	;# 
   466     0001                     	;# 
   467     0002                     	;# 
   468     0003                     	;# 
   469     0004                     	;# 
   470     0005                     	;# 
   471     0006                     	;# 
   472     0007                     	;# 
   473     0008                     	;# 
   474     0009                     	;# 
   475     000A                     	;# 
   476     000B                     	;# 
   477     000C                     	;# 
   478     000D                     	;# 
   479     000E                     	;# 
   480     000E                     	;# 
   481     000F                     	;# 
   482     0010                     	;# 
   483     0011                     	;# 
   484     0012                     	;# 
   485     0013                     	;# 
   486     0014                     	;# 
   487     0015                     	;# 
   488     0015                     	;# 
   489     0016                     	;# 
   490     0017                     	;# 
   491     0018                     	;# 
   492     0019                     	;# 
   493     001A                     	;# 
   494     001B                     	;# 
   495     001B                     	;# 
   496     001C                     	;# 
   497     001D                     	;# 
   498     001E                     	;# 
   499     001F                     	;# 
   500     0081                     	;# 
   501     0085                     	;# 
   502     0086                     	;# 
   503     0087                     	;# 
   504     0088                     	;# 
   505     0089                     	;# 
   506     008C                     	;# 
   507     008D                     	;# 
   508     008E                     	;# 
   509     008F                     	;# 
   510     0090                     	;# 
   511     0091                     	;# 
   512     0092                     	;# 
   513     0093                     	;# 
   514     0093                     	;# 
   515     0093                     	;# 
   516     0094                     	;# 
   517     0095                     	;# 
   518     0096                     	;# 
   519     0097                     	;# 
   520     0098                     	;# 
   521     0099                     	;# 
   522     009A                     	;# 
   523     009B                     	;# 
   524     009C                     	;# 
   525     009D                     	;# 
   526     009E                     	;# 
   527     009F                     	;# 
   528     0105                     	;# 
   529     0107                     	;# 
   530     0108                     	;# 
   531     0109                     	;# 
   532     010C                     	;# 
   533     010C                     	;# 
   534     010D                     	;# 
   535     010E                     	;# 
   536     010F                     	;# 
   537     0185                     	;# 
   538     0187                     	;# 
   539     0188                     	;# 
   540     0189                     	;# 
   541     018C                     	;# 
   542     018D                     	;# 
   543     0000                     	;# 
   544     0001                     	;# 
   545     0002                     	;# 
   546     0003                     	;# 
   547     0004                     	;# 
   548     0005                     	;# 
   549     0006                     	;# 
   550     0007                     	;# 
   551     0008                     	;# 
   552     0009                     	;# 
   553     000A                     	;# 
   554     000B                     	;# 
   555     000C                     	;# 
   556     000D                     	;# 
   557     000E                     	;# 
   558     000E                     	;# 
   559     000F                     	;# 
   560     0010                     	;# 
   561     0011                     	;# 
   562     0012                     	;# 
   563     0013                     	;# 
   564     0014                     	;# 
   565     0015                     	;# 
   566     0015                     	;# 
   567     0016                     	;# 
   568     0017                     	;# 
   569     0018                     	;# 
   570     0019                     	;# 
   571     001A                     	;# 
   572     001B                     	;# 
   573     001B                     	;# 
   574     001C                     	;# 
   575     001D                     	;# 
   576     001E                     	;# 
   577     001F                     	;# 
   578     0081                     	;# 
   579     0085                     	;# 
   580     0086                     	;# 
   581     0087                     	;# 
   582     0088                     	;# 
   583     0089                     	;# 
   584     008C                     	;# 
   585     008D                     	;# 
   586     008E                     	;# 
   587     008F                     	;# 
   588     0090                     	;# 
   589     0091                     	;# 
   590     0092                     	;# 
   591     0093                     	;# 
   592     0093                     	;# 
   593     0093                     	;# 
   594     0094                     	;# 
   595     0095                     	;# 
   596     0096                     	;# 
   597     0097                     	;# 
   598     0098                     	;# 
   599     0099                     	;# 
   600     009A                     	;# 
   601     009B                     	;# 
   602     009C                     	;# 
   603     009D                     	;# 
   604     009E                     	;# 
   605     009F                     	;# 
   606     0105                     	;# 
   607     0107                     	;# 
   608     0108                     	;# 
   609     0109                     	;# 
   610     010C                     	;# 
   611     010C                     	;# 
   612     010D                     	;# 
   613     010E                     	;# 
   614     010F                     	;# 
   615     0185                     	;# 
   616     0187                     	;# 
   617     0188                     	;# 
   618     0189                     	;# 
   619     018C                     	;# 
   620     018D                     	;# 
   621     0000                     	;# 
   622     0001                     	;# 
   623     0002                     	;# 
   624     0003                     	;# 
   625     0004                     	;# 
   626     0005                     	;# 
   627     0006                     	;# 
   628     0007                     	;# 
   629     0008                     	;# 
   630     0009                     	;# 
   631     000A                     	;# 
   632     000B                     	;# 
   633     000C                     	;# 
   634     000D                     	;# 
   635     000E                     	;# 
   636     000E                     	;# 
   637     000F                     	;# 
   638     0010                     	;# 
   639     0011                     	;# 
   640     0012                     	;# 
   641     0013                     	;# 
   642     0014                     	;# 
   643     0015                     	;# 
   644     0015                     	;# 
   645     0016                     	;# 
   646     0017                     	;# 
   647     0018                     	;# 
   648     0019                     	;# 
   649     001A                     	;# 
   650     001B                     	;# 
   651     001B                     	;# 
   652     001C                     	;# 
   653     001D                     	;# 
   654     001E                     	;# 
   655     001F                     	;# 
   656     0081                     	;# 
   657     0085                     	;# 
   658     0086                     	;# 
   659     0087                     	;# 
   660     0088                     	;# 
   661     0089                     	;# 
   662     008C                     	;# 
   663     008D                     	;# 
   664     008E                     	;# 
   665     008F                     	;# 
   666     0090                     	;# 
   667     0091                     	;# 
   668     0092                     	;# 
   669     0093                     	;# 
   670     0093                     	;# 
   671     0093                     	;# 
   672     0094                     	;# 
   673     0095                     	;# 
   674     0096                     	;# 
   675     0097                     	;# 
   676     0098                     	;# 
   677     0099                     	;# 
   678     009A                     	;# 
   679     009B                     	;# 
   680     009C                     	;# 
   681     009D                     	;# 
   682     009E                     	;# 
   683     009F                     	;# 
   684     0105                     	;# 
   685     0107                     	;# 
   686     0108                     	;# 
   687     0109                     	;# 
   688     010C                     	;# 
   689     010C                     	;# 
   690     010D                     	;# 
   691     010E                     	;# 
   692     010F                     	;# 
   693     0185                     	;# 
   694     0187                     	;# 
   695     0188                     	;# 
   696     0189                     	;# 
   697     018C                     	;# 
   698     018D                     	;# 
   699     0000                     	;# 
   700     0001                     	;# 
   701     0002                     	;# 
   702     0003                     	;# 
   703     0004                     	;# 
   704     0005                     	;# 
   705     0006                     	;# 
   706     0007                     	;# 
   707     0008                     	;# 
   708     0009                     	;# 
   709     000A                     	;# 
   710     000B                     	;# 
   711     000C                     	;# 
   712     000D                     	;# 
   713     000E                     	;# 
   714     000E                     	;# 
   715     000F                     	;# 
   716     0010                     	;# 
   717     0011                     	;# 
   718     0012                     	;# 
   719     0013                     	;# 
   720     0014                     	;# 
   721     0015                     	;# 
   722     0015                     	;# 
   723     0016                     	;# 
   724     0017                     	;# 
   725     0018                     	;# 
   726     0019                     	;# 
   727     001A                     	;# 
   728     001B                     	;# 
   729     001B                     	;# 
   730     001C                     	;# 
   731     001D                     	;# 
   732     001E                     	;# 
   733     001F                     	;# 
   734     0081                     	;# 
   735     0085                     	;# 
   736     0086                     	;# 
   737     0087                     	;# 
   738     0088                     	;# 
   739     0089                     	;# 
   740     008C                     	;# 
   741     008D                     	;# 
   742     008E                     	;# 
   743     008F                     	;# 
   744     0090                     	;# 
   745     0091                     	;# 
   746     0092                     	;# 
   747     0093                     	;# 
   748     0093                     	;# 
   749     0093                     	;# 
   750     0094                     	;# 
   751     0095                     	;# 
   752     0096                     	;# 
   753     0097                     	;# 
   754     0098                     	;# 
   755     0099                     	;# 
   756     009A                     	;# 
   757     009B                     	;# 
   758     009C                     	;# 
   759     009D                     	;# 
   760     009E                     	;# 
   761     009F                     	;# 
   762     0105                     	;# 
   763     0107                     	;# 
   764     0108                     	;# 
   765     0109                     	;# 
   766     010C                     	;# 
   767     010C                     	;# 
   768     010D                     	;# 
   769     010E                     	;# 
   770     010F                     	;# 
   771     0185                     	;# 
   772     0187                     	;# 
   773     0188                     	;# 
   774     0189                     	;# 
   775     018C                     	;# 
   776     018D                     	;# 
   777     0000                     	;# 
   778     0001                     	;# 
   779     0002                     	;# 
   780     0003                     	;# 
   781     0004                     	;# 
   782     0005                     	;# 
   783     0006                     	;# 
   784     0007                     	;# 
   785     0008                     	;# 
   786     0009                     	;# 
   787     000A                     	;# 
   788     000B                     	;# 
   789     000C                     	;# 
   790     000D                     	;# 
   791     000E                     	;# 
   792     000E                     	;# 
   793     000F                     	;# 
   794     0010                     	;# 
   795     0011                     	;# 
   796     0012                     	;# 
   797     0013                     	;# 
   798     0014                     	;# 
   799     0015                     	;# 
   800     0015                     	;# 
   801     0016                     	;# 
   802     0017                     	;# 
   803     0018                     	;# 
   804     0019                     	;# 
   805     001A                     	;# 
   806     001B                     	;# 
   807     001B                     	;# 
   808     001C                     	;# 
   809     001D                     	;# 
   810     001E                     	;# 
   811     001F                     	;# 
   812     0081                     	;# 
   813     0085                     	;# 
   814     0086                     	;# 
   815     0087                     	;# 
   816     0088                     	;# 
   817     0089                     	;# 
   818     008C                     	;# 
   819     008D                     	;# 
   820     008E                     	;# 
   821     008F                     	;# 
   822     0090                     	;# 
   823     0091                     	;# 
   824     0092                     	;# 
   825     0093                     	;# 
   826     0093                     	;# 
   827     0093                     	;# 
   828     0094                     	;# 
   829     0095                     	;# 
   830     0096                     	;# 
   831     0097                     	;# 
   832     0098                     	;# 
   833     0099                     	;# 
   834     009A                     	;# 
   835     009B                     	;# 
   836     009C                     	;# 
   837     009D                     	;# 
   838     009E                     	;# 
   839     009F                     	;# 
   840     0105                     	;# 
   841     0107                     	;# 
   842     0108                     	;# 
   843     0109                     	;# 
   844     010C                     	;# 
   845     010C                     	;# 
   846     010D                     	;# 
   847     010E                     	;# 
   848     010F                     	;# 
   849     0185                     	;# 
   850     0187                     	;# 
   851     0188                     	;# 
   852     0189                     	;# 
   853     018C                     	;# 
   854     018D                     	;# 
   855     0000                     	;# 
   856     0001                     	;# 
   857     0002                     	;# 
   858     0003                     	;# 
   859     0004                     	;# 
   860     0005                     	;# 
   861     0006                     	;# 
   862     0007                     	;# 
   863     0008                     	;# 
   864     0009                     	;# 
   865     000A                     	;# 
   866     000B                     	;# 
   867     000C                     	;# 
   868     000D                     	;# 
   869     000E                     	;# 
   870     000E                     	;# 
   871     000F                     	;# 
   872     0010                     	;# 
   873     0011                     	;# 
   874     0012                     	;# 
   875     0013                     	;# 
   876     0014                     	;# 
   877     0015                     	;# 
   878     0015                     	;# 
   879     0016                     	;# 
   880     0017                     	;# 
   881     0018                     	;# 
   882     0019                     	;# 
   883     001A                     	;# 
   884     001B                     	;# 
   885     001B                     	;# 
   886     001C                     	;# 
   887     001D                     	;# 
   888     001E                     	;# 
   889     001F                     	;# 
   890     0081                     	;# 
   891     0085                     	;# 
   892     0086                     	;# 
   893     0087                     	;# 
   894     0088                     	;# 
   895     0089                     	;# 
   896     008C                     	;# 
   897     008D                     	;# 
   898     008E                     	;# 
   899     008F                     	;# 
   900     0090                     	;# 
   901     0091                     	;# 
   902     0092                     	;# 
   903     0093                     	;# 
   904     0093                     	;# 
   905     0093                     	;# 
   906     0094                     	;# 
   907     0095                     	;# 
   908     0096                     	;# 
   909     0097                     	;# 
   910     0098                     	;# 
   911     0099                     	;# 
   912     009A                     	;# 
   913     009B                     	;# 
   914     009C                     	;# 
   915     009D                     	;# 
   916     009E                     	;# 
   917     009F                     	;# 
   918     0105                     	;# 
   919     0107                     	;# 
   920     0108                     	;# 
   921     0109                     	;# 
   922     010C                     	;# 
   923     010C                     	;# 
   924     010D                     	;# 
   925     010E                     	;# 
   926     010F                     	;# 
   927     0185                     	;# 
   928     0187                     	;# 
   929     0188                     	;# 
   930     0189                     	;# 
   931     018C                     	;# 
   932     018D                     	;# 
   933     0000                     	;# 
   934     0001                     	;# 
   935     0002                     	;# 
   936     0003                     	;# 
   937     0004                     	;# 
   938     0005                     	;# 
   939     0006                     	;# 
   940     0007                     	;# 
   941     0008                     	;# 
   942     0009                     	;# 
   943     000A                     	;# 
   944     000B                     	;# 
   945     000C                     	;# 
   946     000D                     	;# 
   947     000E                     	;# 
   948     000E                     	;# 
   949     000F                     	;# 
   950     0010                     	;# 
   951     0011                     	;# 
   952     0012                     	;# 
   953     0013                     	;# 
   954     0014                     	;# 
   955     0015                     	;# 
   956     0015                     	;# 
   957     0016                     	;# 
   958     0017                     	;# 
   959     0018                     	;# 
   960     0019                     	;# 
   961     001A                     	;# 
   962     001B                     	;# 
   963     001B                     	;# 
   964     001C                     	;# 
   965     001D                     	;# 
   966     001E                     	;# 
   967     001F                     	;# 
   968     0081                     	;# 
   969     0085                     	;# 
   970     0086                     	;# 
   971     0087                     	;# 
   972     0088                     	;# 
   973     0089                     	;# 
   974     008C                     	;# 
   975     008D                     	;# 
   976     008E                     	;# 
   977     008F                     	;# 
   978     0090                     	;# 
   979     0091                     	;# 
   980     0092                     	;# 
   981     0093                     	;# 
   982     0093                     	;# 
   983     0093                     	;# 
   984     0094                     	;# 
   985     0095                     	;# 
   986     0096                     	;# 
   987     0097                     	;# 
   988     0098                     	;# 
   989     0099                     	;# 
   990     009A                     	;# 
   991     009B                     	;# 
   992     009C                     	;# 
   993     009D                     	;# 
   994     009E                     	;# 
   995     009F                     	;# 
   996     0105                     	;# 
   997     0107                     	;# 
   998     0108                     	;# 
   999     0109                     	;# 
  1000     010C                     	;# 
  1001     010C                     	;# 
  1002     010D                     	;# 
  1003     010E                     	;# 
  1004     010F                     	;# 
  1005     0185                     	;# 
  1006     0187                     	;# 
  1007     0188                     	;# 
  1008     0189                     	;# 
  1009     018C                     	;# 
  1010     018D                     	;# 
  1011     0000                     	;# 
  1012     0001                     	;# 
  1013     0002                     	;# 
  1014     0003                     	;# 
  1015     0004                     	;# 
  1016     0005                     	;# 
  1017     0006                     	;# 
  1018     0007                     	;# 
  1019     0008                     	;# 
  1020     0009                     	;# 
  1021     000A                     	;# 
  1022     000B                     	;# 
  1023     000C                     	;# 
  1024     000D                     	;# 
  1025     000E                     	;# 
  1026     000E                     	;# 
  1027     000F                     	;# 
  1028     0010                     	;# 
  1029     0011                     	;# 
  1030     0012                     	;# 
  1031     0013                     	;# 
  1032     0014                     	;# 
  1033     0015                     	;# 
  1034     0015                     	;# 
  1035     0016                     	;# 
  1036     0017                     	;# 
  1037     0018                     	;# 
  1038     0019                     	;# 
  1039     001A                     	;# 
  1040     001B                     	;# 
  1041     001B                     	;# 
  1042     001C                     	;# 
  1043     001D                     	;# 
  1044     001E                     	;# 
  1045     001F                     	;# 
  1046     0081                     	;# 
  1047     0085                     	;# 
  1048     0086                     	;# 
  1049     0087                     	;# 
  1050     0088                     	;# 
  1051     0089                     	;# 
  1052     008C                     	;# 
  1053     008D                     	;# 
  1054     008E                     	;# 
  1055     008F                     	;# 
  1056     0090                     	;# 
  1057     0091                     	;# 
  1058     0092                     	;# 
  1059     0093                     	;# 
  1060     0093                     	;# 
  1061     0093                     	;# 
  1062     0094                     	;# 
  1063     0095                     	;# 
  1064     0096                     	;# 
  1065     0097                     	;# 
  1066     0098                     	;# 
  1067     0099                     	;# 
  1068     009A                     	;# 
  1069     009B                     	;# 
  1070     009C                     	;# 
  1071     009D                     	;# 
  1072     009E                     	;# 
  1073     009F                     	;# 
  1074     0105                     	;# 
  1075     0107                     	;# 
  1076     0108                     	;# 
  1077     0109                     	;# 
  1078     010C                     	;# 
  1079     010C                     	;# 
  1080     010D                     	;# 
  1081     010E                     	;# 
  1082     010F                     	;# 
  1083     0185                     	;# 
  1084     0187                     	;# 
  1085     0188                     	;# 
  1086     0189                     	;# 
  1087     018C                     	;# 
  1088     018D                     	;# 
  1089     0000                     	;# 
  1090     0001                     	;# 
  1091     0002                     	;# 
  1092     0003                     	;# 
  1093     0004                     	;# 
  1094     0005                     	;# 
  1095     0006                     	;# 
  1096     0007                     	;# 
  1097     0008                     	;# 
  1098     0009                     	;# 
  1099     000A                     	;# 
  1100     000B                     	;# 
  1101     000C                     	;# 
  1102     000D                     	;# 
  1103     000E                     	;# 
  1104     000E                     	;# 
  1105     000F                     	;# 
  1106     0010                     	;# 
  1107     0011                     	;# 
  1108     0012                     	;# 
  1109     0013                     	;# 
  1110     0014                     	;# 
  1111     0015                     	;# 
  1112     0015                     	;# 
  1113     0016                     	;# 
  1114     0017                     	;# 
  1115     0018                     	;# 
  1116     0019                     	;# 
  1117     001A                     	;# 
  1118     001B                     	;# 
  1119     001B                     	;# 
  1120     001C                     	;# 
  1121     001D                     	;# 
  1122     001E                     	;# 
  1123     001F                     	;# 
  1124     0081                     	;# 
  1125     0085                     	;# 
  1126     0086                     	;# 
  1127     0087                     	;# 
  1128     0088                     	;# 
  1129     0089                     	;# 
  1130     008C                     	;# 
  1131     008D                     	;# 
  1132     008E                     	;# 
  1133     008F                     	;# 
  1134     0090                     	;# 
  1135     0091                     	;# 
  1136     0092                     	;# 
  1137     0093                     	;# 
  1138     0093                     	;# 
  1139     0093                     	;# 
  1140     0094                     	;# 
  1141     0095                     	;# 
  1142     0096                     	;# 
  1143     0097                     	;# 
  1144     0098                     	;# 
  1145     0099                     	;# 
  1146     009A                     	;# 
  1147     009B                     	;# 
  1148     009C                     	;# 
  1149     009D                     	;# 
  1150     009E                     	;# 
  1151     009F                     	;# 
  1152     0105                     	;# 
  1153     0107                     	;# 
  1154     0108                     	;# 
  1155     0109                     	;# 
  1156     010C                     	;# 
  1157     010C                     	;# 
  1158     010D                     	;# 
  1159     010E                     	;# 
  1160     010F                     	;# 
  1161     0185                     	;# 
  1162     0187                     	;# 
  1163     0188                     	;# 
  1164     0189                     	;# 
  1165     018C                     	;# 
  1166     018D                     	;# 
  1167     0000                     	;# 
  1168     0001                     	;# 
  1169     0002                     	;# 
  1170     0003                     	;# 
  1171     0004                     	;# 
  1172     0005                     	;# 
  1173     0006                     	;# 
  1174     0007                     	;# 
  1175     0008                     	;# 
  1176     0009                     	;# 
  1177     000A                     	;# 
  1178     000B                     	;# 
  1179     000C                     	;# 
  1180     000D                     	;# 
  1181     000E                     	;# 
  1182     000E                     	;# 
  1183     000F                     	;# 
  1184     0010                     	;# 
  1185     0011                     	;# 
  1186     0012                     	;# 
  1187     0013                     	;# 
  1188     0014                     	;# 
  1189     0015                     	;# 
  1190     0015                     	;# 
  1191     0016                     	;# 
  1192     0017                     	;# 
  1193     0018                     	;# 
  1194     0019                     	;# 
  1195     001A                     	;# 
  1196     001B                     	;# 
  1197     001B                     	;# 
  1198     001C                     	;# 
  1199     001D                     	;# 
  1200     001E                     	;# 
  1201     001F                     	;# 
  1202     0081                     	;# 
  1203     0085                     	;# 
  1204     0086                     	;# 
  1205     0087                     	;# 
  1206     0088                     	;# 
  1207     0089                     	;# 
  1208     008C                     	;# 
  1209     008D                     	;# 
  1210     008E                     	;# 
  1211     008F                     	;# 
  1212     0090                     	;# 
  1213     0091                     	;# 
  1214     0092                     	;# 
  1215     0093                     	;# 
  1216     0093                     	;# 
  1217     0093                     	;# 
  1218     0094                     	;# 
  1219     0095                     	;# 
  1220     0096                     	;# 
  1221     0097                     	;# 
  1222     0098                     	;# 
  1223     0099                     	;# 
  1224     009A                     	;# 
  1225     009B                     	;# 
  1226     009C                     	;# 
  1227     009D                     	;# 
  1228     009E                     	;# 
  1229     009F                     	;# 
  1230     0105                     	;# 
  1231     0107                     	;# 
  1232     0108                     	;# 
  1233     0109                     	;# 
  1234     010C                     	;# 
  1235     010C                     	;# 
  1236     010D                     	;# 
  1237     010E                     	;# 
  1238     010F                     	;# 
  1239     0185                     	;# 
  1240     0187                     	;# 
  1241     0188                     	;# 
  1242     0189                     	;# 
  1243     018C                     	;# 
  1244     018D                     	;# 
  1245     0000                     	;# 
  1246     0001                     	;# 
  1247     0002                     	;# 
  1248     0003                     	;# 
  1249     0004                     	;# 
  1250     0005                     	;# 
  1251     0006                     	;# 
  1252     0007                     	;# 
  1253     0008                     	;# 
  1254     0009                     	;# 
  1255     000A                     	;# 
  1256     000B                     	;# 
  1257     000C                     	;# 
  1258     000D                     	;# 
  1259     000E                     	;# 
  1260     000E                     	;# 
  1261     000F                     	;# 
  1262     0010                     	;# 
  1263     0011                     	;# 
  1264     0012                     	;# 
  1265     0013                     	;# 
  1266     0014                     	;# 
  1267     0015                     	;# 
  1268     0015                     	;# 
  1269     0016                     	;# 
  1270     0017                     	;# 
  1271     0018                     	;# 
  1272     0019                     	;# 
  1273     001A                     	;# 
  1274     001B                     	;# 
  1275     001B                     	;# 
  1276     001C                     	;# 
  1277     001D                     	;# 
  1278     001E                     	;# 
  1279     001F                     	;# 
  1280     0081                     	;# 
  1281     0085                     	;# 
  1282     0086                     	;# 
  1283     0087                     	;# 
  1284     0088                     	;# 
  1285     0089                     	;# 
  1286     008C                     	;# 
  1287     008D                     	;# 
  1288     008E                     	;# 
  1289     008F                     	;# 
  1290     0090                     	;# 
  1291     0091                     	;# 
  1292     0092                     	;# 
  1293     0093                     	;# 
  1294     0093                     	;# 
  1295     0093                     	;# 
  1296     0094                     	;# 
  1297     0095                     	;# 
  1298     0096                     	;# 
  1299     0097                     	;# 
  1300     0098                     	;# 
  1301     0099                     	;# 
  1302     009A                     	;# 
  1303     009B                     	;# 
  1304     009C                     	;# 
  1305     009D                     	;# 
  1306     009E                     	;# 
  1307     009F                     	;# 
  1308     0105                     	;# 
  1309     0107                     	;# 
  1310     0108                     	;# 
  1311     0109                     	;# 
  1312     010C                     	;# 
  1313     010C                     	;# 
  1314     010D                     	;# 
  1315     010E                     	;# 
  1316     010F                     	;# 
  1317     0185                     	;# 
  1318     0187                     	;# 
  1319     0188                     	;# 
  1320     0189                     	;# 
  1321     018C                     	;# 
  1322     018D                     	;# 
  1323     0000                     	;# 
  1324     0001                     	;# 
  1325     0002                     	;# 
  1326     0003                     	;# 
  1327     0004                     	;# 
  1328     0005                     	;# 
  1329     0006                     	;# 
  1330     0007                     	;# 
  1331     0008                     	;# 
  1332     0009                     	;# 
  1333     000A                     	;# 
  1334     000B                     	;# 
  1335     000C                     	;# 
  1336     000D                     	;# 
  1337     000E                     	;# 
  1338     000E                     	;# 
  1339     000F                     	;# 
  1340     0010                     	;# 
  1341     0011                     	;# 
  1342     0012                     	;# 
  1343     0013                     	;# 
  1344     0014                     	;# 
  1345     0015                     	;# 
  1346     0015                     	;# 
  1347     0016                     	;# 
  1348     0017                     	;# 
  1349     0018                     	;# 
  1350     0019                     	;# 
  1351     001A                     	;# 
  1352     001B                     	;# 
  1353     001B                     	;# 
  1354     001C                     	;# 
  1355     001D                     	;# 
  1356     001E                     	;# 
  1357     001F                     	;# 
  1358     0081                     	;# 
  1359     0085                     	;# 
  1360     0086                     	;# 
  1361     0087                     	;# 
  1362     0088                     	;# 
  1363     0089                     	;# 
  1364     008C                     	;# 
  1365     008D                     	;# 
  1366     008E                     	;# 
  1367     008F                     	;# 
  1368     0090                     	;# 
  1369     0091                     	;# 
  1370     0092                     	;# 
  1371     0093                     	;# 
  1372     0093                     	;# 
  1373     0093                     	;# 
  1374     0094                     	;# 
  1375     0095                     	;# 
  1376     0096                     	;# 
  1377     0097                     	;# 
  1378     0098                     	;# 
  1379     0099                     	;# 
  1380     009A                     	;# 
  1381     009B                     	;# 
  1382     009C                     	;# 
  1383     009D                     	;# 
  1384     009E                     	;# 
  1385     009F                     	;# 
  1386     0105                     	;# 
  1387     0107                     	;# 
  1388     0108                     	;# 
  1389     0109                     	;# 
  1390     010C                     	;# 
  1391     010C                     	;# 
  1392     010D                     	;# 
  1393     010E                     	;# 
  1394     010F                     	;# 
  1395     0185                     	;# 
  1396     0187                     	;# 
  1397     0188                     	;# 
  1398     0189                     	;# 
  1399     018C                     	;# 
  1400     018D                     	;# 
  1401     0000                     	;# 
  1402     0001                     	;# 
  1403     0002                     	;# 
  1404     0003                     	;# 
  1405     0004                     	;# 
  1406     0005                     	;# 
  1407     0006                     	;# 
  1408     0007                     	;# 
  1409     0008                     	;# 
  1410     0009                     	;# 
  1411     000A                     	;# 
  1412     000B                     	;# 
  1413     000C                     	;# 
  1414     000D                     	;# 
  1415     000E                     	;# 
  1416     000E                     	;# 
  1417     000F                     	;# 
  1418     0010                     	;# 
  1419     0011                     	;# 
  1420     0012                     	;# 
  1421     0013                     	;# 
  1422     0014                     	;# 
  1423     0015                     	;# 
  1424     0015                     	;# 
  1425     0016                     	;# 
  1426     0017                     	;# 
  1427     0018                     	;# 
  1428     0019                     	;# 
  1429     001A                     	;# 
  1430     001B                     	;# 
  1431     001B                     	;# 
  1432     001C                     	;# 
  1433     001D                     	;# 
  1434     001E                     	;# 
  1435     001F                     	;# 
  1436     0081                     	;# 
  1437     0085                     	;# 
  1438     0086                     	;# 
  1439     0087                     	;# 
  1440     0088                     	;# 
  1441     0089                     	;# 
  1442     008C                     	;# 
  1443     008D                     	;# 
  1444     008E                     	;# 
  1445     008F                     	;# 
  1446     0090                     	;# 
  1447     0091                     	;# 
  1448     0092                     	;# 
  1449     0093                     	;# 
  1450     0093                     	;# 
  1451     0093                     	;# 
  1452     0094                     	;# 
  1453     0095                     	;# 
  1454     0096                     	;# 
  1455     0097                     	;# 
  1456     0098                     	;# 
  1457     0099                     	;# 
  1458     009A                     	;# 
  1459     009B                     	;# 
  1460     009C                     	;# 
  1461     009D                     	;# 
  1462     009E                     	;# 
  1463     009F                     	;# 
  1464     0105                     	;# 
  1465     0107                     	;# 
  1466     0108                     	;# 
  1467     0109                     	;# 
  1468     010C                     	;# 
  1469     010C                     	;# 
  1470     010D                     	;# 
  1471     010E                     	;# 
  1472     010F                     	;# 
  1473     0185                     	;# 
  1474     0187                     	;# 
  1475     0188                     	;# 
  1476     0189                     	;# 
  1477     018C                     	;# 
  1478     018D                     	;# 
  1479     0000                     	;# 
  1480     0001                     	;# 
  1481     0002                     	;# 
  1482     0003                     	;# 
  1483     0004                     	;# 
  1484     0005                     	;# 
  1485     0006                     	;# 
  1486     0007                     	;# 
  1487     0008                     	;# 
  1488     0009                     	;# 
  1489     000A                     	;# 
  1490     000B                     	;# 
  1491     000C                     	;# 
  1492     000D                     	;# 
  1493     000E                     	;# 
  1494     000E                     	;# 
  1495     000F                     	;# 
  1496     0010                     	;# 
  1497     0011                     	;# 
  1498     0012                     	;# 
  1499     0013                     	;# 
  1500     0014                     	;# 
  1501     0015                     	;# 
  1502     0015                     	;# 
  1503     0016                     	;# 
  1504     0017                     	;# 
  1505     0018                     	;# 
  1506     0019                     	;# 
  1507     001A                     	;# 
  1508     001B                     	;# 
  1509     001B                     	;# 
  1510     001C                     	;# 
  1511     001D                     	;# 
  1512     001E                     	;# 
  1513     001F                     	;# 
  1514     0081                     	;# 
  1515     0085                     	;# 
  1516     0086                     	;# 
  1517     0087                     	;# 
  1518     0088                     	;# 
  1519     0089                     	;# 
  1520     008C                     	;# 
  1521     008D                     	;# 
  1522     008E                     	;# 
  1523     008F                     	;# 
  1524     0090                     	;# 
  1525     0091                     	;# 
  1526     0092                     	;# 
  1527     0093                     	;# 
  1528     0093                     	;# 
  1529     0093                     	;# 
  1530     0094                     	;# 
  1531     0095                     	;# 
  1532     0096                     	;# 
  1533     0097                     	;# 
  1534     0098                     	;# 
  1535     0099                     	;# 
  1536     009A                     	;# 
  1537     009B                     	;# 
  1538     009C                     	;# 
  1539     009D                     	;# 
  1540     009E                     	;# 
  1541     009F                     	;# 
  1542     0105                     	;# 
  1543     0107                     	;# 
  1544     0108                     	;# 
  1545     0109                     	;# 
  1546     010C                     	;# 
  1547     010C                     	;# 
  1548     010D                     	;# 
  1549     010E                     	;# 
  1550     010F                     	;# 
  1551     0185                     	;# 
  1552     0187                     	;# 
  1553     0188                     	;# 
  1554     0189                     	;# 
  1555     018C                     	;# 
  1556     018D                     	;# 
  1557     0000                     	;# 
  1558     0001                     	;# 
  1559     0002                     	;# 
  1560     0003                     	;# 
  1561     0004                     	;# 
  1562     0005                     	;# 
  1563     0006                     	;# 
  1564     0007                     	;# 
  1565     0008                     	;# 
  1566     0009                     	;# 
  1567     000A                     	;# 
  1568     000B                     	;# 
  1569     000C                     	;# 
  1570     000D                     	;# 
  1571     000E                     	;# 
  1572     000E                     	;# 
  1573     000F                     	;# 
  1574     0010                     	;# 
  1575     0011                     	;# 
  1576     0012                     	;# 
  1577     0013                     	;# 
  1578     0014                     	;# 
  1579     0015                     	;# 
  1580     0015                     	;# 
  1581     0016                     	;# 
  1582     0017                     	;# 
  1583     0018                     	;# 
  1584     0019                     	;# 
  1585     001A                     	;# 
  1586     001B                     	;# 
  1587     001B                     	;# 
  1588     001C                     	;# 
  1589     001D                     	;# 
  1590     001E                     	;# 
  1591     001F                     	;# 
  1592     0081                     	;# 
  1593     0085                     	;# 
  1594     0086                     	;# 
  1595     0087                     	;# 
  1596     0088                     	;# 
  1597     0089                     	;# 
  1598     008C                     	;# 
  1599     008D                     	;# 
  1600     008E                     	;# 
  1601     008F                     	;# 
  1602     0090                     	;# 
  1603     0091                     	;# 
  1604     0092                     	;# 
  1605     0093                     	;# 
  1606     0093                     	;# 
  1607     0093                     	;# 
  1608     0094                     	;# 
  1609     0095                     	;# 
  1610     0096                     	;# 
  1611     0097                     	;# 
  1612     0098                     	;# 
  1613     0099                     	;# 
  1614     009A                     	;# 
  1615     009B                     	;# 
  1616     009C                     	;# 
  1617     009D                     	;# 
  1618     009E                     	;# 
  1619     009F                     	;# 
  1620     0105                     	;# 
  1621     0107                     	;# 
  1622     0108                     	;# 
  1623     0109                     	;# 
  1624     010C                     	;# 
  1625     010C                     	;# 
  1626     010D                     	;# 
  1627     010E                     	;# 
  1628     010F                     	;# 
  1629     0185                     	;# 
  1630     0187                     	;# 
  1631     0188                     	;# 
  1632     0189                     	;# 
  1633     018C                     	;# 
  1634     018D                     	;# 
  1635     0000                     	;# 
  1636     0001                     	;# 
  1637     0002                     	;# 
  1638     0003                     	;# 
  1639     0004                     	;# 
  1640     0005                     	;# 
  1641     0006                     	;# 
  1642     0007                     	;# 
  1643     0008                     	;# 
  1644     0009                     	;# 
  1645     000A                     	;# 
  1646     000B                     	;# 
  1647     000C                     	;# 
  1648     000D                     	;# 
  1649     000E                     	;# 
  1650     000E                     	;# 
  1651     000F                     	;# 
  1652     0010                     	;# 
  1653     0011                     	;# 
  1654     0012                     	;# 
  1655     0013                     	;# 
  1656     0014                     	;# 
  1657     0015                     	;# 
  1658     0015                     	;# 
  1659     0016                     	;# 
  1660     0017                     	;# 
  1661     0018                     	;# 
  1662     0019                     	;# 
  1663     001A                     	;# 
  1664     001B                     	;# 
  1665     001B                     	;# 
  1666     001C                     	;# 
  1667     001D                     	;# 
  1668     001E                     	;# 
  1669     001F                     	;# 
  1670     0081                     	;# 
  1671     0085                     	;# 
  1672     0086                     	;# 
  1673     0087                     	;# 
  1674     0088                     	;# 
  1675     0089                     	;# 
  1676     008C                     	;# 
  1677     008D                     	;# 
  1678     008E                     	;# 
  1679     008F                     	;# 
  1680     0090                     	;# 
  1681     0091                     	;# 
  1682     0092                     	;# 
  1683     0093                     	;# 
  1684     0093                     	;# 
  1685     0093                     	;# 
  1686     0094                     	;# 
  1687     0095                     	;# 
  1688     0096                     	;# 
  1689     0097                     	;# 
  1690     0098                     	;# 
  1691     0099                     	;# 
  1692     009A                     	;# 
  1693     009B                     	;# 
  1694     009C                     	;# 
  1695     009D                     	;# 
  1696     009E                     	;# 
  1697     009F                     	;# 
  1698     0105                     	;# 
  1699     0107                     	;# 
  1700     0108                     	;# 
  1701     0109                     	;# 
  1702     010C                     	;# 
  1703     010C                     	;# 
  1704     010D                     	;# 
  1705     010E                     	;# 
  1706     010F                     	;# 
  1707     0185                     	;# 
  1708     0187                     	;# 
  1709     0188                     	;# 
  1710     0189                     	;# 
  1711     018C                     	;# 
  1712     018D                     	;# 
  1713     0000                     	;# 
  1714     0001                     	;# 
  1715     0002                     	;# 
  1716     0003                     	;# 
  1717     0004                     	;# 
  1718     0005                     	;# 
  1719     0006                     	;# 
  1720     0007                     	;# 
  1721     0008                     	;# 
  1722     0009                     	;# 
  1723     000A                     	;# 
  1724     000B                     	;# 
  1725     000C                     	;# 
  1726     000D                     	;# 
  1727     000E                     	;# 
  1728     000E                     	;# 
  1729     000F                     	;# 
  1730     0010                     	;# 
  1731     0011                     	;# 
  1732     0012                     	;# 
  1733     0013                     	;# 
  1734     0014                     	;# 
  1735     0015                     	;# 
  1736     0015                     	;# 
  1737     0016                     	;# 
  1738     0017                     	;# 
  1739     0018                     	;# 
  1740     0019                     	;# 
  1741     001A                     	;# 
  1742     001B                     	;# 
  1743     001B                     	;# 
  1744     001C                     	;# 
  1745     001D                     	;# 
  1746     001E                     	;# 
  1747     001F                     	;# 
  1748     0081                     	;# 
  1749     0085                     	;# 
  1750     0086                     	;# 
  1751     0087                     	;# 
  1752     0088                     	;# 
  1753     0089                     	;# 
  1754     008C                     	;# 
  1755     008D                     	;# 
  1756     008E                     	;# 
  1757     008F                     	;# 
  1758     0090                     	;# 
  1759     0091                     	;# 
  1760     0092                     	;# 
  1761     0093                     	;# 
  1762     0093                     	;# 
  1763     0093                     	;# 
  1764     0094                     	;# 
  1765     0095                     	;# 
  1766     0096                     	;# 
  1767     0097                     	;# 
  1768     0098                     	;# 
  1769     0099                     	;# 
  1770     009A                     	;# 
  1771     009B                     	;# 
  1772     009C                     	;# 
  1773     009D                     	;# 
  1774     009E                     	;# 
  1775     009F                     	;# 
  1776     0105                     	;# 
  1777     0107                     	;# 
  1778     0108                     	;# 
  1779     0109                     	;# 
  1780     010C                     	;# 
  1781     010C                     	;# 
  1782     010D                     	;# 
  1783     010E                     	;# 
  1784     010F                     	;# 
  1785     0185                     	;# 
  1786     0187                     	;# 
  1787     0188                     	;# 
  1788     0189                     	;# 
  1789     018C                     	;# 
  1790     018D                     	;# 
  1791     0000                     	;# 
  1792     0001                     	;# 
  1793     0002                     	;# 
  1794     0003                     	;# 
  1795     0004                     	;# 
  1796     0005                     	;# 
  1797     0006                     	;# 
  1798     0007                     	;# 
  1799     0008                     	;# 
  1800     0009                     	;# 
  1801     000A                     	;# 
  1802     000B                     	;# 
  1803     000C                     	;# 
  1804     000D                     	;# 
  1805     000E                     	;# 
  1806     000E                     	;# 
  1807     000F                     	;# 
  1808     0010                     	;# 
  1809     0011                     	;# 
  1810     0012                     	;# 
  1811     0013                     	;# 
  1812     0014                     	;# 
  1813     0015                     	;# 
  1814     0015                     	;# 
  1815     0016                     	;# 
  1816     0017                     	;# 
  1817     0018                     	;# 
  1818     0019                     	;# 
  1819     001A                     	;# 
  1820     001B                     	;# 
  1821     001B                     	;# 
  1822     001C                     	;# 
  1823     001D                     	;# 
  1824     001E                     	;# 
  1825     001F                     	;# 
  1826     0081                     	;# 
  1827     0085                     	;# 
  1828     0086                     	;# 
  1829     0087                     	;# 
  1830     0088                     	;# 
  1831     0089                     	;# 
  1832     008C                     	;# 
  1833     008D                     	;# 
  1834     008E                     	;# 
  1835     008F                     	;# 
  1836     0090                     	;# 
  1837     0091                     	;# 
  1838     0092                     	;# 
  1839     0093                     	;# 
  1840     0093                     	;# 
  1841     0093                     	;# 
  1842     0094                     	;# 
  1843     0095                     	;# 
  1844     0096                     	;# 
  1845     0097                     	;# 
  1846     0098                     	;# 
  1847     0099                     	;# 
  1848     009A                     	;# 
  1849     009B                     	;# 
  1850     009C                     	;# 
  1851     009D                     	;# 
  1852     009E                     	;# 
  1853     009F                     	;# 
  1854     0105                     	;# 
  1855     0107                     	;# 
  1856     0108                     	;# 
  1857     0109                     	;# 
  1858     010C                     	;# 
  1859     010C                     	;# 
  1860     010D                     	;# 
  1861     010E                     	;# 
  1862     010F                     	;# 
  1863     0185                     	;# 
  1864     0187                     	;# 
  1865     0188                     	;# 
  1866     0189                     	;# 
  1867     018C                     	;# 
  1868     018D                     	;# 
  1869     0000                     	;# 
  1870     0001                     	;# 
  1871     0002                     	;# 
  1872     0003                     	;# 
  1873     0004                     	;# 
  1874     0005                     	;# 
  1875     0006                     	;# 
  1876     0007                     	;# 
  1877     0008                     	;# 
  1878     0009                     	;# 
  1879     000A                     	;# 
  1880     000B                     	;# 
  1881     000C                     	;# 
  1882     000D                     	;# 
  1883     000E                     	;# 
  1884     000E                     	;# 
  1885     000F                     	;# 
  1886     0010                     	;# 
  1887     0011                     	;# 
  1888     0012                     	;# 
  1889     0013                     	;# 
  1890     0014                     	;# 
  1891     0015                     	;# 
  1892     0015                     	;# 
  1893     0016                     	;# 
  1894     0017                     	;# 
  1895     0018                     	;# 
  1896     0019                     	;# 
  1897     001A                     	;# 
  1898     001B                     	;# 
  1899     001B                     	;# 
  1900     001C                     	;# 
  1901     001D                     	;# 
  1902     001E                     	;# 
  1903     001F                     	;# 
  1904     0081                     	;# 
  1905     0085                     	;# 
  1906     0086                     	;# 
  1907     0087                     	;# 
  1908     0088                     	;# 
  1909     0089                     	;# 
  1910     008C                     	;# 
  1911     008D                     	;# 
  1912     008E                     	;# 
  1913     008F                     	;# 
  1914     0090                     	;# 
  1915     0091                     	;# 
  1916     0092                     	;# 
  1917     0093                     	;# 
  1918     0093                     	;# 
  1919     0093                     	;# 
  1920     0094                     	;# 
  1921     0095                     	;# 
  1922     0096                     	;# 
  1923     0097                     	;# 
  1924     0098                     	;# 
  1925     0099                     	;# 
  1926     009A                     	;# 
  1927     009B                     	;# 
  1928     009C                     	;# 
  1929     009D                     	;# 
  1930     009E                     	;# 
  1931     009F                     	;# 
  1932     0105                     	;# 
  1933     0107                     	;# 
  1934     0108                     	;# 
  1935     0109                     	;# 
  1936     010C                     	;# 
  1937     010C                     	;# 
  1938     010D                     	;# 
  1939     010E                     	;# 
  1940     010F                     	;# 
  1941     0185                     	;# 
  1942     0187                     	;# 
  1943     0188                     	;# 
  1944     0189                     	;# 
  1945     018C                     	;# 
  1946     018D                     	;# 
  1947     0000                     	;# 
  1948     0001                     	;# 
  1949     0002                     	;# 
  1950     0003                     	;# 
  1951     0004                     	;# 
  1952     0005                     	;# 
  1953     0006                     	;# 
  1954     0007                     	;# 
  1955     0008                     	;# 
  1956     0009                     	;# 
  1957     000A                     	;# 
  1958     000B                     	;# 
  1959     000C                     	;# 
  1960     000D                     	;# 
  1961     000E                     	;# 
  1962     000E                     	;# 
  1963     000F                     	;# 
  1964     0010                     	;# 
  1965     0011                     	;# 
  1966     0012                     	;# 
  1967     0013                     	;# 
  1968     0014                     	;# 
  1969     0015                     	;# 
  1970     0015                     	;# 
  1971     0016                     	;# 
  1972     0017                     	;# 
  1973     0018                     	;# 
  1974     0019                     	;# 
  1975     001A                     	;# 
  1976     001B                     	;# 
  1977     001B                     	;# 
  1978     001C                     	;# 
  1979     001D                     	;# 
  1980     001E                     	;# 
  1981     001F                     	;# 
  1982     0081                     	;# 
  1983     0085                     	;# 
  1984     0086                     	;# 
  1985     0087                     	;# 
  1986     0088                     	;# 
  1987     0089                     	;# 
  1988     008C                     	;# 
  1989     008D                     	;# 
  1990     008E                     	;# 
  1991     008F                     	;# 
  1992     0090                     	;# 
  1993     0091                     	;# 
  1994     0092                     	;# 
  1995     0093                     	;# 
  1996     0093                     	;# 
  1997     0093                     	;# 
  1998     0094                     	;# 
  1999     0095                     	;# 
  2000     0096                     	;# 
  2001     0097                     	;# 
  2002     0098                     	;# 
  2003     0099                     	;# 
  2004     009A                     	;# 
  2005     009B                     	;# 
  2006     009C                     	;# 
  2007     009D                     	;# 
  2008     009E                     	;# 
  2009     009F                     	;# 
  2010     0105                     	;# 
  2011     0107                     	;# 
  2012     0108                     	;# 
  2013     0109                     	;# 
  2014     010C                     	;# 
  2015     010C                     	;# 
  2016     010D                     	;# 
  2017     010E                     	;# 
  2018     010F                     	;# 
  2019     0185                     	;# 
  2020     0187                     	;# 
  2021     0188                     	;# 
  2022     0189                     	;# 
  2023     018C                     	;# 
  2024     018D                     	;# 
  2025                           
  2026                           	psect	idataCOMMON
  2027     0784                     __pidataCOMMON:
  2028                           
  2029                           ;initializer for _LCD_display_control
  2030     0784  340C               	retlw	12
  2031                           
  2032                           ;initializer for _LCD_entry_mode
  2033     0785  3406               	retlw	6
  2034                           
  2035                           	psect	strings
  2036     0326                     __pstrings:
  2037     0326                     stringtab:
  2038     0326                     __stringtab:
  2039     0326                     stringcode:	
  2040                           ;	String table - string pointers are 1 byte each
  2041                           
  2042     0326                     stringdir:
  2043     0326  3003               	movlw	high stringdir
  2044     0327  008A               	movwf	10
  2045     0328  0804               	movf	4,w
  2046     0329  0A84               	incf	4,f
  2047     032A  0782               	addwf	2,f
  2048     032B                     __stringbase:
  2049     032B  3400               	retlw	0
  2050     032C                     __end_of__stringtab:
  2051     032C                     _KeyPadChar:
  2052     032C  3431               	retlw	49
  2053     032D  3432               	retlw	50
  2054     032E  3433               	retlw	51
  2055     032F  3441               	retlw	65
  2056     0330  3434               	retlw	52
  2057     0331  3435               	retlw	53
  2058     0332  3436               	retlw	54
  2059     0333  3442               	retlw	66
  2060     0334  3437               	retlw	55
  2061     0335  3438               	retlw	56
  2062     0336  3439               	retlw	57
  2063     0337  3443               	retlw	67
  2064     0338  342A               	retlw	42
  2065     0339  3430               	retlw	48
  2066     033A  3423               	retlw	35
  2067     033B  3444               	retlw	68
  2068     033C  343F               	retlw	63
  2069     033D                     __end_of_KeyPadChar:
  2070     0019                     _TXREG	set	25
  2071     0018                     _RCSTAbits	set	24
  2072     001F                     _ADCON0	set	31
  2073     0006                     _PORTBbits	set	6
  2074     001E                     _ADRESH	set	30
  2075     001A                     _RCREG	set	26
  2076     000C                     _PIR1bits	set	12
  2077     0008                     _PORTDbits	set	8
  2078     0037                     _RB7	set	55
  2079     0036                     _RB6	set	54
  2080     0035                     _RB5	set	53
  2081     0034                     _RB4	set	52
  2082     0033                     _RB3	set	51
  2083     0032                     _RB2	set	50
  2084     0031                     _RB1	set	49
  2085     0030                     _RB0	set	48
  2086     00C4                     _CREN	set	196
  2087     00C1                     _OERR	set	193
  2088     0064                     _TXIF	set	100
  2089     005F                     _GIE	set	95
  2090     005E                     _PEIE	set	94
  2091     00F9                     _GO_nDONE	set	249
  2092     0065                     _RCIF	set	101
  2093     008C                     _PIE1bits	set	140
  2094     0099                     _SPBRG	set	153
  2095     0098                     _TXSTAbits	set	152
  2096     009F                     _ADCON1	set	159
  2097     0086                     _TRISBbits	set	134
  2098     009E                     _ADRESL	set	158
  2099     0088                     _TRISDbits	set	136
  2100     0437                     _TRISB7	set	1079
  2101     0436                     _TRISB6	set	1078
  2102     0435                     _TRISB5	set	1077
  2103     0434                     _TRISB4	set	1076
  2104     0433                     _TRISB3	set	1075
  2105     0432                     _TRISB2	set	1074
  2106     0431                     _TRISB1	set	1073
  2107     0430                     _TRISB0	set	1072
  2108     043F                     _TRISC7	set	1087
  2109     043E                     _TRISC6	set	1086
  2110     033D                     STR_9:
  2111     033D  3420               	retlw	32	;' '
  2112     033E  3420               	retlw	32	;' '
  2113     033F  3420               	retlw	32	;' '
  2114     0340  3420               	retlw	32	;' '
  2115     0341  3420               	retlw	32	;' '
  2116     0342  3420               	retlw	32	;' '
  2117     0343  3420               	retlw	32	;' '
  2118     0344  3420               	retlw	32	;' '
  2119     0345  3420               	retlw	32	;' '
  2120     0346  3420               	retlw	32	;' '
  2121     0347  3420               	retlw	32	;' '
  2122     0348  3420               	retlw	32	;' '
  2123     0349  3420               	retlw	32	;' '
  2124     034A  3420               	retlw	32	;' '
  2125     034B  3420               	retlw	32	;' '
  2126     034C  3420               	retlw	32	;' '
  2127     034D  3400               	retlw	0
  2128     034E                     STR_1:
  2129     034E  3450               	retlw	80	;'P'
  2130     034F  3449               	retlw	73	;'I'
  2131     0350  3443               	retlw	67	;'C'
  2132     0351  3420               	retlw	32	;' '
  2133     0352  3449               	retlw	73	;'I'
  2134     0353  346E               	retlw	110	;'n'
  2135     0354  3469               	retlw	105	;'i'
  2136     0355  3474               	retlw	116	;'t'
  2137     0356  3469               	retlw	105	;'i'
  2138     0357  3461               	retlw	97	;'a'
  2139     0358  346C               	retlw	108	;'l'
  2140     0359  3469               	retlw	105	;'i'
  2141     035A  347A               	retlw	122	;'z'
  2142     035B  3465               	retlw	101	;'e'
  2143     035C  3464               	retlw	100	;'d'
  2144     035D  3400               	retlw	0
  2145     035E                     STR_2:
  2146     035E  3444               	retlw	68	;'D'
  2147     035F  346F               	retlw	111	;'o'
  2148     0360  346F               	retlw	111	;'o'
  2149     0361  3472               	retlw	114	;'r'
  2150     0362  3420               	retlw	32	;' '
  2151     0363  344F               	retlw	79	;'O'
  2152     0364  3470               	retlw	112	;'p'
  2153     0365  3465               	retlw	101	;'e'
  2154     0366  346E               	retlw	110	;'n'
  2155     0367  3469               	retlw	105	;'i'
  2156     0368  346E               	retlw	110	;'n'
  2157     0369  3467               	retlw	103	;'g'
  2158     036A  3400               	retlw	0
  2159     036B                     STR_5:
  2160     036B  3444               	retlw	68	;'D'
  2161     036C  346F               	retlw	111	;'o'
  2162     036D  346F               	retlw	111	;'o'
  2163     036E  3472               	retlw	114	;'r'
  2164     036F  3420               	retlw	32	;' '
  2165     0370  3443               	retlw	67	;'C'
  2166     0371  346C               	retlw	108	;'l'
  2167     0372  346F               	retlw	111	;'o'
  2168     0373  3473               	retlw	115	;'s'
  2169     0374  3469               	retlw	105	;'i'
  2170     0375  346E               	retlw	110	;'n'
  2171     0376  3467               	retlw	103	;'g'
  2172     0377  3400               	retlw	0
  2173     0378                     STR_3:
  2174     0378  3444               	retlw	68	;'D'
  2175     0379  346F               	retlw	111	;'o'
  2176     037A  346F               	retlw	111	;'o'
  2177     037B  3472               	retlw	114	;'r'
  2178     037C  3420               	retlw	32	;' '
  2179     037D  344F               	retlw	79	;'O'
  2180     037E  3470               	retlw	112	;'p'
  2181     037F  3465               	retlw	101	;'e'
  2182     0380  346E               	retlw	110	;'n'
  2183     0381  3465               	retlw	101	;'e'
  2184     0382  3464               	retlw	100	;'d'
  2185     0383  3400               	retlw	0
  2186     0384                     STR_6:
  2187     0384  3444               	retlw	68	;'D'
  2188     0385  346F               	retlw	111	;'o'
  2189     0386  346F               	retlw	111	;'o'
  2190     0387  3472               	retlw	114	;'r'
  2191     0388  3420               	retlw	32	;' '
  2192     0389  3443               	retlw	67	;'C'
  2193     038A  346C               	retlw	108	;'l'
  2194     038B  346F               	retlw	111	;'o'
  2195     038C  3473               	retlw	115	;'s'
  2196     038D  3465               	retlw	101	;'e'
  2197     038E  3464               	retlw	100	;'d'
  2198     038F  3400               	retlw	0
  2199     0390                     STR_4:
  2200     0390  3449               	retlw	73	;'I'
  2201     0391  3452               	retlw	82	;'R'
  2202     0392  3420               	retlw	32	;' '
  2203     0393  3443               	retlw	67	;'C'
  2204     0394  3468               	retlw	104	;'h'
  2205     0395  3465               	retlw	101	;'e'
  2206     0396  3463               	retlw	99	;'c'
  2207     0397  346B               	retlw	107	;'k'
  2208     0398  3469               	retlw	105	;'i'
  2209     0399  346E               	retlw	110	;'n'
  2210     039A  3467               	retlw	103	;'g'
  2211     039B  3400               	retlw	0
  2212     039C                     STR_10:
  2213     039C  340D               	retlw	13
  2214     039D  340A               	retlw	10
  2215     039E  3400               	retlw	0
  2216     039F                     STR_8:
  2217     039F  3443               	retlw	67	;'C'
  2218     03A0  3400               	retlw	0
  2219     03A1                     STR_7:
  2220     03A1  344F               	retlw	79	;'O'
  2221     03A2  3400               	retlw	0
  2222                           
  2223                           	psect	cinit
  2224     0015                     start_initialization:	
  2225                           ; #config settings
  2226                           
  2227     0015                     __initialization:
  2228                           
  2229                           ; Initialize objects allocated to COMMON
  2230     0015  120A  118A  2784  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
  2231     001A  00FC               	movwf	__pdataCOMMON& (0+127)
  2232     001B  120A  118A  2785  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
  2233     0020  00FD               	movwf	(__pdataCOMMON+1)& (0+127)
  2234                           
  2235                           ; Clear objects allocated to BANK1
  2236     0021  1383               	bcf	3,7	;select IRP bank0
  2237     0022  30A0               	movlw	low __pbssBANK1
  2238     0023  0084               	movwf	4
  2239     0024  30C0               	movlw	low (__pbssBANK1+32)
  2240     0025  120A  118A  277C  120A  118A  	fcall	clear_ram0
  2241                           
  2242                           ; Clear objects allocated to BANK0
  2243     002A  3020               	movlw	low __pbssBANK0
  2244     002B  0084               	movwf	4
  2245     002C  304C               	movlw	low (__pbssBANK0+44)
  2246     002D  120A  118A  277C  120A  118A  	fcall	clear_ram0
  2247     0032                     end_of_initialization:	
  2248                           ;End of C runtime variable initialization code
  2249                           
  2250     0032                     __end_of__initialization:
  2251     0032  0183               	clrf	3
  2252     0033  120A  118A  2836   	ljmp	_main	;jump to C main() function
  2253                           
  2254                           	psect	dataCOMMON
  2255     007C                     __pdataCOMMON:
  2256     007C                     _LCD_display_control:
  2257     007C                     	ds	1
  2258     007D                     _LCD_entry_mode:
  2259     007D                     	ds	1
  2260                           
  2261                           	psect	bssBANK0
  2262     0020                     __pbssBANK0:
  2263     0020                     modff@F522:
  2264     0020                     	ds	4
  2265     0024                     _LEDO:
  2266     0024                     	ds	2
  2267     0026                     _doorClose:
  2268     0026                     	ds	2
  2269     0028                     _StatusChange:
  2270     0028                     	ds	2
  2271     002A                     _doorStatus:
  2272     002A                     	ds	2
  2273     002C                     _pos:
  2274     002C                     	ds	2
  2275     002E                     _StringReceive:
  2276     002E                     	ds	30
  2277                           
  2278                           	psect	bssBANK1
  2279     00A0                     __pbssBANK1:
  2280     00A0                     _StringDisplay:
  2281     00A0                     	ds	32
  2282                           
  2283                           	psect	clrtext
  2284     077C                     clear_ram0:	
  2285                           ;	Called with FSR containing the base address, and
  2286                           ;	W with the last address+1
  2287                           
  2288     077C  0064               	clrwdt	;clear the watchdog before getting into this loop
  2289     077D                     clrloop0:
  2290     077D  0180               	clrf	0	;clear RAM location pointed to by FSR
  2291     077E  0A84               	incf	4,f	;increment pointer
  2292     077F  0604               	xorwf	4,w	;XOR with final address
  2293     0780  1903               	btfsc	3,2	;have we reached the end yet?
  2294     0781  3400               	retlw	0	;all done for this memory range, return
  2295     0782  0604               	xorwf	4,w	;XOR again to restore value
  2296     0783  2F7D               	goto	clrloop0	;do the next byte
  2297                           
  2298                           	psect	cstackCOMMON
  2299     0070                     __pcstackCOMMON:
  2300     0070                     ?_LCD_write_command:
  2301     0070                     ?_LCD_write_data:	
  2302                           ; 1 bytes @ 0x0
  2303                           
  2304     0070                     ?_LCD_pulse_clock:	
  2305                           ; 1 bytes @ 0x0
  2306                           
  2307     0070                     ?_setDoorStatus:	
  2308                           ; 1 bytes @ 0x0
  2309                           
  2310     0070                     ?_picInit:	
  2311                           ; 1 bytes @ 0x0
  2312                           
  2313     0070                     ?_closeDoor:	
  2314                           ; 1 bytes @ 0x0
  2315                           
  2316     0070                     ?_openDoor:	
  2317                           ; 1 bytes @ 0x0
  2318                           
  2319     0070                     ?_InitUART:	
  2320                           ; 1 bytes @ 0x0
  2321                           
  2322     0070                     ?_strchr:	
  2323                           ; 1 bytes @ 0x0
  2324                           
  2325     0070                     ?_LCD_clear:	
  2326                           ; 1 bytes @ 0x0
  2327                           
  2328     0070                     ?_LCD_init:	
  2329                           ; 1 bytes @ 0x0
  2330                           
  2331     0070                     ?_LCD_write_string:	
  2332                           ; 1 bytes @ 0x0
  2333                           
  2334     0070                     ?_ISR:	
  2335                           ; 1 bytes @ 0x0
  2336                           
  2337     0070                     ?_main:	
  2338                           ; 1 bytes @ 0x0
  2339                           
  2340     0070                     ?_ClearStringReceive:	
  2341                           ; 1 bytes @ 0x0
  2342                           
  2343     0070                     ??_ClearStringReceive:	
  2344                           ; 1 bytes @ 0x0
  2345                           
  2346     0070                     ?i1_LCD_pulse_clock:	
  2347                           ; 1 bytes @ 0x0
  2348                           
  2349     0070                     ??i1_LCD_pulse_clock:	
  2350                           ; 1 bytes @ 0x0
  2351                           
  2352     0070                     ?i1_LCD_write_command:	
  2353                           ; 1 bytes @ 0x0
  2354                           
  2355     0070                     ?i1_LCD_write_data:	
  2356                           ; 1 bytes @ 0x0
  2357                           
  2358     0070                     ?i1_LCD_write_string:	
  2359                           ; 1 bytes @ 0x0
  2360                           
  2361     0070                     ?_strlen:	
  2362                           ; 1 bytes @ 0x0
  2363                           
  2364     0070                     ?_strncmp:	
  2365                           ; 2 bytes @ 0x0
  2366                           
  2367     0070                     strncmp@r:	
  2368                           ; 2 bytes @ 0x0
  2369                           
  2370     0070                     ClearStringReceive@i:	
  2371                           ; 1 bytes @ 0x0
  2372                           
  2373     0070                     strchr@c:	
  2374                           ; 2 bytes @ 0x0
  2375                           
  2376                           
  2377                           ; 2 bytes @ 0x0
  2378     0070                     	ds	1
  2379     0071                     ??i1_LCD_write_command:
  2380     0071                     ??i1_LCD_write_data:	
  2381                           ; 1 bytes @ 0x1
  2382                           
  2383     0071                     strncmp@n:	
  2384                           ; 1 bytes @ 0x1
  2385                           
  2386                           
  2387                           ; 2 bytes @ 0x1
  2388     0071                     	ds	1
  2389     0072                     ??_strlen:
  2390     0072                     ??_strchr:	
  2391                           ; 1 bytes @ 0x2
  2392                           
  2393     0072                     strchr@s:	
  2394                           ; 1 bytes @ 0x2
  2395                           
  2396     0072                     strlen@a:	
  2397                           ; 1 bytes @ 0x2
  2398                           
  2399                           
  2400                           ; 1 bytes @ 0x2
  2401     0072                     	ds	1
  2402     0073                     ??_strncmp:
  2403     0073                     strlen@s:	
  2404                           ; 1 bytes @ 0x3
  2405                           
  2406     0073                     i1LCD_write_command@command:	
  2407                           ; 1 bytes @ 0x3
  2408                           
  2409     0073                     i1LCD_write_data@data:	
  2410                           ; 1 bytes @ 0x3
  2411                           
  2412                           
  2413                           ; 1 bytes @ 0x3
  2414     0073                     	ds	1
  2415     0074                     ?i1_LCD_cursor_set:
  2416     0074                     ??i1_LCD_write_string:	
  2417                           ; 1 bytes @ 0x4
  2418                           
  2419     0074                     i1LCD_cursor_set@column:	
  2420                           ; 1 bytes @ 0x4
  2421                           
  2422     0074                     i1LCD_write_string@string:	
  2423                           ; 1 bytes @ 0x4
  2424                           
  2425                           
  2426                           ; 1 bytes @ 0x4
  2427     0074                     	ds	1
  2428     0075                     ??i1_LCD_cursor_set:
  2429     0075                     strncmp@l:	
  2430                           ; 1 bytes @ 0x5
  2431                           
  2432     0075                     i1LCD_cursor_set@row:	
  2433                           ; 1 bytes @ 0x5
  2434                           
  2435     0075                     i1LCD_write_string@i:	
  2436                           ; 1 bytes @ 0x5
  2437                           
  2438                           
  2439                           ; 1 bytes @ 0x5
  2440     0075                     	ds	1
  2441     0076                     ?_strstr:
  2442     0076                     strstr@n:	
  2443                           ; 1 bytes @ 0x6
  2444                           
  2445                           
  2446                           ; 1 bytes @ 0x6
  2447     0076                     	ds	1
  2448     0077                     ??_strstr:
  2449                           
  2450                           ; 1 bytes @ 0x7
  2451     0077                     	ds	2
  2452     0079                     strstr@nl:
  2453                           
  2454                           ; 2 bytes @ 0x9
  2455     0079                     	ds	2
  2456     007B                     strstr@h:
  2457                           
  2458                           ; 1 bytes @ 0xB
  2459     007B                     	ds	1
  2460     007C                     ??_setDoorStatus:
  2461                           
  2462                           	psect	cstackBANK0
  2463     004C                     __pcstackBANK0:	
  2464                           ; 1 bytes @ 0xC
  2465                           
  2466     004C                     ??_ISR:
  2467                           
  2468                           ; 1 bytes @ 0x0
  2469     004C                     	ds	4
  2470     0050                     ??_LCD_pulse_clock:
  2471     0050                     ??_InitUART:	
  2472                           ; 1 bytes @ 0x4
  2473                           
  2474                           
  2475                           ; 1 bytes @ 0x4
  2476     0050                     	ds	1
  2477     0051                     ??_LCD_write_command:
  2478     0051                     ??_LCD_write_data:	
  2479                           ; 1 bytes @ 0x5
  2480                           
  2481                           
  2482                           ; 1 bytes @ 0x5
  2483     0051                     	ds	2
  2484     0053                     LCD_write_command@command:
  2485     0053                     LCD_write_data@data:	
  2486                           ; 1 bytes @ 0x7
  2487                           
  2488                           
  2489                           ; 1 bytes @ 0x7
  2490     0053                     	ds	1
  2491     0054                     ?_LCD_cursor_set:
  2492     0054                     ??_LCD_clear:	
  2493                           ; 1 bytes @ 0x8
  2494                           
  2495     0054                     ??_LCD_write_string:	
  2496                           ; 1 bytes @ 0x8
  2497                           
  2498     0054                     LCD_cursor_set@column:	
  2499                           ; 1 bytes @ 0x8
  2500                           
  2501     0054                     LCD_write_string@i:	
  2502                           ; 1 bytes @ 0x8
  2503                           
  2504                           
  2505                           ; 1 bytes @ 0x8
  2506     0054                     	ds	1
  2507     0055                     ??_LCD_cursor_set:
  2508     0055                     ??_LCD_init:	
  2509                           ; 1 bytes @ 0x9
  2510                           
  2511     0055                     LCD_cursor_set@row:	
  2512                           ; 1 bytes @ 0x9
  2513                           
  2514     0055                     LCD_write_string@string:	
  2515                           ; 1 bytes @ 0x9
  2516                           
  2517                           
  2518                           ; 1 bytes @ 0x9
  2519     0055                     	ds	1
  2520     0056                     ??_closeDoor:
  2521     0056                     ??_openDoor:	
  2522                           ; 1 bytes @ 0xA
  2523                           
  2524                           
  2525                           ; 1 bytes @ 0xA
  2526     0056                     	ds	3
  2527     0059                     ??_picInit:
  2528                           
  2529                           ; 1 bytes @ 0xD
  2530     0059                     	ds	3
  2531     005C                     ??_main:
  2532     005C                     main@adcResult:	
  2533                           ; 1 bytes @ 0x10
  2534                           
  2535                           
  2536                           ; 2 bytes @ 0x10
  2537     005C                     	ds	2
  2538                           
  2539                           	psect	maintext
  2540     0036                     __pmaintext:	
  2541 ;;
  2542 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2543 ;;
  2544 ;; *************** function _main *****************
  2545 ;; Defined at:
  2546 ;;		line 86 in file "main.c"
  2547 ;; Parameters:    Size  Location     Type
  2548 ;;		None
  2549 ;; Auto vars:     Size  Location     Type
  2550 ;;  adcResult       2   16[BANK0 ] unsigned int 
  2551 ;; Return value:  Size  Location     Type
  2552 ;;                  1    wreg      void 
  2553 ;; Registers used:
  2554 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2555 ;; Tracked objects:
  2556 ;;		On entry : B00/0
  2557 ;;		On exit  : 0/0
  2558 ;;		Unchanged: 0/0
  2559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2560 ;;      Params:         0       0       0       0       0
  2561 ;;      Locals:         0       2       0       0       0
  2562 ;;      Temps:          0       0       0       0       0
  2563 ;;      Totals:         0       2       0       0       0
  2564 ;;Total ram usage:        2 bytes
  2565 ;; Hardware stack levels required when called: 10
  2566 ;; This function calls:
  2567 ;;		_LCD_cursor_set
  2568 ;;		_closeDoor
  2569 ;;		_openDoor
  2570 ;;		_picInit
  2571 ;; This function is called by:
  2572 ;;		Startup code after reset
  2573 ;; This function uses a non-reentrant model
  2574 ;;
  2575                           
  2576     0036                     _main:	
  2577                           ;psect for function _main
  2578                           
  2579     0036                     l2296:	
  2580                           ;incstack = 0
  2581 ;; hardware stack exceeded
  2582                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2583                           
  2584                           
  2585                           ;main.c: 87:     picInit();
  2586     0036  120A  118A  2530  120A  118A  	fcall	_picInit
  2587     003B                     l2298:
  2588                           
  2589                           ;main.c: 93:         GO_nDONE = 1;
  2590     003B  1283               	bcf	3,5	;RP0=0, select bank0
  2591     003C  1303               	bcf	3,6	;RP1=0, select bank0
  2592     003D  149F               	bsf	31,1	;volatile
  2593     003E                     l260:	
  2594                           ;main.c: 98:         while(GO_nDONE);
  2595                           
  2596     003E  189F               	btfsc	31,1	;volatile
  2597     003F  2841               	goto	u2051
  2598     0040  2842               	goto	u2050
  2599     0041                     u2051:
  2600     0041  283E               	goto	l260
  2601     0042                     u2050:
  2602     0042                     l2300:
  2603                           
  2604                           ;main.c: 100:         unsigned int adcResult = ADRESH << 8 | ADRESL;
  2605     0042  081E               	movf	30,w	;volatile
  2606     0043  00DD               	movwf	main@adcResult+1
  2607     0044  1683               	bsf	3,5	;RP0=1, select bank1
  2608     0045  1303               	bcf	3,6	;RP1=0, select bank1
  2609     0046  081E               	movf	30,w	;volatile
  2610     0047  1283               	bcf	3,5	;RP0=0, select bank0
  2611     0048  1303               	bcf	3,6	;RP1=0, select bank0
  2612     0049  00DC               	movwf	main@adcResult
  2613                           
  2614                           ;main.c: 101:         if(adcResult > 300 && doorStatus == 1){
  2615     004A  3001               	movlw	1
  2616     004B  025D               	subwf	main@adcResult+1,w
  2617     004C  302D               	movlw	45
  2618     004D  1903               	skipnz
  2619     004E  025C               	subwf	main@adcResult,w
  2620     004F  1C03               	skipc
  2621     0050  2852               	goto	u2061
  2622     0051  2853               	goto	u2060
  2623     0052                     u2061:
  2624     0052  285E               	goto	l2306
  2625     0053                     u2060:
  2626     0053                     l2302:
  2627     0053  032A               	decf	_doorStatus,w
  2628     0054  042B               	iorwf	_doorStatus+1,w
  2629     0055  1D03               	btfss	3,2
  2630     0056  2858               	goto	u2071
  2631     0057  2859               	goto	u2070
  2632     0058                     u2071:
  2633     0058  285E               	goto	l2306
  2634     0059                     u2070:
  2635     0059                     l2304:
  2636                           
  2637                           ;main.c: 102:             closeDoor();
  2638     0059  120A  118A  241A  120A  118A  	fcall	_closeDoor
  2639     005E                     l2306:
  2640                           
  2641                           ;main.c: 104:         if(adcResult < 300 && doorStatus == 0){
  2642     005E  3001               	movlw	1
  2643     005F  1283               	bcf	3,5	;RP0=0, select bank0
  2644     0060  1303               	bcf	3,6	;RP1=0, select bank0
  2645     0061  025D               	subwf	main@adcResult+1,w
  2646     0062  302C               	movlw	44
  2647     0063  1903               	skipnz
  2648     0064  025C               	subwf	main@adcResult,w
  2649     0065  1803               	skipnc
  2650     0066  2868               	goto	u2081
  2651     0067  2869               	goto	u2080
  2652     0068                     u2081:
  2653     0068  2874               	goto	l2312
  2654     0069                     u2080:
  2655     0069                     l2308:
  2656     0069  082A               	movf	_doorStatus,w
  2657     006A  042B               	iorwf	_doorStatus+1,w
  2658     006B  1D03               	btfss	3,2
  2659     006C  286E               	goto	u2091
  2660     006D  286F               	goto	u2090
  2661     006E                     u2091:
  2662     006E  2874               	goto	l2312
  2663     006F                     u2090:
  2664     006F                     l2310:
  2665                           
  2666                           ;main.c: 105:             openDoor();
  2667     006F  120A  118A  25C8  120A  118A  	fcall	_openDoor
  2668     0074                     l2312:
  2669                           
  2670                           ;main.c: 129:         LCD_cursor_set(1, 1);
  2671     0074  1283               	bcf	3,5	;RP0=0, select bank0
  2672     0075  1303               	bcf	3,6	;RP1=0, select bank0
  2673     0076  01D4               	clrf	LCD_cursor_set@column
  2674     0077  0AD4               	incf	LCD_cursor_set@column,f
  2675     0078  3001               	movlw	1
  2676     0079  120A  118A  260F  120A  118A  	fcall	_LCD_cursor_set
  2677     007E                     l2314:
  2678                           
  2679                           ;main.c: 130:         if(doorStatus == 0 && doorClose == 0 && PORTBbits.RB7 == 1){
  2680     007E  1283               	bcf	3,5	;RP0=0, select bank0
  2681     007F  1303               	bcf	3,6	;RP1=0, select bank0
  2682     0080  082A               	movf	_doorStatus,w
  2683     0081  042B               	iorwf	_doorStatus+1,w
  2684     0082  1D03               	btfss	3,2
  2685     0083  2885               	goto	u2101
  2686     0084  2886               	goto	u2100
  2687     0085                     u2101:
  2688     0085  289A               	goto	l2322
  2689     0086                     u2100:
  2690     0086                     l2316:
  2691     0086  0826               	movf	_doorClose,w
  2692     0087  0427               	iorwf	_doorClose+1,w
  2693     0088  1D03               	btfss	3,2
  2694     0089  288B               	goto	u2111
  2695     008A  288C               	goto	u2110
  2696     008B                     u2111:
  2697     008B  289A               	goto	l2322
  2698     008C                     u2110:
  2699     008C                     l2318:
  2700     008C  1F86               	btfss	6,7	;volatile
  2701     008D  288F               	goto	u2121
  2702     008E  2890               	goto	u2120
  2703     008F                     u2121:
  2704     008F  289A               	goto	l2322
  2705     0090                     u2120:
  2706     0090                     l2320:
  2707                           
  2708                           ;main.c: 132:             openDoor();
  2709     0090  120A  118A  25C8  120A  118A  	fcall	_openDoor
  2710                           
  2711                           ;main.c: 134:             closeDoor();
  2712     0095  120A  118A  241A  120A  118A  	fcall	_closeDoor
  2713     009A                     l2322:
  2714                           
  2715                           ;main.c: 137:         if(doorClose == 0 && doorStatus == 1 && StatusChange == 1){
  2716     009A  1283               	bcf	3,5	;RP0=0, select bank0
  2717     009B  1303               	bcf	3,6	;RP1=0, select bank0
  2718     009C  0826               	movf	_doorClose,w
  2719     009D  0427               	iorwf	_doorClose+1,w
  2720     009E  1D03               	btfss	3,2
  2721     009F  28A1               	goto	u2131
  2722     00A0  28A2               	goto	u2130
  2723     00A1                     u2131:
  2724     00A1  28B7               	goto	l2332
  2725     00A2                     u2130:
  2726     00A2                     l2324:
  2727     00A2  032A               	decf	_doorStatus,w
  2728     00A3  042B               	iorwf	_doorStatus+1,w
  2729     00A4  1D03               	btfss	3,2
  2730     00A5  28A7               	goto	u2141
  2731     00A6  28A8               	goto	u2140
  2732     00A7                     u2141:
  2733     00A7  28B7               	goto	l2332
  2734     00A8                     u2140:
  2735     00A8                     l2326:
  2736     00A8  0328               	decf	_StatusChange,w
  2737     00A9  0429               	iorwf	_StatusChange+1,w
  2738     00AA  1D03               	btfss	3,2
  2739     00AB  28AD               	goto	u2151
  2740     00AC  28AE               	goto	u2150
  2741     00AD                     u2151:
  2742     00AD  28B7               	goto	l2332
  2743     00AE                     u2150:
  2744     00AE                     l2328:
  2745                           
  2746                           ;main.c: 138:             closeDoor();
  2747     00AE  120A  118A  241A  120A  118A  	fcall	_closeDoor
  2748     00B3                     l2330:
  2749                           
  2750                           ;main.c: 139:             StatusChange = 0;
  2751     00B3  1283               	bcf	3,5	;RP0=0, select bank0
  2752     00B4  1303               	bcf	3,6	;RP1=0, select bank0
  2753     00B5  01A8               	clrf	_StatusChange
  2754     00B6  01A9               	clrf	_StatusChange+1
  2755     00B7                     l2332:
  2756                           
  2757                           ;main.c: 141:         if(doorClose == 1 && doorStatus == 0 && StatusChange == 1){
  2758     00B7  0326               	decf	_doorClose,w
  2759     00B8  0427               	iorwf	_doorClose+1,w
  2760     00B9  1D03               	btfss	3,2
  2761     00BA  28BC               	goto	u2161
  2762     00BB  28BD               	goto	u2160
  2763     00BC                     u2161:
  2764     00BC  283B               	goto	l2298
  2765     00BD                     u2160:
  2766     00BD                     l2334:
  2767     00BD  082A               	movf	_doorStatus,w
  2768     00BE  042B               	iorwf	_doorStatus+1,w
  2769     00BF  1D03               	btfss	3,2
  2770     00C0  28C2               	goto	u2171
  2771     00C1  28C3               	goto	u2170
  2772     00C2                     u2171:
  2773     00C2  283B               	goto	l2298
  2774     00C3                     u2170:
  2775     00C3                     l2336:
  2776     00C3  0328               	decf	_StatusChange,w
  2777     00C4  0429               	iorwf	_StatusChange+1,w
  2778     00C5  1D03               	btfss	3,2
  2779     00C6  28C8               	goto	u2181
  2780     00C7  28C9               	goto	u2180
  2781     00C8                     u2181:
  2782     00C8  283B               	goto	l2298
  2783     00C9                     u2180:
  2784     00C9                     l2338:
  2785                           
  2786                           ;main.c: 142:             openDoor();
  2787     00C9  120A  118A  25C8  120A  118A  	fcall	_openDoor
  2788     00CE                     l2340:
  2789                           
  2790                           ;main.c: 151:             StatusChange = 0;
  2791     00CE  1283               	bcf	3,5	;RP0=0, select bank0
  2792     00CF  1303               	bcf	3,6	;RP1=0, select bank0
  2793     00D0  01A8               	clrf	_StatusChange
  2794     00D1  01A9               	clrf	_StatusChange+1
  2795     00D2  283B               	goto	l2298
  2796     00D3  120A  118A  2812   	ljmp	start
  2797     00D6                     __end_of_main:
  2798                           
  2799                           	psect	text1
  2800     0530                     __ptext1:	
  2801 ;; *************** function _picInit *****************
  2802 ;; Defined at:
  2803 ;;		line 178 in file "main.c"
  2804 ;; Parameters:    Size  Location     Type
  2805 ;;		None
  2806 ;; Auto vars:     Size  Location     Type
  2807 ;;  adcResult       2    0        unsigned int 
  2808 ;; Return value:  Size  Location     Type
  2809 ;;                  1    wreg      void 
  2810 ;; Registers used:
  2811 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2812 ;; Tracked objects:
  2813 ;;		On entry : 0/0
  2814 ;;		On exit  : 0/0
  2815 ;;		Unchanged: 0/0
  2816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2817 ;;      Params:         0       0       0       0       0
  2818 ;;      Locals:         0       0       0       0       0
  2819 ;;      Temps:          0       3       0       0       0
  2820 ;;      Totals:         0       3       0       0       0
  2821 ;;Total ram usage:        3 bytes
  2822 ;; Hardware stack levels used: 1
  2823 ;; Hardware stack levels required when called: 9
  2824 ;; This function calls:
  2825 ;;		_InitUART
  2826 ;;		_LCD_clear
  2827 ;;		_LCD_cursor_set
  2828 ;;		_LCD_init
  2829 ;;		_LCD_write_string
  2830 ;;		_closeDoor
  2831 ;; This function is called by:
  2832 ;;		_main
  2833 ;; This function uses a non-reentrant model
  2834 ;;
  2835                           
  2836     0530                     _picInit:	
  2837                           ;psect for function _picInit
  2838                           
  2839     0530                     l2056:	
  2840                           ;incstack = 0
  2841 ;; hardware stack exceeded
  2842                           ; Regs used in _picInit: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2843                           
  2844                           
  2845                           ;main.c: 179:     TRISBbits.TRISB7 = 1;
  2846     0530  1683               	bsf	3,5	;RP0=1, select bank1
  2847     0531  1303               	bcf	3,6	;RP1=0, select bank1
  2848     0532  1786               	bsf	6,7	;volatile
  2849                           
  2850                           ;main.c: 180:     TRISBbits.TRISB4 = 1;
  2851     0533  1606               	bsf	6,4	;volatile
  2852                           
  2853                           ;main.c: 181:     TRISBbits.TRISB6 = 0;
  2854     0534  1306               	bcf	6,6	;volatile
  2855                           
  2856                           ;main.c: 182:     TRISBbits.TRISB5 = 0;
  2857     0535  1286               	bcf	6,5	;volatile
  2858     0536                     l2058:
  2859                           
  2860                           ;main.c: 183:     ADCON1 = 0x80;
  2861     0536  3080               	movlw	128
  2862     0537  009F               	movwf	31	;volatile
  2863                           
  2864                           ;main.c: 184:     ADCON0 = 0x01;
  2865     0538  3001               	movlw	1
  2866     0539  1283               	bcf	3,5	;RP0=0, select bank0
  2867     053A  1303               	bcf	3,6	;RP1=0, select bank0
  2868     053B  009F               	movwf	31	;volatile
  2869     053C                     l2060:
  2870                           
  2871                           ;main.c: 186:     InitUART();
  2872     053C  120A  118A  271D  120A  118A  	fcall	_InitUART
  2873                           
  2874                           ;main.c: 188:     LCD_init();
  2875     0541  120A  118A  23A3  120A  118A  	fcall	_LCD_init
  2876                           
  2877                           ;main.c: 189:     LCD_clear();
  2878     0546  120A  118A  2735  120A  118A  	fcall	_LCD_clear
  2879     054B                     l2062:
  2880                           
  2881                           ;main.c: 190:     LCD_cursor_set(1, 1);
  2882     054B  1283               	bcf	3,5	;RP0=0, select bank0
  2883     054C  1303               	bcf	3,6	;RP1=0, select bank0
  2884     054D  01D4               	clrf	LCD_cursor_set@column
  2885     054E  0AD4               	incf	LCD_cursor_set@column,f
  2886     054F  3001               	movlw	1
  2887     0550  120A  118A  260F  120A  118A  	fcall	_LCD_cursor_set
  2888     0555                     l2064:
  2889                           
  2890                           ;main.c: 193:     GO_nDONE = 1;
  2891     0555  1283               	bcf	3,5	;RP0=0, select bank0
  2892     0556  1303               	bcf	3,6	;RP1=0, select bank0
  2893     0557  149F               	bsf	31,1	;volatile
  2894     0558                     l273:	
  2895                           ;main.c: 198:     while(GO_nDONE);
  2896                           
  2897     0558  189F               	btfsc	31,1	;volatile
  2898     0559  2D5B               	goto	u1781
  2899     055A  2D5C               	goto	u1780
  2900     055B                     u1781:
  2901     055B  2D58               	goto	l273
  2902     055C                     u1780:
  2903     055C                     l2066:
  2904     055C  081E               	movf	30,w	;volatile
  2905     055D  1683               	bsf	3,5	;RP0=1, select bank1
  2906     055E  1303               	bcf	3,6	;RP1=0, select bank1
  2907     055F  081E               	movf	30,w	;volatile
  2908     0560                     l2068:
  2909                           
  2910                           ;main.c: 202:     LCD_write_string("PIC Initialized");
  2911     0560  3023               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2912     0561  120A  118A  269B  120A  118A  	fcall	_LCD_write_string
  2913     0566                     l2070:
  2914                           
  2915                           ;main.c: 203:     _delay((unsigned long)((1000)*(4000000/4000.0)));
  2916     0566  3006               	movlw	6
  2917     0567  1283               	bcf	3,5	;RP0=0, select bank0
  2918     0568  1303               	bcf	3,6	;RP1=0, select bank0
  2919     0569  00DB               	movwf	??_picInit+2
  2920     056A  3013               	movlw	19
  2921     056B  00DA               	movwf	??_picInit+1
  2922     056C  30AD               	movlw	173
  2923     056D  00D9               	movwf	??_picInit
  2924     056E                     u2197:
  2925     056E  0BD9               	decfsz	??_picInit,f
  2926     056F  2D6E               	goto	u2197
  2927     0570  0BDA               	decfsz	??_picInit+1,f
  2928     0571  2D6E               	goto	u2197
  2929     0572  0BDB               	decfsz	??_picInit+2,f
  2930     0573  2D6E               	goto	u2197
  2931     0574                     l2072:
  2932                           
  2933                           ;main.c: 204:     LCD_clear();
  2934     0574  120A  118A  2735  120A  118A  	fcall	_LCD_clear
  2935     0579                     l2074:
  2936                           
  2937                           ;main.c: 205:     closeDoor();
  2938     0579  120A  118A  241A  120A  118A  	fcall	_closeDoor
  2939     057E                     l276:
  2940     057E  0008               	return
  2941     057F                     __end_of_picInit:
  2942                           
  2943                           	psect	text2
  2944     041A                     __ptext2:	
  2945 ;; *************** function _closeDoor *****************
  2946 ;; Defined at:
  2947 ;;		line 224 in file "main.c"
  2948 ;; Parameters:    Size  Location     Type
  2949 ;;		None
  2950 ;; Auto vars:     Size  Location     Type
  2951 ;;		None
  2952 ;; Return value:  Size  Location     Type
  2953 ;;                  1    wreg      void 
  2954 ;; Registers used:
  2955 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2956 ;; Tracked objects:
  2957 ;;		On entry : 0/0
  2958 ;;		On exit  : 0/0
  2959 ;;		Unchanged: 0/0
  2960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2961 ;;      Params:         0       0       0       0       0
  2962 ;;      Locals:         0       0       0       0       0
  2963 ;;      Temps:          0       3       0       0       0
  2964 ;;      Totals:         0       3       0       0       0
  2965 ;;Total ram usage:        3 bytes
  2966 ;; Hardware stack levels used: 1
  2967 ;; Hardware stack levels required when called: 8
  2968 ;; This function calls:
  2969 ;;		_LCD_clear
  2970 ;;		_LCD_cursor_set
  2971 ;;		_LCD_write_string
  2972 ;; This function is called by:
  2973 ;;		_main
  2974 ;;		_picInit
  2975 ;; This function uses a non-reentrant model
  2976 ;;
  2977                           
  2978     041A                     _closeDoor:	
  2979                           ;psect for function _closeDoor
  2980                           
  2981     041A                     l1916:	
  2982                           ;incstack = 0
  2983 ;; hardware stack exceeded
  2984                           ; Regs used in _closeDoor: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2985                           
  2986                           
  2987                           ;main.c: 225:     LCD_clear();
  2988     041A  120A  118A  2735  120A  118A  	fcall	_LCD_clear
  2989     041F                     l1918:
  2990                           
  2991                           ;main.c: 226:     LCD_cursor_set(1, 1);
  2992     041F  1283               	bcf	3,5	;RP0=0, select bank0
  2993     0420  1303               	bcf	3,6	;RP1=0, select bank0
  2994     0421  01D4               	clrf	LCD_cursor_set@column
  2995     0422  0AD4               	incf	LCD_cursor_set@column,f
  2996     0423  3001               	movlw	1
  2997     0424  120A  118A  260F  120A  118A  	fcall	_LCD_cursor_set
  2998     0429                     l1920:
  2999                           
  3000                           ;main.c: 227:     LCD_write_string("IR Checking");
  3001     0429  3065               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  3002     042A  120A  118A  269B  120A  118A  	fcall	_LCD_write_string
  3003     042F                     l1922:
  3004                           
  3005                           ;main.c: 228:     if(PORTBbits.RB7 != 0){
  3006     042F  1283               	bcf	3,5	;RP0=0, select bank0
  3007     0430  1303               	bcf	3,6	;RP1=0, select bank0
  3008     0431  1F86               	btfss	6,7	;volatile
  3009     0432  2C34               	goto	u1631
  3010     0433  2C35               	goto	u1630
  3011     0434                     u1631:
  3012     0434  2C39               	goto	l1926
  3013     0435                     u1630:
  3014     0435                     l283:	
  3015                           ;main.c: 231:         }
  3016                           
  3017                           
  3018                           ;main.c: 229:         while(PORTBbits.RB7 != 0){
  3019     0435  1B86               	btfsc	6,7	;volatile
  3020     0436  2C38               	goto	u1641
  3021     0437  2C39               	goto	u1640
  3022     0438                     u1641:
  3023     0438  2C35               	goto	l283
  3024     0439                     u1640:
  3025     0439                     l1926:
  3026                           
  3027                           ;main.c: 233:     LCD_clear();
  3028     0439  120A  118A  2735  120A  118A  	fcall	_LCD_clear
  3029     043E                     l1928:
  3030                           
  3031                           ;main.c: 234:     doorStatus = 0;
  3032     043E  1283               	bcf	3,5	;RP0=0, select bank0
  3033     043F  1303               	bcf	3,6	;RP1=0, select bank0
  3034     0440  01AA               	clrf	_doorStatus
  3035     0441  01AB               	clrf	_doorStatus+1
  3036     0442                     l1930:
  3037                           
  3038                           ;main.c: 235:     LCD_cursor_set(1, 1);
  3039     0442  01D4               	clrf	LCD_cursor_set@column
  3040     0443  0AD4               	incf	LCD_cursor_set@column,f
  3041     0444  3001               	movlw	1
  3042     0445  120A  118A  260F  120A  118A  	fcall	_LCD_cursor_set
  3043     044A                     l1932:
  3044                           
  3045                           ;main.c: 236:     LCD_write_string("Door Closing");
  3046     044A  3040               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  3047     044B  120A  118A  269B  120A  118A  	fcall	_LCD_write_string
  3048     0450                     l1934:
  3049                           
  3050                           ;main.c: 237:     PORTBbits.RB6 = 0;
  3051     0450  1283               	bcf	3,5	;RP0=0, select bank0
  3052     0451  1303               	bcf	3,6	;RP1=0, select bank0
  3053     0452  1306               	bcf	6,6	;volatile
  3054     0453                     l1936:
  3055                           
  3056                           ;main.c: 238:     PORTBbits.RB5 = 1;
  3057     0453  1686               	bsf	6,5	;volatile
  3058     0454                     l1938:
  3059                           
  3060                           ;main.c: 239:     _delay((unsigned long)((750)*(4000000/4000.0)));
  3061     0454  3004               	movlw	4
  3062     0455  1283               	bcf	3,5	;RP0=0, select bank0
  3063     0456  1303               	bcf	3,6	;RP1=0, select bank0
  3064     0457  00D8               	movwf	??_closeDoor+2
  3065     0458  30CF               	movlw	207
  3066     0459  00D7               	movwf	??_closeDoor+1
  3067     045A  3001               	movlw	1
  3068     045B  00D6               	movwf	??_closeDoor
  3069     045C                     u2207:
  3070     045C  0BD6               	decfsz	??_closeDoor,f
  3071     045D  2C5C               	goto	u2207
  3072     045E  0BD7               	decfsz	??_closeDoor+1,f
  3073     045F  2C5C               	goto	u2207
  3074     0460  0BD8               	decfsz	??_closeDoor+2,f
  3075     0461  2C5C               	goto	u2207
  3076     0462                     l1940:
  3077                           
  3078                           ;main.c: 240:     LCD_clear();
  3079     0462  120A  118A  2735  120A  118A  	fcall	_LCD_clear
  3080     0467                     l1942:
  3081                           
  3082                           ;main.c: 241:     LCD_cursor_set(1, 1);
  3083     0467  1283               	bcf	3,5	;RP0=0, select bank0
  3084     0468  1303               	bcf	3,6	;RP1=0, select bank0
  3085     0469  01D4               	clrf	LCD_cursor_set@column
  3086     046A  0AD4               	incf	LCD_cursor_set@column,f
  3087     046B  3001               	movlw	1
  3088     046C  120A  118A  260F  120A  118A  	fcall	_LCD_cursor_set
  3089     0471                     l1944:
  3090                           
  3091                           ;main.c: 242:     LCD_write_string("Door Closed");
  3092     0471  3059               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  3093     0472  120A  118A  269B  120A  118A  	fcall	_LCD_write_string
  3094     0477                     l1946:
  3095                           
  3096                           ;main.c: 243:     PORTBbits.RB6 = 0;
  3097     0477  1283               	bcf	3,5	;RP0=0, select bank0
  3098     0478  1303               	bcf	3,6	;RP1=0, select bank0
  3099     0479  1306               	bcf	6,6	;volatile
  3100     047A                     l1948:
  3101                           
  3102                           ;main.c: 244:     PORTBbits.RB5 = 0;
  3103     047A  1286               	bcf	6,5	;volatile
  3104     047B                     l1950:
  3105                           
  3106                           ;main.c: 245:     StatusChange = 0;
  3107     047B  01A8               	clrf	_StatusChange
  3108     047C  01A9               	clrf	_StatusChange+1
  3109     047D                     l286:
  3110     047D  0008               	return
  3111     047E                     __end_of_closeDoor:
  3112                           
  3113                           	psect	text3
  3114     03A3                     __ptext3:	
  3115 ;; *************** function _LCD_init *****************
  3116 ;; Defined at:
  3117 ;;		line 18 in file "LCD_init.c"
  3118 ;; Parameters:    Size  Location     Type
  3119 ;;		None
  3120 ;; Auto vars:     Size  Location     Type
  3121 ;;		None
  3122 ;; Return value:  Size  Location     Type
  3123 ;;                  1    wreg      void 
  3124 ;; Registers used:
  3125 ;;		wreg, status,2, status,0, pclath, cstack
  3126 ;; Tracked objects:
  3127 ;;		On entry : 0/0
  3128 ;;		On exit  : 0/0
  3129 ;;		Unchanged: 0/0
  3130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3131 ;;      Params:         0       0       0       0       0
  3132 ;;      Locals:         0       0       0       0       0
  3133 ;;      Temps:          0       2       0       0       0
  3134 ;;      Totals:         0       2       0       0       0
  3135 ;;Total ram usage:        2 bytes
  3136 ;; Hardware stack levels used: 1
  3137 ;; Hardware stack levels required when called: 8
  3138 ;; This function calls:
  3139 ;;		_LCD_clear
  3140 ;;		_LCD_pulse_clock
  3141 ;;		_LCD_write_command
  3142 ;; This function is called by:
  3143 ;;		_picInit
  3144 ;; This function uses a non-reentrant model
  3145 ;;
  3146                           
  3147     03A3                     _LCD_init:	
  3148                           ;psect for function _LCD_init
  3149                           
  3150     03A3                     l1878:	
  3151                           ;incstack = 0
  3152 ;; hardware stack exceeded
  3153                           ; Regs used in _LCD_init: [wreg+status,2+status,0+pclath+cstack]
  3154                           
  3155                           
  3156                           ;LCD_init.c: 21:     TRISDbits.TRISD2 = 0; PORTDbits.RD2 = 0;
  3157     03A3  1683               	bsf	3,5	;RP0=1, select bank1
  3158     03A4  1303               	bcf	3,6	;RP1=0, select bank1
  3159     03A5  1108               	bcf	8,2	;volatile
  3160     03A6  1283               	bcf	3,5	;RP0=0, select bank0
  3161     03A7  1303               	bcf	3,6	;RP1=0, select bank0
  3162     03A8  1108               	bcf	8,2	;volatile
  3163                           
  3164                           ;LCD_init.c: 22:     TRISDbits.TRISD3 = 0; PORTDbits.RD3 = 0;
  3165     03A9  1683               	bsf	3,5	;RP0=1, select bank1
  3166     03AA  1303               	bcf	3,6	;RP1=0, select bank1
  3167     03AB  1188               	bcf	8,3	;volatile
  3168     03AC  1283               	bcf	3,5	;RP0=0, select bank0
  3169     03AD  1303               	bcf	3,6	;RP1=0, select bank0
  3170     03AE  1188               	bcf	8,3	;volatile
  3171                           
  3172                           ;LCD_init.c: 23:     TRISDbits.TRISD4 = 0; PORTDbits.RD4 = 0;
  3173     03AF  1683               	bsf	3,5	;RP0=1, select bank1
  3174     03B0  1303               	bcf	3,6	;RP1=0, select bank1
  3175     03B1  1208               	bcf	8,4	;volatile
  3176     03B2  1283               	bcf	3,5	;RP0=0, select bank0
  3177     03B3  1303               	bcf	3,6	;RP1=0, select bank0
  3178     03B4  1208               	bcf	8,4	;volatile
  3179                           
  3180                           ;LCD_init.c: 24:     TRISDbits.TRISD5 = 0; PORTDbits.RD5 = 0;
  3181     03B5  1683               	bsf	3,5	;RP0=1, select bank1
  3182     03B6  1303               	bcf	3,6	;RP1=0, select bank1
  3183     03B7  1288               	bcf	8,5	;volatile
  3184     03B8  1283               	bcf	3,5	;RP0=0, select bank0
  3185     03B9  1303               	bcf	3,6	;RP1=0, select bank0
  3186     03BA  1288               	bcf	8,5	;volatile
  3187                           
  3188                           ;LCD_init.c: 25:     TRISDbits.TRISD6 = 0; PORTDbits.RD6 = 0;
  3189     03BB  1683               	bsf	3,5	;RP0=1, select bank1
  3190     03BC  1303               	bcf	3,6	;RP1=0, select bank1
  3191     03BD  1308               	bcf	8,6	;volatile
  3192     03BE  1283               	bcf	3,5	;RP0=0, select bank0
  3193     03BF  1303               	bcf	3,6	;RP1=0, select bank0
  3194     03C0  1308               	bcf	8,6	;volatile
  3195                           
  3196                           ;LCD_init.c: 26:     TRISDbits.TRISD7 = 0; PORTDbits.RD7 = 0;
  3197     03C1  1683               	bsf	3,5	;RP0=1, select bank1
  3198     03C2  1303               	bcf	3,6	;RP1=0, select bank1
  3199     03C3  1388               	bcf	8,7	;volatile
  3200     03C4  1283               	bcf	3,5	;RP0=0, select bank0
  3201     03C5  1303               	bcf	3,6	;RP1=0, select bank0
  3202     03C6  1388               	bcf	8,7	;volatile
  3203     03C7                     l1880:
  3204                           
  3205                           ;LCD_init.c: 33:     _delay((unsigned long)((60)*(4000000/4000.0)));
  3206     03C7  304E               	movlw	78
  3207     03C8  1283               	bcf	3,5	;RP0=0, select bank0
  3208     03C9  1303               	bcf	3,6	;RP1=0, select bank0
  3209     03CA  00D6               	movwf	??_LCD_init+1
  3210     03CB  30EA               	movlw	234
  3211     03CC  00D5               	movwf	??_LCD_init
  3212     03CD                     u2217:
  3213     03CD  0BD5               	decfsz	??_LCD_init,f
  3214     03CE  2BCD               	goto	u2217
  3215     03CF  0BD6               	decfsz	??_LCD_init+1,f
  3216     03D0  2BCD               	goto	u2217
  3217     03D1  0000               	nop
  3218     03D2                     l1882:
  3219                           
  3220                           ;LCD_init.c: 36:     PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; PORTDbits.
      +                          RD4 = 1;
  3221     03D2  1283               	bcf	3,5	;RP0=0, select bank0
  3222     03D3  1303               	bcf	3,6	;RP1=0, select bank0
  3223     03D4  1388               	bcf	8,7	;volatile
  3224     03D5                     l1884:
  3225     03D5  1308               	bcf	8,6	;volatile
  3226     03D6                     l1886:
  3227     03D6  1688               	bsf	8,5	;volatile
  3228     03D7                     l1888:
  3229     03D7  1608               	bsf	8,4	;volatile
  3230     03D8                     l1890:
  3231                           
  3232                           ;LCD_init.c: 39:     LCD_pulse_clock();
  3233     03D8  120A  118A  2763  120A  118A  	fcall	_LCD_pulse_clock
  3234     03DD                     l1892:
  3235                           
  3236                           ;LCD_init.c: 42:     _delay((unsigned long)((6)*(4000000/4000.0)));
  3237     03DD  3008               	movlw	8
  3238     03DE  1283               	bcf	3,5	;RP0=0, select bank0
  3239     03DF  1303               	bcf	3,6	;RP1=0, select bank0
  3240     03E0  00D6               	movwf	??_LCD_init+1
  3241     03E1  30C9               	movlw	201
  3242     03E2  00D5               	movwf	??_LCD_init
  3243     03E3                     u2227:
  3244     03E3  0BD5               	decfsz	??_LCD_init,f
  3245     03E4  2BE3               	goto	u2227
  3246     03E5  0BD6               	decfsz	??_LCD_init+1,f
  3247     03E6  2BE3               	goto	u2227
  3248                           
  3249                           ;LCD_init.c: 45:     LCD_pulse_clock();
  3250     03E7  120A  118A  2763  120A  118A  	fcall	_LCD_pulse_clock
  3251     03EC                     l1894:
  3252                           
  3253                           ;LCD_init.c: 48:     _delay((unsigned long)((150)*(4000000/4000000.0)));
  3254     03EC  3031               	movlw	49
  3255     03ED  1283               	bcf	3,5	;RP0=0, select bank0
  3256     03EE  1303               	bcf	3,6	;RP1=0, select bank0
  3257     03EF  00D5               	movwf	??_LCD_init
  3258     03F0                     u2237:
  3259     03F0  0BD5               	decfsz	??_LCD_init,f
  3260     03F1  2BF0               	goto	u2237
  3261     03F2                     l1896:
  3262                           
  3263                           ;LCD_init.c: 51:     LCD_pulse_clock();
  3264     03F2  120A  118A  2763  120A  118A  	fcall	_LCD_pulse_clock
  3265     03F7                     l1898:
  3266                           
  3267                           ;LCD_init.c: 54:     PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; PORTDbits.
      +                          RD4 = 0;
  3268     03F7  1283               	bcf	3,5	;RP0=0, select bank0
  3269     03F8  1303               	bcf	3,6	;RP1=0, select bank0
  3270     03F9  1388               	bcf	8,7	;volatile
  3271     03FA                     l1900:
  3272     03FA  1308               	bcf	8,6	;volatile
  3273     03FB                     l1902:
  3274     03FB  1688               	bsf	8,5	;volatile
  3275     03FC                     l1904:
  3276     03FC  1208               	bcf	8,4	;volatile
  3277     03FD                     l1906:
  3278                           
  3279                           ;LCD_init.c: 57:     LCD_pulse_clock();
  3280     03FD  120A  118A  2763  120A  118A  	fcall	_LCD_pulse_clock
  3281     0402                     l1908:
  3282                           
  3283                           ;LCD_init.c: 60:     LCD_write_command(0x28);
  3284     0402  3028               	movlw	40
  3285     0403  120A  118A  216A  120A  118A  	fcall	_LCD_write_command
  3286     0408                     l1910:
  3287                           
  3288                           ;LCD_init.c: 61:     LCD_write_command(LCD_display_control);
  3289     0408  087C               	movf	_LCD_display_control,w
  3290     0409  120A  118A  216A  120A  118A  	fcall	_LCD_write_command
  3291     040E                     l1912:
  3292                           
  3293                           ;LCD_init.c: 62:     LCD_write_command(LCD_entry_mode);
  3294     040E  087D               	movf	_LCD_entry_mode,w
  3295     040F  120A  118A  216A  120A  118A  	fcall	_LCD_write_command
  3296     0414                     l1914:
  3297                           
  3298                           ;LCD_init.c: 63:     LCD_clear();
  3299     0414  120A  118A  2735  120A  118A  	fcall	_LCD_clear
  3300     0419                     l103:
  3301     0419  0008               	return
  3302     041A                     __end_of_LCD_init:
  3303                           
  3304                           	psect	text4
  3305     071D                     __ptext4:	
  3306 ;; *************** function _InitUART *****************
  3307 ;; Defined at:
  3308 ;;		line 10 in file "esp8266.c"
  3309 ;; Parameters:    Size  Location     Type
  3310 ;;		None
  3311 ;; Auto vars:     Size  Location     Type
  3312 ;;		None
  3313 ;; Return value:  Size  Location     Type
  3314 ;;                  1    wreg      void 
  3315 ;; Registers used:
  3316 ;;		status,2
  3317 ;; Tracked objects:
  3318 ;;		On entry : 0/0
  3319 ;;		On exit  : 0/0
  3320 ;;		Unchanged: 0/0
  3321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3322 ;;      Params:         0       0       0       0       0
  3323 ;;      Locals:         0       0       0       0       0
  3324 ;;      Temps:          0       0       0       0       0
  3325 ;;      Totals:         0       0       0       0       0
  3326 ;;Total ram usage:        0 bytes
  3327 ;; Hardware stack levels used: 1
  3328 ;; Hardware stack levels required when called: 5
  3329 ;; This function calls:
  3330 ;;		Nothing
  3331 ;; This function is called by:
  3332 ;;		_picInit
  3333 ;; This function uses a non-reentrant model
  3334 ;;
  3335                           
  3336     071D                     _InitUART:	
  3337                           ;psect for function _InitUART
  3338                           
  3339     071D                     l1952:	
  3340                           ;incstack = 0
  3341                           ; Regs used in _InitUART: [status,2]
  3342                           
  3343                           
  3344                           ;esp8266.c: 13:     TRISC6 = 0;
  3345     071D  1683               	bsf	3,5	;RP0=1, select bank1
  3346     071E  1303               	bcf	3,6	;RP1=0, select bank1
  3347     071F  1307               	bcf	7,6	;volatile
  3348                           
  3349                           ;esp8266.c: 14:     TRISC7 = 1;
  3350     0720  1787               	bsf	7,7	;volatile
  3351                           
  3352                           ;esp8266.c: 16:     TXSTAbits.BRGH = 1;
  3353     0721  1518               	bsf	24,2	;volatile
  3354     0722                     l1954:
  3355                           
  3356                           ;esp8266.c: 17:     SPBRG = 0;
  3357     0722  0199               	clrf	25	;volatile
  3358     0723                     l1956:
  3359                           
  3360                           ;esp8266.c: 19:     TXSTAbits.SYNC = 0;
  3361     0723  1218               	bcf	24,4	;volatile
  3362     0724                     l1958:
  3363                           
  3364                           ;esp8266.c: 20:     RCSTAbits.SPEN = 1;
  3365     0724  1283               	bcf	3,5	;RP0=0, select bank0
  3366     0725  1303               	bcf	3,6	;RP1=0, select bank0
  3367     0726  1798               	bsf	24,7	;volatile
  3368     0727                     l1960:
  3369                           
  3370                           ;esp8266.c: 22:     TXSTAbits.TXEN = 1;
  3371     0727  1683               	bsf	3,5	;RP0=1, select bank1
  3372     0728  1303               	bcf	3,6	;RP1=0, select bank1
  3373     0729  1698               	bsf	24,5	;volatile
  3374     072A                     l1962:
  3375                           
  3376                           ;esp8266.c: 23:     TXSTAbits.TX9 = 0;
  3377     072A  1318               	bcf	24,6	;volatile
  3378     072B                     l1964:
  3379                           
  3380                           ;esp8266.c: 25:     RCSTAbits.CREN = 1;
  3381     072B  1283               	bcf	3,5	;RP0=0, select bank0
  3382     072C  1303               	bcf	3,6	;RP1=0, select bank0
  3383     072D  1618               	bsf	24,4	;volatile
  3384     072E                     l1966:
  3385                           
  3386                           ;esp8266.c: 27:     RCSTAbits.RX9 = 0;
  3387     072E  1318               	bcf	24,6	;volatile
  3388     072F                     l1968:
  3389                           
  3390                           ;esp8266.c: 30:     PIE1bits.RCIE = 1;
  3391     072F  1683               	bsf	3,5	;RP0=1, select bank1
  3392     0730  1303               	bcf	3,6	;RP1=0, select bank1
  3393     0731  168C               	bsf	12,5	;volatile
  3394     0732                     l1970:
  3395                           
  3396                           ;esp8266.c: 31:     PEIE = 1;
  3397     0732  170B               	bsf	11,6	;volatile
  3398     0733                     l1972:
  3399                           
  3400                           ;esp8266.c: 32:     GIE = 1;
  3401     0733  178B               	bsf	11,7	;volatile
  3402     0734                     l328:
  3403     0734  0008               	return
  3404     0735                     __end_of_InitUART:
  3405                           
  3406                           	psect	text5
  3407     05C8                     __ptext5:	
  3408 ;; *************** function _openDoor *****************
  3409 ;; Defined at:
  3410 ;;		line 208 in file "main.c"
  3411 ;; Parameters:    Size  Location     Type
  3412 ;;		None
  3413 ;; Auto vars:     Size  Location     Type
  3414 ;;		None
  3415 ;; Return value:  Size  Location     Type
  3416 ;;                  1    wreg      void 
  3417 ;; Registers used:
  3418 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3419 ;; Tracked objects:
  3420 ;;		On entry : 0/0
  3421 ;;		On exit  : 0/0
  3422 ;;		Unchanged: 0/0
  3423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3424 ;;      Params:         0       0       0       0       0
  3425 ;;      Locals:         0       0       0       0       0
  3426 ;;      Temps:          0       3       0       0       0
  3427 ;;      Totals:         0       3       0       0       0
  3428 ;;Total ram usage:        3 bytes
  3429 ;; Hardware stack levels used: 1
  3430 ;; Hardware stack levels required when called: 8
  3431 ;; This function calls:
  3432 ;;		_LCD_clear
  3433 ;;		_LCD_cursor_set
  3434 ;;		_LCD_write_string
  3435 ;; This function is called by:
  3436 ;;		_main
  3437 ;; This function uses a non-reentrant model
  3438 ;;
  3439                           
  3440     05C8                     _openDoor:	
  3441                           ;psect for function _openDoor
  3442                           
  3443     05C8                     l2076:	
  3444                           ;incstack = 0
  3445 ;; hardware stack exceeded
  3446                           ; Regs used in _openDoor: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3447                           
  3448                           
  3449                           ;main.c: 209:     LCD_clear();
  3450     05C8  120A  118A  2735  120A  118A  	fcall	_LCD_clear
  3451     05CD                     l2078:
  3452                           
  3453                           ;main.c: 210:     doorStatus = 1;
  3454     05CD  3001               	movlw	1
  3455     05CE  1283               	bcf	3,5	;RP0=0, select bank0
  3456     05CF  1303               	bcf	3,6	;RP1=0, select bank0
  3457     05D0  00AA               	movwf	_doorStatus
  3458     05D1  3000               	movlw	0
  3459     05D2  00AB               	movwf	_doorStatus+1
  3460     05D3                     l2080:
  3461                           
  3462                           ;main.c: 211:     LCD_cursor_set(1, 1);
  3463     05D3  01D4               	clrf	LCD_cursor_set@column
  3464     05D4  0AD4               	incf	LCD_cursor_set@column,f
  3465     05D5  3001               	movlw	1
  3466     05D6  120A  118A  260F  120A  118A  	fcall	_LCD_cursor_set
  3467     05DB                     l2082:
  3468                           
  3469                           ;main.c: 212:     LCD_write_string("Door Opening");
  3470     05DB  3033               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  3471     05DC  120A  118A  269B  120A  118A  	fcall	_LCD_write_string
  3472     05E1                     l2084:
  3473                           
  3474                           ;main.c: 213:     PORTBbits.RB6 = 1;
  3475     05E1  1283               	bcf	3,5	;RP0=0, select bank0
  3476     05E2  1303               	bcf	3,6	;RP1=0, select bank0
  3477     05E3  1706               	bsf	6,6	;volatile
  3478     05E4                     l2086:
  3479                           
  3480                           ;main.c: 214:     PORTBbits.RB5 = 0;
  3481     05E4  1286               	bcf	6,5	;volatile
  3482     05E5                     l2088:
  3483                           
  3484                           ;main.c: 215:     _delay((unsigned long)((750)*(4000000/4000.0)));
  3485     05E5  3004               	movlw	4
  3486     05E6  1283               	bcf	3,5	;RP0=0, select bank0
  3487     05E7  1303               	bcf	3,6	;RP1=0, select bank0
  3488     05E8  00D8               	movwf	??_openDoor+2
  3489     05E9  30CF               	movlw	207
  3490     05EA  00D7               	movwf	??_openDoor+1
  3491     05EB  3001               	movlw	1
  3492     05EC  00D6               	movwf	??_openDoor
  3493     05ED                     u2247:
  3494     05ED  0BD6               	decfsz	??_openDoor,f
  3495     05EE  2DED               	goto	u2247
  3496     05EF  0BD7               	decfsz	??_openDoor+1,f
  3497     05F0  2DED               	goto	u2247
  3498     05F1  0BD8               	decfsz	??_openDoor+2,f
  3499     05F2  2DED               	goto	u2247
  3500     05F3                     l2090:
  3501                           
  3502                           ;main.c: 216:     LCD_clear();
  3503     05F3  120A  118A  2735  120A  118A  	fcall	_LCD_clear
  3504     05F8                     l2092:
  3505                           
  3506                           ;main.c: 217:     LCD_cursor_set(1, 1);
  3507     05F8  1283               	bcf	3,5	;RP0=0, select bank0
  3508     05F9  1303               	bcf	3,6	;RP1=0, select bank0
  3509     05FA  01D4               	clrf	LCD_cursor_set@column
  3510     05FB  0AD4               	incf	LCD_cursor_set@column,f
  3511     05FC  3001               	movlw	1
  3512     05FD  120A  118A  260F  120A  118A  	fcall	_LCD_cursor_set
  3513                           
  3514                           ;main.c: 218:     LCD_write_string("Door Opened");
  3515     0602  304D               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  3516     0603  120A  118A  269B  120A  118A  	fcall	_LCD_write_string
  3517     0608                     l2094:
  3518                           
  3519                           ;main.c: 219:     PORTBbits.RB6 = 1;
  3520     0608  1283               	bcf	3,5	;RP0=0, select bank0
  3521     0609  1303               	bcf	3,6	;RP1=0, select bank0
  3522     060A  1706               	bsf	6,6	;volatile
  3523     060B                     l2096:
  3524                           
  3525                           ;main.c: 220:     PORTBbits.RB5 = 1;
  3526     060B  1686               	bsf	6,5	;volatile
  3527     060C                     l2098:
  3528                           
  3529                           ;main.c: 221:     StatusChange = 0;
  3530     060C  01A8               	clrf	_StatusChange
  3531     060D  01A9               	clrf	_StatusChange+1
  3532     060E                     l279:
  3533     060E  0008               	return
  3534     060F                     __end_of_openDoor:
  3535                           
  3536                           	psect	text6
  3537     069B                     __ptext6:	
  3538 ;; *************** function _LCD_write_string *****************
  3539 ;; Defined at:
  3540 ;;		line 9 in file "LCD_write_string.c"
  3541 ;; Parameters:    Size  Location     Type
  3542 ;;  string          1    wreg     PTR unsigned char 
  3543 ;;		 -> STR_9(17), STR_6(12), STR_5(13), STR_4(12), 
  3544 ;;		 -> STR_3(12), STR_2(13), STR_1(16), 
  3545 ;; Auto vars:     Size  Location     Type
  3546 ;;  string          1    9[BANK0 ] PTR unsigned char 
  3547 ;;		 -> STR_9(17), STR_6(12), STR_5(13), STR_4(12), 
  3548 ;;		 -> STR_3(12), STR_2(13), STR_1(16), 
  3549 ;;  i               1    8[BANK0 ] unsigned char 
  3550 ;; Return value:  Size  Location     Type
  3551 ;;                  1    wreg      void 
  3552 ;; Registers used:
  3553 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3554 ;; Tracked objects:
  3555 ;;		On entry : 0/0
  3556 ;;		On exit  : 0/0
  3557 ;;		Unchanged: 0/0
  3558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3559 ;;      Params:         0       0       0       0       0
  3560 ;;      Locals:         0       2       0       0       0
  3561 ;;      Temps:          0       0       0       0       0
  3562 ;;      Totals:         0       2       0       0       0
  3563 ;;Total ram usage:        2 bytes
  3564 ;; Hardware stack levels used: 1
  3565 ;; Hardware stack levels required when called: 7
  3566 ;; This function calls:
  3567 ;;		_LCD_write_data
  3568 ;; This function is called by:
  3569 ;;		_picInit
  3570 ;;		_openDoor
  3571 ;;		_closeDoor
  3572 ;; This function uses a non-reentrant model
  3573 ;;
  3574                           
  3575     069B                     _LCD_write_string:	
  3576                           ;psect for function _LCD_write_string
  3577                           
  3578                           
  3579                           ;incstack = 0
  3580 ;; hardware stack exceeded
  3581                           ; Regs used in _LCD_write_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3582                           ;LCD_write_string@string stored from wreg
  3583     069B  1283               	bcf	3,5	;RP0=0, select bank0
  3584     069C  1303               	bcf	3,6	;RP1=0, select bank0
  3585     069D  00D5               	movwf	LCD_write_string@string
  3586     069E                     l1794:
  3587                           
  3588                           ;LCD_write_string.c: 12:     for(uint8_t i=0 ; string[i] != '\0' ; i++){
  3589     069E  01D4               	clrf	LCD_write_string@i
  3590     069F  2EB3               	goto	l1800
  3591     06A0                     l1796:
  3592                           
  3593                           ;LCD_write_string.c: 13:         LCD_write_data(string[i]);
  3594     06A0  0854               	movf	LCD_write_string@i,w
  3595     06A1  0755               	addwf	LCD_write_string@string,w
  3596     06A2  0084               	movwf	4
  3597     06A3  120A  118A  2326  120A  118A  	fcall	stringdir
  3598     06A8  120A  118A  20D6  120A  118A  	fcall	_LCD_write_data
  3599     06AD                     l1798:
  3600                           
  3601                           ;LCD_write_string.c: 14:     }
  3602     06AD  3001               	movlw	1
  3603     06AE  00FF               	movwf	btemp+1
  3604     06AF  087F               	movf	btemp+1,w
  3605     06B0  1283               	bcf	3,5	;RP0=0, select bank0
  3606     06B1  1303               	bcf	3,6	;RP1=0, select bank0
  3607     06B2  07D4               	addwf	LCD_write_string@i,f
  3608     06B3                     l1800:
  3609     06B3  0854               	movf	LCD_write_string@i,w
  3610     06B4  0755               	addwf	LCD_write_string@string,w
  3611     06B5  0084               	movwf	4
  3612     06B6  120A  118A  2326  120A  118A  	fcall	stringdir
  3613     06BB  3A00               	xorlw	0
  3614     06BC  1D03               	skipz
  3615     06BD  2EBF               	goto	u1421
  3616     06BE  2EC0               	goto	u1420
  3617     06BF                     u1421:
  3618     06BF  2EA0               	goto	l1796
  3619     06C0                     u1420:
  3620     06C0                     l171:
  3621     06C0  0008               	return
  3622     06C1                     __end_of_LCD_write_string:
  3623                           
  3624                           	psect	text7
  3625     00D6                     __ptext7:	
  3626 ;; *************** function _LCD_write_data *****************
  3627 ;; Defined at:
  3628 ;;		line 9 in file "LCD_write_data.c"
  3629 ;; Parameters:    Size  Location     Type
  3630 ;;  data            1    wreg     unsigned char 
  3631 ;; Auto vars:     Size  Location     Type
  3632 ;;  data            1    7[BANK0 ] unsigned char 
  3633 ;; Return value:  Size  Location     Type
  3634 ;;                  1    wreg      void 
  3635 ;; Registers used:
  3636 ;;		wreg, status,2, status,0, pclath, cstack
  3637 ;; Tracked objects:
  3638 ;;		On entry : 0/0
  3639 ;;		On exit  : 0/0
  3640 ;;		Unchanged: 0/0
  3641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3642 ;;      Params:         0       0       0       0       0
  3643 ;;      Locals:         0       1       0       0       0
  3644 ;;      Temps:          0       2       0       0       0
  3645 ;;      Totals:         0       3       0       0       0
  3646 ;;Total ram usage:        3 bytes
  3647 ;; Hardware stack levels used: 1
  3648 ;; Hardware stack levels required when called: 6
  3649 ;; This function calls:
  3650 ;;		_LCD_pulse_clock
  3651 ;; This function is called by:
  3652 ;;		_LCD_write_string
  3653 ;;		_LCD_add_character
  3654 ;;		_LCD_write_char
  3655 ;;		_LCD_write_float
  3656 ;;		_LCD_write_variable
  3657 ;; This function uses a non-reentrant model
  3658 ;;
  3659                           
  3660     00D6                     _LCD_write_data:	
  3661                           ;psect for function _LCD_write_data
  3662                           
  3663                           
  3664                           ;incstack = 0
  3665 ;; hardware stack exceeded
  3666                           ; Regs used in _LCD_write_data: [wreg+status,2+status,0+pclath+cstack]
  3667                           ;LCD_write_data@data stored from wreg
  3668     00D6  1283               	bcf	3,5	;RP0=0, select bank0
  3669     00D7  1303               	bcf	3,6	;RP1=0, select bank0
  3670     00D8  00D3               	movwf	LCD_write_data@data
  3671     00D9                     l1748:
  3672                           
  3673                           ;LCD_write_data.c: 11:     PORTDbits.RD2 = 1;
  3674     00D9  1508               	bsf	8,2	;volatile
  3675     00DA                     l1750:
  3676                           
  3677                           ;LCD_write_data.c: 14:     PORTDbits.RD7 = (data & 0b10000000) >> 7;
  3678     00DA  0853               	movf	LCD_write_data@data,w
  3679     00DB  00D1               	movwf	??_LCD_write_data
  3680     00DC  3007               	movlw	7
  3681     00DD                     u1325:
  3682     00DD  1003               	clrc
  3683     00DE  0CD1               	rrf	??_LCD_write_data,f
  3684     00DF  3EFF               	addlw	-1
  3685     00E0  1D03               	skipz
  3686     00E1  28DD               	goto	u1325
  3687     00E2  0851               	movf	??_LCD_write_data,w
  3688     00E3  3901               	andlw	1
  3689     00E4  00D2               	movwf	??_LCD_write_data+1
  3690     00E5  0CD2               	rrf	??_LCD_write_data+1,f
  3691     00E6  0CD2               	rrf	??_LCD_write_data+1,f
  3692     00E7  0808               	movf	8,w	;volatile
  3693     00E8  0652               	xorwf	??_LCD_write_data+1,w
  3694     00E9  397F               	andlw	-129
  3695     00EA  0652               	xorwf	??_LCD_write_data+1,w
  3696     00EB  0088               	movwf	8	;volatile
  3697                           
  3698                           ;LCD_write_data.c: 15:     PORTDbits.RD6 = (data & 0b01000000) >> 6;
  3699     00EC  0853               	movf	LCD_write_data@data,w
  3700     00ED  00D1               	movwf	??_LCD_write_data
  3701     00EE  3006               	movlw	6
  3702     00EF                     u1335:
  3703     00EF  1003               	clrc
  3704     00F0  0CD1               	rrf	??_LCD_write_data,f
  3705     00F1  3EFF               	addlw	-1
  3706     00F2  1D03               	skipz
  3707     00F3  28EF               	goto	u1335
  3708     00F4  0851               	movf	??_LCD_write_data,w
  3709     00F5  3901               	andlw	1
  3710     00F6  00D2               	movwf	??_LCD_write_data+1
  3711     00F7  0ED2               	swapf	??_LCD_write_data+1,f
  3712     00F8  0DD2               	rlf	??_LCD_write_data+1,f
  3713     00F9  0DD2               	rlf	??_LCD_write_data+1,f
  3714     00FA  0808               	movf	8,w	;volatile
  3715     00FB  0652               	xorwf	??_LCD_write_data+1,w
  3716     00FC  39BF               	andlw	-65
  3717     00FD  0652               	xorwf	??_LCD_write_data+1,w
  3718     00FE  0088               	movwf	8	;volatile
  3719                           
  3720                           ;LCD_write_data.c: 16:     PORTDbits.RD5 = (data & 0b00100000) >> 5;
  3721     00FF  0853               	movf	LCD_write_data@data,w
  3722     0100  00D1               	movwf	??_LCD_write_data
  3723     0101  3005               	movlw	5
  3724     0102                     u1345:
  3725     0102  1003               	clrc
  3726     0103  0CD1               	rrf	??_LCD_write_data,f
  3727     0104  3EFF               	addlw	-1
  3728     0105  1D03               	skipz
  3729     0106  2902               	goto	u1345
  3730     0107  0851               	movf	??_LCD_write_data,w
  3731     0108  3901               	andlw	1
  3732     0109  00D2               	movwf	??_LCD_write_data+1
  3733     010A  0ED2               	swapf	??_LCD_write_data+1,f
  3734     010B  0DD2               	rlf	??_LCD_write_data+1,f
  3735     010C  0808               	movf	8,w	;volatile
  3736     010D  0652               	xorwf	??_LCD_write_data+1,w
  3737     010E  39DF               	andlw	-33
  3738     010F  0652               	xorwf	??_LCD_write_data+1,w
  3739     0110  0088               	movwf	8	;volatile
  3740                           
  3741                           ;LCD_write_data.c: 17:     PORTDbits.RD4 = (data & 0b00010000) >> 4;
  3742     0111  0853               	movf	LCD_write_data@data,w
  3743     0112  00D1               	movwf	??_LCD_write_data
  3744     0113  3004               	movlw	4
  3745     0114                     u1355:
  3746     0114  1003               	clrc
  3747     0115  0CD1               	rrf	??_LCD_write_data,f
  3748     0116  3EFF               	addlw	-1
  3749     0117  1D03               	skipz
  3750     0118  2914               	goto	u1355
  3751     0119  0851               	movf	??_LCD_write_data,w
  3752     011A  3901               	andlw	1
  3753     011B  00D2               	movwf	??_LCD_write_data+1
  3754     011C  0ED2               	swapf	??_LCD_write_data+1,f
  3755     011D  0808               	movf	8,w	;volatile
  3756     011E  0652               	xorwf	??_LCD_write_data+1,w
  3757     011F  39EF               	andlw	-17
  3758     0120  0652               	xorwf	??_LCD_write_data+1,w
  3759     0121  0088               	movwf	8	;volatile
  3760     0122                     l1752:
  3761                           
  3762                           ;LCD_write_data.c: 20:     LCD_pulse_clock();
  3763     0122  120A  118A  2763  120A  118A  	fcall	_LCD_pulse_clock
  3764     0127                     l1754:
  3765                           
  3766                           ;LCD_write_data.c: 23:     PORTDbits.RD7 = (data & 0b00001000) >> 3;
  3767     0127  1283               	bcf	3,5	;RP0=0, select bank0
  3768     0128  1303               	bcf	3,6	;RP1=0, select bank0
  3769     0129  0853               	movf	LCD_write_data@data,w
  3770     012A  00D1               	movwf	??_LCD_write_data
  3771     012B  3003               	movlw	3
  3772     012C                     u1365:
  3773     012C  1003               	clrc
  3774     012D  0CD1               	rrf	??_LCD_write_data,f
  3775     012E  3EFF               	addlw	-1
  3776     012F  1D03               	skipz
  3777     0130  292C               	goto	u1365
  3778     0131  0851               	movf	??_LCD_write_data,w
  3779     0132  3901               	andlw	1
  3780     0133  00D2               	movwf	??_LCD_write_data+1
  3781     0134  0CD2               	rrf	??_LCD_write_data+1,f
  3782     0135  0CD2               	rrf	??_LCD_write_data+1,f
  3783     0136  0808               	movf	8,w	;volatile
  3784     0137  0652               	xorwf	??_LCD_write_data+1,w
  3785     0138  397F               	andlw	-129
  3786     0139  0652               	xorwf	??_LCD_write_data+1,w
  3787     013A  0088               	movwf	8	;volatile
  3788     013B                     l1756:
  3789                           
  3790                           ;LCD_write_data.c: 24:     PORTDbits.RD6 = (data & 0b00000100) >> 2;
  3791     013B  0853               	movf	LCD_write_data@data,w
  3792     013C  00D1               	movwf	??_LCD_write_data
  3793     013D  3002               	movlw	2
  3794     013E                     u1375:
  3795     013E  1003               	clrc
  3796     013F  0CD1               	rrf	??_LCD_write_data,f
  3797     0140  3EFF               	addlw	-1
  3798     0141  1D03               	skipz
  3799     0142  293E               	goto	u1375
  3800     0143  0851               	movf	??_LCD_write_data,w
  3801     0144  3901               	andlw	1
  3802     0145  00D2               	movwf	??_LCD_write_data+1
  3803     0146  0ED2               	swapf	??_LCD_write_data+1,f
  3804     0147  0DD2               	rlf	??_LCD_write_data+1,f
  3805     0148  0DD2               	rlf	??_LCD_write_data+1,f
  3806     0149  0808               	movf	8,w	;volatile
  3807     014A  0652               	xorwf	??_LCD_write_data+1,w
  3808     014B  39BF               	andlw	-65
  3809     014C  0652               	xorwf	??_LCD_write_data+1,w
  3810     014D  0088               	movwf	8	;volatile
  3811     014E                     l1758:
  3812                           
  3813                           ;LCD_write_data.c: 25:     PORTDbits.RD5 = (data & 0b00000010) >> 1;
  3814     014E  0853               	movf	LCD_write_data@data,w
  3815     014F  00D1               	movwf	??_LCD_write_data
  3816     0150  1003               	clrc
  3817     0151  0C51               	rrf	??_LCD_write_data,w
  3818     0152  3901               	andlw	1
  3819     0153  00D2               	movwf	??_LCD_write_data+1
  3820     0154  0ED2               	swapf	??_LCD_write_data+1,f
  3821     0155  0DD2               	rlf	??_LCD_write_data+1,f
  3822     0156  0808               	movf	8,w	;volatile
  3823     0157  0652               	xorwf	??_LCD_write_data+1,w
  3824     0158  39DF               	andlw	-33
  3825     0159  0652               	xorwf	??_LCD_write_data+1,w
  3826     015A  0088               	movwf	8	;volatile
  3827     015B                     l1760:
  3828                           
  3829                           ;LCD_write_data.c: 26:     PORTDbits.RD4 = (data & 0b00000001) ;
  3830     015B  0853               	movf	LCD_write_data@data,w
  3831     015C  3901               	andlw	1
  3832     015D  00D1               	movwf	??_LCD_write_data
  3833     015E  0ED1               	swapf	??_LCD_write_data,f
  3834     015F  0808               	movf	8,w	;volatile
  3835     0160  0651               	xorwf	??_LCD_write_data,w
  3836     0161  39EF               	andlw	-17
  3837     0162  0651               	xorwf	??_LCD_write_data,w
  3838     0163  0088               	movwf	8	;volatile
  3839     0164                     l1762:
  3840                           
  3841                           ;LCD_write_data.c: 29:     LCD_pulse_clock();
  3842     0164  120A  118A  2763  120A  118A  	fcall	_LCD_pulse_clock
  3843     0169                     l146:
  3844     0169  0008               	return
  3845     016A                     __end_of_LCD_write_data:
  3846                           
  3847                           	psect	text8
  3848     060F                     __ptext8:	
  3849 ;; *************** function _LCD_cursor_set *****************
  3850 ;; Defined at:
  3851 ;;		line 9 in file "LCD_cursor_set.c"
  3852 ;; Parameters:    Size  Location     Type
  3853 ;;  row             1    wreg     unsigned char 
  3854 ;;  column          1    8[BANK0 ] unsigned char 
  3855 ;; Auto vars:     Size  Location     Type
  3856 ;;  row             1    9[BANK0 ] unsigned char 
  3857 ;; Return value:  Size  Location     Type
  3858 ;;                  1    wreg      void 
  3859 ;; Registers used:
  3860 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3861 ;; Tracked objects:
  3862 ;;		On entry : 0/0
  3863 ;;		On exit  : 0/0
  3864 ;;		Unchanged: 0/0
  3865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3866 ;;      Params:         0       1       0       0       0
  3867 ;;      Locals:         0       1       0       0       0
  3868 ;;      Temps:          0       0       0       0       0
  3869 ;;      Totals:         0       2       0       0       0
  3870 ;;Total ram usage:        2 bytes
  3871 ;; Hardware stack levels used: 1
  3872 ;; Hardware stack levels required when called: 7
  3873 ;; This function calls:
  3874 ;;		_LCD_write_command
  3875 ;; This function is called by:
  3876 ;;		_main
  3877 ;;		_picInit
  3878 ;;		_openDoor
  3879 ;;		_closeDoor
  3880 ;;		_LCD_add_character
  3881 ;; This function uses a non-reentrant model
  3882 ;;
  3883                           
  3884     060F                     _LCD_cursor_set:	
  3885                           ;psect for function _LCD_cursor_set
  3886                           
  3887                           
  3888                           ;incstack = 0
  3889 ;; hardware stack exceeded
  3890                           ; Regs used in _LCD_cursor_set: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3891                           ;LCD_cursor_set@row stored from wreg
  3892     060F  1283               	bcf	3,5	;RP0=0, select bank0
  3893     0610  1303               	bcf	3,6	;RP1=0, select bank0
  3894     0611  00D5               	movwf	LCD_cursor_set@row
  3895     0612                     l1770:
  3896                           
  3897                           ;LCD_cursor_set.c: 12:     if(row == 1) column += (0x80 - 1);
  3898     0612  0355               	decf	LCD_cursor_set@row,w
  3899     0613  1D03               	btfss	3,2
  3900     0614  2E16               	goto	u1381
  3901     0615  2E17               	goto	u1380
  3902     0616                     u1381:
  3903     0616  2E1B               	goto	l1774
  3904     0617                     u1380:
  3905     0617                     l1772:
  3906     0617  307F               	movlw	127
  3907     0618  00FF               	movwf	btemp+1
  3908     0619  087F               	movf	btemp+1,w
  3909     061A  07D4               	addwf	LCD_cursor_set@column,f
  3910     061B                     l1774:
  3911                           
  3912                           ;LCD_cursor_set.c: 13:     if(row == 2) column += (0xC0 - 1);
  3913     061B  3002               	movlw	2
  3914     061C  0655               	xorwf	LCD_cursor_set@row,w
  3915     061D  1D03               	btfss	3,2
  3916     061E  2E20               	goto	u1391
  3917     061F  2E21               	goto	u1390
  3918     0620                     u1391:
  3919     0620  2E25               	goto	l1778
  3920     0621                     u1390:
  3921     0621                     l1776:
  3922     0621  30BF               	movlw	191
  3923     0622  00FF               	movwf	btemp+1
  3924     0623  087F               	movf	btemp+1,w
  3925     0624  07D4               	addwf	LCD_cursor_set@column,f
  3926     0625                     l1778:
  3927                           
  3928                           ;LCD_cursor_set.c: 14:     if(row == 3) column += (0x80 + 19);
  3929     0625  3003               	movlw	3
  3930     0626  0655               	xorwf	LCD_cursor_set@row,w
  3931     0627  1D03               	btfss	3,2
  3932     0628  2E2A               	goto	u1401
  3933     0629  2E2B               	goto	u1400
  3934     062A                     u1401:
  3935     062A  2E2F               	goto	l1782
  3936     062B                     u1400:
  3937     062B                     l1780:
  3938     062B  3093               	movlw	147
  3939     062C  00FF               	movwf	btemp+1
  3940     062D  087F               	movf	btemp+1,w
  3941     062E  07D4               	addwf	LCD_cursor_set@column,f
  3942     062F                     l1782:
  3943                           
  3944                           ;LCD_cursor_set.c: 15:     if(row == 4) column += (0xC0 + 19);
  3945     062F  3004               	movlw	4
  3946     0630  0655               	xorwf	LCD_cursor_set@row,w
  3947     0631  1D03               	btfss	3,2
  3948     0632  2E34               	goto	u1411
  3949     0633  2E35               	goto	u1410
  3950     0634                     u1411:
  3951     0634  2E39               	goto	l1786
  3952     0635                     u1410:
  3953     0635                     l1784:
  3954     0635  30D3               	movlw	211
  3955     0636  00FF               	movwf	btemp+1
  3956     0637  087F               	movf	btemp+1,w
  3957     0638  07D4               	addwf	LCD_cursor_set@column,f
  3958     0639                     l1786:
  3959                           
  3960                           ;LCD_cursor_set.c: 18:    LCD_write_command(column);
  3961     0639  0854               	movf	LCD_cursor_set@column,w
  3962     063A  120A  118A  216A  120A  118A  	fcall	_LCD_write_command
  3963     063F                     l84:
  3964     063F  0008               	return
  3965     0640                     __end_of_LCD_cursor_set:
  3966                           
  3967                           	psect	text9
  3968     0735                     __ptext9:	
  3969 ;; *************** function _LCD_clear *****************
  3970 ;; Defined at:
  3971 ;;		line 7 in file "LCD_clear.c"
  3972 ;; Parameters:    Size  Location     Type
  3973 ;;		None
  3974 ;; Auto vars:     Size  Location     Type
  3975 ;;		None
  3976 ;; Return value:  Size  Location     Type
  3977 ;;                  1    wreg      void 
  3978 ;; Registers used:
  3979 ;;		wreg, status,2, status,0, pclath, cstack
  3980 ;; Tracked objects:
  3981 ;;		On entry : 0/0
  3982 ;;		On exit  : 0/0
  3983 ;;		Unchanged: 0/0
  3984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3985 ;;      Params:         0       0       0       0       0
  3986 ;;      Locals:         0       0       0       0       0
  3987 ;;      Temps:          0       1       0       0       0
  3988 ;;      Totals:         0       1       0       0       0
  3989 ;;Total ram usage:        1 bytes
  3990 ;; Hardware stack levels used: 1
  3991 ;; Hardware stack levels required when called: 7
  3992 ;; This function calls:
  3993 ;;		_LCD_write_command
  3994 ;; This function is called by:
  3995 ;;		_LCD_init
  3996 ;;		_picInit
  3997 ;;		_openDoor
  3998 ;;		_closeDoor
  3999 ;; This function uses a non-reentrant model
  4000 ;;
  4001                           
  4002     0735                     _LCD_clear:	
  4003                           ;psect for function _LCD_clear
  4004                           
  4005     0735                     l1788:	
  4006                           ;incstack = 0
  4007 ;; hardware stack exceeded
  4008                           ; Regs used in _LCD_clear: [wreg+status,2+status,0+pclath+cstack]
  4009                           
  4010                           
  4011                           ;LCD_clear.c: 10:     LCD_write_command(0x01);
  4012     0735  3001               	movlw	1
  4013     0736  120A  118A  216A  120A  118A  	fcall	_LCD_write_command
  4014     073B                     l1790:
  4015                           
  4016                           ;LCD_clear.c: 13:     _delay((unsigned long)(((1600 - 40))*(4000000/4000000.0)));
  4017     073B  30DE               	movlw	222
  4018     073C  1283               	bcf	3,5	;RP0=0, select bank0
  4019     073D  1303               	bcf	3,6	;RP1=0, select bank0
  4020     073E  00D4               	movwf	??_LCD_clear
  4021     073F                     u2257:
  4022     073F  2F40               	nop2
  4023     0740  2F41               	nop2
  4024     0741  0BD4               	decfsz	??_LCD_clear,f
  4025     0742  2F3F               	goto	u2257
  4026     0743  2F44               	nop2
  4027     0744  0000               	nop
  4028     0745                     l1792:
  4029                           
  4030                           ;LCD_clear.c: 16:     LCD_write_command(LCD_entry_mode);
  4031     0745  087D               	movf	_LCD_entry_mode,w
  4032     0746  120A  118A  216A  120A  118A  	fcall	_LCD_write_command
  4033     074B                     l20:
  4034     074B  0008               	return
  4035     074C                     __end_of_LCD_clear:
  4036                           
  4037                           	psect	text10
  4038     016A                     __ptext10:	
  4039 ;; *************** function _LCD_write_command *****************
  4040 ;; Defined at:
  4041 ;;		line 9 in file "LCD_write_command.c"
  4042 ;; Parameters:    Size  Location     Type
  4043 ;;  command         1    wreg     unsigned char 
  4044 ;; Auto vars:     Size  Location     Type
  4045 ;;  command         1    7[BANK0 ] unsigned char 
  4046 ;; Return value:  Size  Location     Type
  4047 ;;                  1    wreg      void 
  4048 ;; Registers used:
  4049 ;;		wreg, status,2, status,0, pclath, cstack
  4050 ;; Tracked objects:
  4051 ;;		On entry : 0/0
  4052 ;;		On exit  : 0/0
  4053 ;;		Unchanged: 0/0
  4054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4055 ;;      Params:         0       0       0       0       0
  4056 ;;      Locals:         0       1       0       0       0
  4057 ;;      Temps:          0       2       0       0       0
  4058 ;;      Totals:         0       3       0       0       0
  4059 ;;Total ram usage:        3 bytes
  4060 ;; Hardware stack levels used: 1
  4061 ;; Hardware stack levels required when called: 6
  4062 ;; This function calls:
  4063 ;;		_LCD_pulse_clock
  4064 ;; This function is called by:
  4065 ;;		_LCD_clear
  4066 ;;		_LCD_cursor_set
  4067 ;;		_LCD_init
  4068 ;;		_LCD_add_character
  4069 ;;		_LCD_configure_cursor_blink
  4070 ;;		_LCD_configure_cursor_display
  4071 ;;		_LCD_configure_entry_id
  4072 ;;		_LCD_configure_entry_shift
  4073 ;;		_LCD_configure_lcd_display
  4074 ;;		_LCD_cursor_decrement
  4075 ;;		_LCD_cursor_increment
  4076 ;;		_LCD_shift_left
  4077 ;;		_LCD_shift_reset
  4078 ;;		_LCD_shift_right
  4079 ;; This function uses a non-reentrant model
  4080 ;;
  4081                           
  4082     016A                     _LCD_write_command:	
  4083                           ;psect for function _LCD_write_command
  4084                           
  4085                           
  4086                           ;incstack = 0
  4087 ;; hardware stack exceeded
  4088                           ; Regs used in _LCD_write_command: [wreg+status,2+status,0+pclath+cstack]
  4089                           ;LCD_write_command@command stored from wreg
  4090     016A  1283               	bcf	3,5	;RP0=0, select bank0
  4091     016B  1303               	bcf	3,6	;RP1=0, select bank0
  4092     016C  00D3               	movwf	LCD_write_command@command
  4093     016D                     l1732:
  4094                           
  4095                           ;LCD_write_command.c: 11:     PORTDbits.RD2 = 0;
  4096     016D  1108               	bcf	8,2	;volatile
  4097     016E                     l1734:
  4098                           
  4099                           ;LCD_write_command.c: 14:     PORTDbits.RD7 = (command & 0b10000000) >> 7;
  4100     016E  0853               	movf	LCD_write_command@command,w
  4101     016F  00D1               	movwf	??_LCD_write_command
  4102     0170  3007               	movlw	7
  4103     0171                     u1265:
  4104     0171  1003               	clrc
  4105     0172  0CD1               	rrf	??_LCD_write_command,f
  4106     0173  3EFF               	addlw	-1
  4107     0174  1D03               	skipz
  4108     0175  2971               	goto	u1265
  4109     0176  0851               	movf	??_LCD_write_command,w
  4110     0177  3901               	andlw	1
  4111     0178  00D2               	movwf	??_LCD_write_command+1
  4112     0179  0CD2               	rrf	??_LCD_write_command+1,f
  4113     017A  0CD2               	rrf	??_LCD_write_command+1,f
  4114     017B  0808               	movf	8,w	;volatile
  4115     017C  0652               	xorwf	??_LCD_write_command+1,w
  4116     017D  397F               	andlw	-129
  4117     017E  0652               	xorwf	??_LCD_write_command+1,w
  4118     017F  0088               	movwf	8	;volatile
  4119                           
  4120                           ;LCD_write_command.c: 15:     PORTDbits.RD6 = (command & 0b01000000) >> 6;
  4121     0180  0853               	movf	LCD_write_command@command,w
  4122     0181  00D1               	movwf	??_LCD_write_command
  4123     0182  3006               	movlw	6
  4124     0183                     u1275:
  4125     0183  1003               	clrc
  4126     0184  0CD1               	rrf	??_LCD_write_command,f
  4127     0185  3EFF               	addlw	-1
  4128     0186  1D03               	skipz
  4129     0187  2983               	goto	u1275
  4130     0188  0851               	movf	??_LCD_write_command,w
  4131     0189  3901               	andlw	1
  4132     018A  00D2               	movwf	??_LCD_write_command+1
  4133     018B  0ED2               	swapf	??_LCD_write_command+1,f
  4134     018C  0DD2               	rlf	??_LCD_write_command+1,f
  4135     018D  0DD2               	rlf	??_LCD_write_command+1,f
  4136     018E  0808               	movf	8,w	;volatile
  4137     018F  0652               	xorwf	??_LCD_write_command+1,w
  4138     0190  39BF               	andlw	-65
  4139     0191  0652               	xorwf	??_LCD_write_command+1,w
  4140     0192  0088               	movwf	8	;volatile
  4141                           
  4142                           ;LCD_write_command.c: 16:     PORTDbits.RD5 = (command & 0b00100000) >> 5;
  4143     0193  0853               	movf	LCD_write_command@command,w
  4144     0194  00D1               	movwf	??_LCD_write_command
  4145     0195  3005               	movlw	5
  4146     0196                     u1285:
  4147     0196  1003               	clrc
  4148     0197  0CD1               	rrf	??_LCD_write_command,f
  4149     0198  3EFF               	addlw	-1
  4150     0199  1D03               	skipz
  4151     019A  2996               	goto	u1285
  4152     019B  0851               	movf	??_LCD_write_command,w
  4153     019C  3901               	andlw	1
  4154     019D  00D2               	movwf	??_LCD_write_command+1
  4155     019E  0ED2               	swapf	??_LCD_write_command+1,f
  4156     019F  0DD2               	rlf	??_LCD_write_command+1,f
  4157     01A0  0808               	movf	8,w	;volatile
  4158     01A1  0652               	xorwf	??_LCD_write_command+1,w
  4159     01A2  39DF               	andlw	-33
  4160     01A3  0652               	xorwf	??_LCD_write_command+1,w
  4161     01A4  0088               	movwf	8	;volatile
  4162                           
  4163                           ;LCD_write_command.c: 17:     PORTDbits.RD4 = (command & 0b00010000) >> 4;
  4164     01A5  0853               	movf	LCD_write_command@command,w
  4165     01A6  00D1               	movwf	??_LCD_write_command
  4166     01A7  3004               	movlw	4
  4167     01A8                     u1295:
  4168     01A8  1003               	clrc
  4169     01A9  0CD1               	rrf	??_LCD_write_command,f
  4170     01AA  3EFF               	addlw	-1
  4171     01AB  1D03               	skipz
  4172     01AC  29A8               	goto	u1295
  4173     01AD  0851               	movf	??_LCD_write_command,w
  4174     01AE  3901               	andlw	1
  4175     01AF  00D2               	movwf	??_LCD_write_command+1
  4176     01B0  0ED2               	swapf	??_LCD_write_command+1,f
  4177     01B1  0808               	movf	8,w	;volatile
  4178     01B2  0652               	xorwf	??_LCD_write_command+1,w
  4179     01B3  39EF               	andlw	-17
  4180     01B4  0652               	xorwf	??_LCD_write_command+1,w
  4181     01B5  0088               	movwf	8	;volatile
  4182     01B6                     l1736:
  4183                           
  4184                           ;LCD_write_command.c: 20:     LCD_pulse_clock();
  4185     01B6  120A  118A  2763  120A  118A  	fcall	_LCD_pulse_clock
  4186     01BB                     l1738:
  4187                           
  4188                           ;LCD_write_command.c: 23:     PORTDbits.RD7 = (command & 0b00001000) >> 3;
  4189     01BB  1283               	bcf	3,5	;RP0=0, select bank0
  4190     01BC  1303               	bcf	3,6	;RP1=0, select bank0
  4191     01BD  0853               	movf	LCD_write_command@command,w
  4192     01BE  00D1               	movwf	??_LCD_write_command
  4193     01BF  3003               	movlw	3
  4194     01C0                     u1305:
  4195     01C0  1003               	clrc
  4196     01C1  0CD1               	rrf	??_LCD_write_command,f
  4197     01C2  3EFF               	addlw	-1
  4198     01C3  1D03               	skipz
  4199     01C4  29C0               	goto	u1305
  4200     01C5  0851               	movf	??_LCD_write_command,w
  4201     01C6  3901               	andlw	1
  4202     01C7  00D2               	movwf	??_LCD_write_command+1
  4203     01C8  0CD2               	rrf	??_LCD_write_command+1,f
  4204     01C9  0CD2               	rrf	??_LCD_write_command+1,f
  4205     01CA  0808               	movf	8,w	;volatile
  4206     01CB  0652               	xorwf	??_LCD_write_command+1,w
  4207     01CC  397F               	andlw	-129
  4208     01CD  0652               	xorwf	??_LCD_write_command+1,w
  4209     01CE  0088               	movwf	8	;volatile
  4210     01CF                     l1740:
  4211                           
  4212                           ;LCD_write_command.c: 24:     PORTDbits.RD6 = (command & 0b00000100) >> 2;
  4213     01CF  0853               	movf	LCD_write_command@command,w
  4214     01D0  00D1               	movwf	??_LCD_write_command
  4215     01D1  3002               	movlw	2
  4216     01D2                     u1315:
  4217     01D2  1003               	clrc
  4218     01D3  0CD1               	rrf	??_LCD_write_command,f
  4219     01D4  3EFF               	addlw	-1
  4220     01D5  1D03               	skipz
  4221     01D6  29D2               	goto	u1315
  4222     01D7  0851               	movf	??_LCD_write_command,w
  4223     01D8  3901               	andlw	1
  4224     01D9  00D2               	movwf	??_LCD_write_command+1
  4225     01DA  0ED2               	swapf	??_LCD_write_command+1,f
  4226     01DB  0DD2               	rlf	??_LCD_write_command+1,f
  4227     01DC  0DD2               	rlf	??_LCD_write_command+1,f
  4228     01DD  0808               	movf	8,w	;volatile
  4229     01DE  0652               	xorwf	??_LCD_write_command+1,w
  4230     01DF  39BF               	andlw	-65
  4231     01E0  0652               	xorwf	??_LCD_write_command+1,w
  4232     01E1  0088               	movwf	8	;volatile
  4233     01E2                     l1742:
  4234                           
  4235                           ;LCD_write_command.c: 25:     PORTDbits.RD5 = (command & 0b00000010) >> 1;
  4236     01E2  0853               	movf	LCD_write_command@command,w
  4237     01E3  00D1               	movwf	??_LCD_write_command
  4238     01E4  1003               	clrc
  4239     01E5  0C51               	rrf	??_LCD_write_command,w
  4240     01E6  3901               	andlw	1
  4241     01E7  00D2               	movwf	??_LCD_write_command+1
  4242     01E8  0ED2               	swapf	??_LCD_write_command+1,f
  4243     01E9  0DD2               	rlf	??_LCD_write_command+1,f
  4244     01EA  0808               	movf	8,w	;volatile
  4245     01EB  0652               	xorwf	??_LCD_write_command+1,w
  4246     01EC  39DF               	andlw	-33
  4247     01ED  0652               	xorwf	??_LCD_write_command+1,w
  4248     01EE  0088               	movwf	8	;volatile
  4249     01EF                     l1744:
  4250                           
  4251                           ;LCD_write_command.c: 26:     PORTDbits.RD4 = (command & 0b00000001) ;
  4252     01EF  0853               	movf	LCD_write_command@command,w
  4253     01F0  3901               	andlw	1
  4254     01F1  00D1               	movwf	??_LCD_write_command
  4255     01F2  0ED1               	swapf	??_LCD_write_command,f
  4256     01F3  0808               	movf	8,w	;volatile
  4257     01F4  0651               	xorwf	??_LCD_write_command,w
  4258     01F5  39EF               	andlw	-17
  4259     01F6  0651               	xorwf	??_LCD_write_command,w
  4260     01F7  0088               	movwf	8	;volatile
  4261     01F8                     l1746:
  4262                           
  4263                           ;LCD_write_command.c: 29:     LCD_pulse_clock();
  4264     01F8  120A  118A  2763  120A  118A  	fcall	_LCD_pulse_clock
  4265     01FD                     l139:
  4266     01FD  0008               	return
  4267     01FE                     __end_of_LCD_write_command:
  4268                           
  4269                           	psect	text11
  4270     0763                     __ptext11:	
  4271 ;; *************** function _LCD_pulse_clock *****************
  4272 ;; Defined at:
  4273 ;;		line 8 in file "LCD_pulse_clock.c"
  4274 ;; Parameters:    Size  Location     Type
  4275 ;;		None
  4276 ;; Auto vars:     Size  Location     Type
  4277 ;;		None
  4278 ;; Return value:  Size  Location     Type
  4279 ;;                  1    wreg      void 
  4280 ;; Registers used:
  4281 ;;		wreg
  4282 ;; Tracked objects:
  4283 ;;		On entry : 0/0
  4284 ;;		On exit  : 0/0
  4285 ;;		Unchanged: 0/0
  4286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4287 ;;      Params:         0       0       0       0       0
  4288 ;;      Locals:         0       0       0       0       0
  4289 ;;      Temps:          0       1       0       0       0
  4290 ;;      Totals:         0       1       0       0       0
  4291 ;;Total ram usage:        1 bytes
  4292 ;; Hardware stack levels used: 1
  4293 ;; Hardware stack levels required when called: 5
  4294 ;; This function calls:
  4295 ;;		Nothing
  4296 ;; This function is called by:
  4297 ;;		_LCD_init
  4298 ;;		_LCD_write_command
  4299 ;;		_LCD_write_data
  4300 ;; This function uses a non-reentrant model
  4301 ;;
  4302                           
  4303     0763                     _LCD_pulse_clock:	
  4304                           ;psect for function _LCD_pulse_clock
  4305                           
  4306     0763                     l1726:	
  4307                           ;incstack = 0
  4308 ;; hardware stack exceeded
  4309                           ; Regs used in _LCD_pulse_clock: [wreg]
  4310                           
  4311                           
  4312                           ;LCD_pulse_clock.c: 10:   PORTDbits.RD3 = 1;
  4313     0763  1283               	bcf	3,5	;RP0=0, select bank0
  4314     0764  1303               	bcf	3,6	;RP1=0, select bank0
  4315     0765  1588               	bsf	8,3	;volatile
  4316     0766                     l1728:
  4317                           
  4318                           ;LCD_pulse_clock.c: 11:   _delay((unsigned long)((40)*(4000000/4000000.0)));
  4319     0766  300C               	movlw	12
  4320     0767  1283               	bcf	3,5	;RP0=0, select bank0
  4321     0768  1303               	bcf	3,6	;RP1=0, select bank0
  4322     0769  00D0               	movwf	??_LCD_pulse_clock
  4323     076A                     u2267:
  4324     076A  0BD0               	decfsz	??_LCD_pulse_clock,f
  4325     076B  2F6A               	goto	u2267
  4326     076C  0000               	nop
  4327     076D                     l1730:
  4328                           
  4329                           ;LCD_pulse_clock.c: 12:   PORTDbits.RD3 = 0;
  4330     076D  1283               	bcf	3,5	;RP0=0, select bank0
  4331     076E  1303               	bcf	3,6	;RP1=0, select bank0
  4332     076F  1188               	bcf	8,3	;volatile
  4333     0770                     l110:
  4334     0770  0008               	return
  4335     0771                     __end_of_LCD_pulse_clock:
  4336                           
  4337                           	psect	text12
  4338     066F                     __ptext12:	
  4339 ;; *************** function _ISR *****************
  4340 ;; Defined at:
  4341 ;;		line 75 in file "main.c"
  4342 ;; Parameters:    Size  Location     Type
  4343 ;;		None
  4344 ;; Auto vars:     Size  Location     Type
  4345 ;;		None
  4346 ;; Return value:  Size  Location     Type
  4347 ;;                  1    wreg      void 
  4348 ;; Registers used:
  4349 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4350 ;; Tracked objects:
  4351 ;;		On entry : 0/0
  4352 ;;		On exit  : 0/0
  4353 ;;		Unchanged: 0/0
  4354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4355 ;;      Params:         0       0       0       0       0
  4356 ;;      Locals:         0       0       0       0       0
  4357 ;;      Temps:          0       4       0       0       0
  4358 ;;      Totals:         0       4       0       0       0
  4359 ;;Total ram usage:        4 bytes
  4360 ;; Hardware stack levels used: 1
  4361 ;; Hardware stack levels required when called: 4
  4362 ;; This function calls:
  4363 ;;		_setDoorStatus
  4364 ;; This function is called by:
  4365 ;;		Interrupt level 1
  4366 ;; This function uses a non-reentrant model
  4367 ;;
  4368                           
  4369     066F                     _ISR:	
  4370                           ;psect for function _ISR
  4371                           
  4372     066F                     i1l2284:
  4373                           
  4374                           ;main.c: 76:     if (PIR1bits.RCIF == 1 && pos < 30) {
  4375     066F  1E8C               	btfss	12,5	;volatile
  4376     0670  2E72               	goto	u203_21
  4377     0671  2E73               	goto	u203_20
  4378     0672                     u203_21:
  4379     0672  2E89               	goto	i1l2294
  4380     0673                     u203_20:
  4381     0673                     i1l2286:
  4382     0673  3000               	movlw	0
  4383     0674  022D               	subwf	_pos+1,w
  4384     0675  301E               	movlw	30
  4385     0676  1903               	skipnz
  4386     0677  022C               	subwf	_pos,w
  4387     0678  1803               	skipnc
  4388     0679  2E7B               	goto	u204_21
  4389     067A  2E7C               	goto	u204_20
  4390     067B                     u204_21:
  4391     067B  2E89               	goto	i1l2294
  4392     067C                     u204_20:
  4393     067C                     i1l2288:
  4394                           
  4395                           ;main.c: 77:         StringReceive[pos] = RCREG;
  4396     067C  082C               	movf	_pos,w
  4397     067D  3E2E               	addlw	(low (_StringReceive| 0))& (0+255)
  4398     067E  0084               	movwf	4
  4399     067F  081A               	movf	26,w	;volatile
  4400     0680  1383               	bcf	3,7	;select IRP bank0
  4401     0681  0080               	movwf	0
  4402     0682                     i1l2290:
  4403                           
  4404                           ;main.c: 78:         pos++;
  4405     0682  3001               	movlw	1
  4406     0683  07AC               	addwf	_pos,f
  4407     0684  1803               	skipnc
  4408     0685  0AAD               	incf	_pos+1,f
  4409     0686  3000               	movlw	0
  4410     0687  07AD               	addwf	_pos+1,f
  4411     0688                     i1l2292:
  4412                           
  4413                           ;main.c: 79:         RCIF = 0;
  4414     0688  128C               	bcf	12,5	;volatile
  4415     0689                     i1l2294:
  4416                           
  4417                           ;main.c: 83:     setDoorStatus();
  4418     0689  120A  118A  24DB  120A  118A  	fcall	_setDoorStatus
  4419     068E                     i1l254:
  4420     068E  1283               	bcf	3,5	;RP0=0, select bank0
  4421     068F  1303               	bcf	3,6	;RP1=0, select bank0
  4422     0690  084F               	movf	??_ISR+3,w
  4423     0691  00FF               	movwf	btemp+1
  4424     0692  084E               	movf	??_ISR+2,w
  4425     0693  008A               	movwf	10
  4426     0694  084D               	movf	??_ISR+1,w
  4427     0695  0084               	movwf	4
  4428     0696  0E4C               	swapf	??_ISR,w
  4429     0697  0083               	movwf	3
  4430     0698  0EFE               	swapf	btemp,f
  4431     0699  0E7E               	swapf	btemp,w
  4432     069A  0009               	retfie
  4433     069B                     __end_of_ISR:
  4434                           
  4435                           	psect	intentry
  4436     0004                     __pintentry:	
  4437                           ;incstack = 0
  4438 ;; hardware stack exceeded
  4439                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4440                           
  4441     0004                     interrupt_function:
  4442     007E                     saved_w	set	btemp
  4443     0004  00FE               	movwf	btemp
  4444     0005  0E03               	swapf	3,w
  4445     0006  1283               	bcf	3,5	;RP0=0, select bank0
  4446     0007  1303               	bcf	3,6	;RP1=0, select bank0
  4447     0008  00CC               	movwf	??_ISR
  4448     0009  0804               	movf	4,w
  4449     000A  00CD               	movwf	??_ISR+1
  4450     000B  080A               	movf	10,w
  4451     000C  00CE               	movwf	??_ISR+2
  4452     000D  087F               	movf	btemp+1,w
  4453     000E  00CF               	movwf	??_ISR+3
  4454     000F  120A  118A  2E6F   	ljmp	_ISR
  4455                           
  4456                           	psect	text13
  4457     04DB                     __ptext13:	
  4458 ;; *************** function _setDoorStatus *****************
  4459 ;; Defined at:
  4460 ;;		line 254 in file "main.c"
  4461 ;; Parameters:    Size  Location     Type
  4462 ;;		None
  4463 ;; Auto vars:     Size  Location     Type
  4464 ;;		None
  4465 ;; Return value:  Size  Location     Type
  4466 ;;                  1    wreg      void 
  4467 ;; Registers used:
  4468 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4469 ;; Tracked objects:
  4470 ;;		On entry : 0/0
  4471 ;;		On exit  : 0/0
  4472 ;;		Unchanged: 0/0
  4473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4474 ;;      Params:         0       0       0       0       0
  4475 ;;      Locals:         0       0       0       0       0
  4476 ;;      Temps:          0       0       0       0       0
  4477 ;;      Totals:         0       0       0       0       0
  4478 ;;Total ram usage:        0 bytes
  4479 ;; Hardware stack levels used: 1
  4480 ;; Hardware stack levels required when called: 3
  4481 ;; This function calls:
  4482 ;;		_ClearStringReceive
  4483 ;;		_strstr
  4484 ;;		i1_LCD_cursor_set
  4485 ;;		i1_LCD_write_string
  4486 ;; This function is called by:
  4487 ;;		_ISR
  4488 ;; This function uses a non-reentrant model
  4489 ;;
  4490                           
  4491     04DB                     _setDoorStatus:	
  4492                           ;psect for function _setDoorStatus
  4493                           
  4494     04DB                     i1l2034:	
  4495                           ;incstack = 0
  4496 ;; hardware stack exceeded
  4497                           ; Regs used in _setDoorStatus: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4498                           
  4499                           
  4500                           ;main.c: 255:     if(strstr(StringReceive, "O") != ((void*)0)){
  4501     04DB  3076               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  4502     04DC  00F6               	movwf	strstr@n
  4503     04DD  302E               	movlw	(low (_StringReceive| 0))& (0+255)
  4504     04DE  120A  118A  257F  120A  118A  	fcall	_strstr
  4505     04E3  3A00               	xorlw	0
  4506     04E4  1903               	skipnz
  4507     04E5  2CE7               	goto	u175_21
  4508     04E6  2CE8               	goto	u175_20
  4509     04E7                     u175_21:
  4510     04E7  2CF7               	goto	i1l2040
  4511     04E8                     u175_20:
  4512     04E8                     i1l2036:
  4513                           
  4514                           ;main.c: 256:         doorClose = 1;
  4515     04E8  3001               	movlw	1
  4516     04E9  1283               	bcf	3,5	;RP0=0, select bank0
  4517     04EA  1303               	bcf	3,6	;RP1=0, select bank0
  4518     04EB  00A6               	movwf	_doorClose
  4519     04EC  3000               	movlw	0
  4520     04ED  00A7               	movwf	_doorClose+1
  4521                           
  4522                           ;main.c: 257:         StatusChange = 1;
  4523     04EE  3001               	movlw	1
  4524     04EF  00A8               	movwf	_StatusChange
  4525     04F0  3000               	movlw	0
  4526     04F1  00A9               	movwf	_StatusChange+1
  4527     04F2                     i1l2038:
  4528                           
  4529                           ;main.c: 258:         ClearStringReceive();
  4530     04F2  120A  118A  26E3  120A  118A  	fcall	_ClearStringReceive
  4531     04F7                     i1l2040:
  4532     04F7  3074               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  4533     04F8  00F6               	movwf	strstr@n
  4534     04F9  302E               	movlw	(low (_StringReceive| 0))& (0+255)
  4535     04FA  120A  118A  257F  120A  118A  	fcall	_strstr
  4536     04FF  3A00               	xorlw	0
  4537     0500  1903               	skipnz
  4538     0501  2D03               	goto	u176_21
  4539     0502  2D04               	goto	u176_20
  4540     0503                     u176_21:
  4541     0503  2D11               	goto	i1l2048
  4542     0504                     u176_20:
  4543     0504                     i1l2042:
  4544                           
  4545                           ;main.c: 260:         doorClose = 0;
  4546     0504  1283               	bcf	3,5	;RP0=0, select bank0
  4547     0505  1303               	bcf	3,6	;RP1=0, select bank0
  4548     0506  01A6               	clrf	_doorClose
  4549     0507  01A7               	clrf	_doorClose+1
  4550     0508                     i1l2044:
  4551                           
  4552                           ;main.c: 261:         StatusChange = 1;
  4553     0508  3001               	movlw	1
  4554     0509  00A8               	movwf	_StatusChange
  4555     050A  3000               	movlw	0
  4556     050B  00A9               	movwf	_StatusChange+1
  4557     050C                     i1l2046:
  4558                           
  4559                           ;main.c: 262:         ClearStringReceive();
  4560     050C  120A  118A  26E3  120A  118A  	fcall	_ClearStringReceive
  4561     0511                     i1l2048:
  4562                           
  4563                           ;main.c: 265:     if(pos >= 30){
  4564     0511  3000               	movlw	0
  4565     0512  1283               	bcf	3,5	;RP0=0, select bank0
  4566     0513  1303               	bcf	3,6	;RP1=0, select bank0
  4567     0514  022D               	subwf	_pos+1,w
  4568     0515  301E               	movlw	30
  4569     0516  1903               	skipnz
  4570     0517  022C               	subwf	_pos,w
  4571     0518  1C03               	skipc
  4572     0519  2D1B               	goto	u177_21
  4573     051A  2D1C               	goto	u177_20
  4574     051B                     u177_21:
  4575     051B  2D2F               	goto	i1l297
  4576     051C                     u177_20:
  4577     051C                     i1l2050:
  4578                           
  4579                           ;main.c: 266:         ClearStringReceive();
  4580     051C  120A  118A  26E3  120A  118A  	fcall	_ClearStringReceive
  4581     0521                     i1l2052:
  4582                           
  4583                           ;main.c: 267:         LCD_cursor_set(2, 1);
  4584     0521  01F4               	clrf	i1LCD_cursor_set@column
  4585     0522  0AF4               	incf	i1LCD_cursor_set@column,f
  4586     0523  3002               	movlw	2
  4587     0524  120A  118A  2640  120A  118A  	fcall	i1_LCD_cursor_set
  4588     0529                     i1l2054:
  4589                           
  4590                           ;main.c: 268:         LCD_write_string("                ");
  4591     0529  3012               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  4592     052A  120A  118A  26C1  120A  118A  	fcall	i1_LCD_write_string
  4593     052F                     i1l297:
  4594     052F  0008               	return
  4595     0530                     __end_of_setDoorStatus:
  4596                           
  4597                           	psect	text14
  4598     06C1                     __ptext14:	
  4599 ;; *************** function i1_LCD_write_string *****************
  4600 ;; Defined at:
  4601 ;;		line 9 in file "LCD_write_string.c"
  4602 ;; Parameters:    Size  Location     Type
  4603 ;;  string          1    wreg     PTR unsigned char 
  4604 ;;		 -> STR_9(17), STR_6(12), STR_5(13), STR_4(12), 
  4605 ;;		 -> STR_3(12), STR_2(13), STR_1(16), 
  4606 ;; Auto vars:     Size  Location     Type
  4607 ;;  string          1    4[COMMON] PTR unsigned char 
  4608 ;;		 -> STR_9(17), STR_6(12), STR_5(13), STR_4(12), 
  4609 ;;		 -> STR_3(12), STR_2(13), STR_1(16), 
  4610 ;;  i               1    5[COMMON] unsigned char 
  4611 ;; Return value:  Size  Location     Type
  4612 ;;                  1    wreg      void 
  4613 ;; Registers used:
  4614 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4615 ;; Tracked objects:
  4616 ;;		On entry : 0/0
  4617 ;;		On exit  : 0/0
  4618 ;;		Unchanged: 0/0
  4619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4620 ;;      Params:         0       0       0       0       0
  4621 ;;      Locals:         2       0       0       0       0
  4622 ;;      Temps:          0       0       0       0       0
  4623 ;;      Totals:         2       0       0       0       0
  4624 ;;Total ram usage:        2 bytes
  4625 ;; Hardware stack levels used: 1
  4626 ;; Hardware stack levels required when called: 2
  4627 ;; This function calls:
  4628 ;;		i1_LCD_write_data
  4629 ;; This function is called by:
  4630 ;;		_setDoorStatus
  4631 ;; This function uses a non-reentrant model
  4632 ;;
  4633                           
  4634     06C1                     i1_LCD_write_string:	
  4635                           ;psect for function i1_LCD_write_string
  4636                           
  4637                           
  4638                           ;incstack = 0
  4639 ;; hardware stack exceeded
  4640                           ; Regs used in i1_LCD_write_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4641                           ;i1LCD_write_string@string stored from wreg
  4642     06C1  00F4               	movwf	i1LCD_write_string@string
  4643     06C2                     i1l2024:
  4644                           
  4645                           ;LCD_write_string.c: 12:     for(uint8_t i=0 ; string[i] != '\0' ; i++){
  4646     06C2  01F5               	clrf	i1LCD_write_string@i
  4647     06C3  2ED5               	goto	i1l2030
  4648     06C4                     i1l2026:
  4649                           
  4650                           ;LCD_write_string.c: 13:         LCD_write_data(string[i]);
  4651     06C4  0875               	movf	i1LCD_write_string@i,w
  4652     06C5  0774               	addwf	i1LCD_write_string@string,w
  4653     06C6  0084               	movwf	4
  4654     06C7  120A  118A  2326  120A  118A  	fcall	stringdir
  4655     06CC  120A  118A  21FE  120A  118A  	fcall	i1_LCD_write_data
  4656     06D1                     i1l2028:
  4657                           
  4658                           ;LCD_write_string.c: 14:     }
  4659     06D1  3001               	movlw	1
  4660     06D2  00FF               	movwf	btemp+1
  4661     06D3  087F               	movf	btemp+1,w
  4662     06D4  07F5               	addwf	i1LCD_write_string@i,f
  4663     06D5                     i1l2030:
  4664     06D5  0875               	movf	i1LCD_write_string@i,w
  4665     06D6  0774               	addwf	i1LCD_write_string@string,w
  4666     06D7  0084               	movwf	4
  4667     06D8  120A  118A  2326  120A  118A  	fcall	stringdir
  4668     06DD  3A00               	xorlw	0
  4669     06DE  1D03               	skipz
  4670     06DF  2EE1               	goto	u174_21
  4671     06E0  2EE2               	goto	u174_20
  4672     06E1                     u174_21:
  4673     06E1  2EC4               	goto	i1l2026
  4674     06E2                     u174_20:
  4675     06E2                     i1l171:
  4676     06E2  0008               	return
  4677     06E3                     __end_ofi1_LCD_write_string:
  4678                           
  4679                           	psect	text15
  4680     01FE                     __ptext15:	
  4681 ;; *************** function i1_LCD_write_data *****************
  4682 ;; Defined at:
  4683 ;;		line 9 in file "LCD_write_data.c"
  4684 ;; Parameters:    Size  Location     Type
  4685 ;;  data            1    wreg     unsigned char 
  4686 ;; Auto vars:     Size  Location     Type
  4687 ;;  data            1    3[COMMON] unsigned char 
  4688 ;; Return value:  Size  Location     Type
  4689 ;;                  1    wreg      void 
  4690 ;; Registers used:
  4691 ;;		wreg, status,2, status,0, pclath, cstack
  4692 ;; Tracked objects:
  4693 ;;		On entry : 0/0
  4694 ;;		On exit  : 0/0
  4695 ;;		Unchanged: 0/0
  4696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4697 ;;      Params:         0       0       0       0       0
  4698 ;;      Locals:         1       0       0       0       0
  4699 ;;      Temps:          2       0       0       0       0
  4700 ;;      Totals:         3       0       0       0       0
  4701 ;;Total ram usage:        3 bytes
  4702 ;; Hardware stack levels used: 1
  4703 ;; Hardware stack levels required when called: 1
  4704 ;; This function calls:
  4705 ;;		i1_LCD_pulse_clock
  4706 ;; This function is called by:
  4707 ;;		i1_LCD_write_string
  4708 ;; This function uses a non-reentrant model
  4709 ;;
  4710                           
  4711     01FE                     i1_LCD_write_data:	
  4712                           ;psect for function i1_LCD_write_data
  4713                           
  4714                           
  4715                           ;incstack = 0
  4716 ;; hardware stack exceeded
  4717                           ; Regs used in i1_LCD_write_data: [wreg+status,2+status,0+pclath+cstack]
  4718                           ;i1LCD_write_data@data stored from wreg
  4719     01FE  00F3               	movwf	i1LCD_write_data@data
  4720     01FF                     i1l1862:
  4721                           
  4722                           ;LCD_write_data.c: 11:     PORTDbits.RD2 = 1;
  4723     01FF  1283               	bcf	3,5	;RP0=0, select bank0
  4724     0200  1303               	bcf	3,6	;RP1=0, select bank0
  4725     0201  1508               	bsf	8,2	;volatile
  4726     0202                     i1l1864:
  4727                           
  4728                           ;LCD_write_data.c: 14:     PORTDbits.RD7 = (data & 0b10000000) >> 7;
  4729     0202  0873               	movf	i1LCD_write_data@data,w
  4730     0203  00F1               	movwf	??i1_LCD_write_data
  4731     0204  3007               	movlw	7
  4732     0205                     u157_25:
  4733     0205  1003               	clrc
  4734     0206  0CF1               	rrf	??i1_LCD_write_data,f
  4735     0207  3EFF               	addlw	-1
  4736     0208  1D03               	skipz
  4737     0209  2A05               	goto	u157_25
  4738     020A  0871               	movf	??i1_LCD_write_data,w
  4739     020B  3901               	andlw	1
  4740     020C  00F2               	movwf	??i1_LCD_write_data+1
  4741     020D  0CF2               	rrf	??i1_LCD_write_data+1,f
  4742     020E  0CF2               	rrf	??i1_LCD_write_data+1,f
  4743     020F  0808               	movf	8,w	;volatile
  4744     0210  0672               	xorwf	??i1_LCD_write_data+1,w
  4745     0211  397F               	andlw	-129
  4746     0212  0672               	xorwf	??i1_LCD_write_data+1,w
  4747     0213  0088               	movwf	8	;volatile
  4748                           
  4749                           ;LCD_write_data.c: 15:     PORTDbits.RD6 = (data & 0b01000000) >> 6;
  4750     0214  0873               	movf	i1LCD_write_data@data,w
  4751     0215  00F1               	movwf	??i1_LCD_write_data
  4752     0216  3006               	movlw	6
  4753     0217                     u158_25:
  4754     0217  1003               	clrc
  4755     0218  0CF1               	rrf	??i1_LCD_write_data,f
  4756     0219  3EFF               	addlw	-1
  4757     021A  1D03               	skipz
  4758     021B  2A17               	goto	u158_25
  4759     021C  0871               	movf	??i1_LCD_write_data,w
  4760     021D  3901               	andlw	1
  4761     021E  00F2               	movwf	??i1_LCD_write_data+1
  4762     021F  0EF2               	swapf	??i1_LCD_write_data+1,f
  4763     0220  0DF2               	rlf	??i1_LCD_write_data+1,f
  4764     0221  0DF2               	rlf	??i1_LCD_write_data+1,f
  4765     0222  0808               	movf	8,w	;volatile
  4766     0223  0672               	xorwf	??i1_LCD_write_data+1,w
  4767     0224  39BF               	andlw	-65
  4768     0225  0672               	xorwf	??i1_LCD_write_data+1,w
  4769     0226  0088               	movwf	8	;volatile
  4770                           
  4771                           ;LCD_write_data.c: 16:     PORTDbits.RD5 = (data & 0b00100000) >> 5;
  4772     0227  0873               	movf	i1LCD_write_data@data,w
  4773     0228  00F1               	movwf	??i1_LCD_write_data
  4774     0229  3005               	movlw	5
  4775     022A                     u159_25:
  4776     022A  1003               	clrc
  4777     022B  0CF1               	rrf	??i1_LCD_write_data,f
  4778     022C  3EFF               	addlw	-1
  4779     022D  1D03               	skipz
  4780     022E  2A2A               	goto	u159_25
  4781     022F  0871               	movf	??i1_LCD_write_data,w
  4782     0230  3901               	andlw	1
  4783     0231  00F2               	movwf	??i1_LCD_write_data+1
  4784     0232  0EF2               	swapf	??i1_LCD_write_data+1,f
  4785     0233  0DF2               	rlf	??i1_LCD_write_data+1,f
  4786     0234  0808               	movf	8,w	;volatile
  4787     0235  0672               	xorwf	??i1_LCD_write_data+1,w
  4788     0236  39DF               	andlw	-33
  4789     0237  0672               	xorwf	??i1_LCD_write_data+1,w
  4790     0238  0088               	movwf	8	;volatile
  4791                           
  4792                           ;LCD_write_data.c: 17:     PORTDbits.RD4 = (data & 0b00010000) >> 4;
  4793     0239  0873               	movf	i1LCD_write_data@data,w
  4794     023A  00F1               	movwf	??i1_LCD_write_data
  4795     023B  3004               	movlw	4
  4796     023C                     u160_25:
  4797     023C  1003               	clrc
  4798     023D  0CF1               	rrf	??i1_LCD_write_data,f
  4799     023E  3EFF               	addlw	-1
  4800     023F  1D03               	skipz
  4801     0240  2A3C               	goto	u160_25
  4802     0241  0871               	movf	??i1_LCD_write_data,w
  4803     0242  3901               	andlw	1
  4804     0243  00F2               	movwf	??i1_LCD_write_data+1
  4805     0244  0EF2               	swapf	??i1_LCD_write_data+1,f
  4806     0245  0808               	movf	8,w	;volatile
  4807     0246  0672               	xorwf	??i1_LCD_write_data+1,w
  4808     0247  39EF               	andlw	-17
  4809     0248  0672               	xorwf	??i1_LCD_write_data+1,w
  4810     0249  0088               	movwf	8	;volatile
  4811     024A                     i1l1866:
  4812                           
  4813                           ;LCD_write_data.c: 20:     LCD_pulse_clock();
  4814     024A  120A  118A  2771  120A  118A  	fcall	i1_LCD_pulse_clock
  4815     024F                     i1l1868:
  4816                           
  4817                           ;LCD_write_data.c: 23:     PORTDbits.RD7 = (data & 0b00001000) >> 3;
  4818     024F  0873               	movf	i1LCD_write_data@data,w
  4819     0250  00F1               	movwf	??i1_LCD_write_data
  4820     0251  3003               	movlw	3
  4821     0252                     u161_25:
  4822     0252  1003               	clrc
  4823     0253  0CF1               	rrf	??i1_LCD_write_data,f
  4824     0254  3EFF               	addlw	-1
  4825     0255  1D03               	skipz
  4826     0256  2A52               	goto	u161_25
  4827     0257  0871               	movf	??i1_LCD_write_data,w
  4828     0258  3901               	andlw	1
  4829     0259  00F2               	movwf	??i1_LCD_write_data+1
  4830     025A  0CF2               	rrf	??i1_LCD_write_data+1,f
  4831     025B  0CF2               	rrf	??i1_LCD_write_data+1,f
  4832     025C  1283               	bcf	3,5	;RP0=0, select bank0
  4833     025D  1303               	bcf	3,6	;RP1=0, select bank0
  4834     025E  0808               	movf	8,w	;volatile
  4835     025F  0672               	xorwf	??i1_LCD_write_data+1,w
  4836     0260  397F               	andlw	-129
  4837     0261  0672               	xorwf	??i1_LCD_write_data+1,w
  4838     0262  0088               	movwf	8	;volatile
  4839     0263                     i1l1870:
  4840                           
  4841                           ;LCD_write_data.c: 24:     PORTDbits.RD6 = (data & 0b00000100) >> 2;
  4842     0263  0873               	movf	i1LCD_write_data@data,w
  4843     0264  00F1               	movwf	??i1_LCD_write_data
  4844     0265  3002               	movlw	2
  4845     0266                     u162_25:
  4846     0266  1003               	clrc
  4847     0267  0CF1               	rrf	??i1_LCD_write_data,f
  4848     0268  3EFF               	addlw	-1
  4849     0269  1D03               	skipz
  4850     026A  2A66               	goto	u162_25
  4851     026B  0871               	movf	??i1_LCD_write_data,w
  4852     026C  3901               	andlw	1
  4853     026D  00F2               	movwf	??i1_LCD_write_data+1
  4854     026E  0EF2               	swapf	??i1_LCD_write_data+1,f
  4855     026F  0DF2               	rlf	??i1_LCD_write_data+1,f
  4856     0270  0DF2               	rlf	??i1_LCD_write_data+1,f
  4857     0271  0808               	movf	8,w	;volatile
  4858     0272  0672               	xorwf	??i1_LCD_write_data+1,w
  4859     0273  39BF               	andlw	-65
  4860     0274  0672               	xorwf	??i1_LCD_write_data+1,w
  4861     0275  0088               	movwf	8	;volatile
  4862     0276                     i1l1872:
  4863                           
  4864                           ;LCD_write_data.c: 25:     PORTDbits.RD5 = (data & 0b00000010) >> 1;
  4865     0276  0873               	movf	i1LCD_write_data@data,w
  4866     0277  00F1               	movwf	??i1_LCD_write_data
  4867     0278  1003               	clrc
  4868     0279  0C71               	rrf	??i1_LCD_write_data,w
  4869     027A  3901               	andlw	1
  4870     027B  00F2               	movwf	??i1_LCD_write_data+1
  4871     027C  0EF2               	swapf	??i1_LCD_write_data+1,f
  4872     027D  0DF2               	rlf	??i1_LCD_write_data+1,f
  4873     027E  0808               	movf	8,w	;volatile
  4874     027F  0672               	xorwf	??i1_LCD_write_data+1,w
  4875     0280  39DF               	andlw	-33
  4876     0281  0672               	xorwf	??i1_LCD_write_data+1,w
  4877     0282  0088               	movwf	8	;volatile
  4878     0283                     i1l1874:
  4879                           
  4880                           ;LCD_write_data.c: 26:     PORTDbits.RD4 = (data & 0b00000001) ;
  4881     0283  0873               	movf	i1LCD_write_data@data,w
  4882     0284  3901               	andlw	1
  4883     0285  00F1               	movwf	??i1_LCD_write_data
  4884     0286  0EF1               	swapf	??i1_LCD_write_data,f
  4885     0287  0808               	movf	8,w	;volatile
  4886     0288  0671               	xorwf	??i1_LCD_write_data,w
  4887     0289  39EF               	andlw	-17
  4888     028A  0671               	xorwf	??i1_LCD_write_data,w
  4889     028B  0088               	movwf	8	;volatile
  4890     028C                     i1l1876:
  4891                           
  4892                           ;LCD_write_data.c: 29:     LCD_pulse_clock();
  4893     028C  120A  118A  2771  120A  118A  	fcall	i1_LCD_pulse_clock
  4894     0291                     i1l146:
  4895     0291  0008               	return
  4896     0292                     __end_ofi1_LCD_write_data:
  4897                           
  4898                           	psect	text16
  4899     0640                     __ptext16:	
  4900 ;; *************** function i1_LCD_cursor_set *****************
  4901 ;; Defined at:
  4902 ;;		line 9 in file "LCD_cursor_set.c"
  4903 ;; Parameters:    Size  Location     Type
  4904 ;;  row             1    wreg     unsigned char 
  4905 ;;  column          1    4[COMMON] unsigned char 
  4906 ;; Auto vars:     Size  Location     Type
  4907 ;;  row             1    5[COMMON] unsigned char 
  4908 ;; Return value:  Size  Location     Type
  4909 ;;                  1    wreg      void 
  4910 ;; Registers used:
  4911 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4912 ;; Tracked objects:
  4913 ;;		On entry : 0/0
  4914 ;;		On exit  : 0/0
  4915 ;;		Unchanged: 0/0
  4916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4917 ;;      Params:         1       0       0       0       0
  4918 ;;      Locals:         1       0       0       0       0
  4919 ;;      Temps:          0       0       0       0       0
  4920 ;;      Totals:         2       0       0       0       0
  4921 ;;Total ram usage:        2 bytes
  4922 ;; Hardware stack levels used: 1
  4923 ;; Hardware stack levels required when called: 2
  4924 ;; This function calls:
  4925 ;;		i1_LCD_write_command
  4926 ;; This function is called by:
  4927 ;;		_setDoorStatus
  4928 ;; This function uses a non-reentrant model
  4929 ;;
  4930                           
  4931     0640                     i1_LCD_cursor_set:	
  4932                           ;psect for function i1_LCD_cursor_set
  4933                           
  4934                           
  4935                           ;incstack = 0
  4936 ;; hardware stack exceeded
  4937                           ; Regs used in i1_LCD_cursor_set: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4938                           ;i1LCD_cursor_set@row stored from wreg
  4939     0640  00F5               	movwf	i1LCD_cursor_set@row
  4940     0641                     i1l2006:
  4941                           
  4942                           ;LCD_cursor_set.c: 12:     if(row == 1) column += (0x80 - 1);
  4943     0641  0375               	decf	i1LCD_cursor_set@row,w
  4944     0642  1D03               	btfss	3,2
  4945     0643  2E45               	goto	u170_21
  4946     0644  2E46               	goto	u170_20
  4947     0645                     u170_21:
  4948     0645  2E4A               	goto	i1l2010
  4949     0646                     u170_20:
  4950     0646                     i1l2008:
  4951     0646  307F               	movlw	127
  4952     0647  00FF               	movwf	btemp+1
  4953     0648  087F               	movf	btemp+1,w
  4954     0649  07F4               	addwf	i1LCD_cursor_set@column,f
  4955     064A                     i1l2010:
  4956                           
  4957                           ;LCD_cursor_set.c: 13:     if(row == 2) column += (0xC0 - 1);
  4958     064A  3002               	movlw	2
  4959     064B  0675               	xorwf	i1LCD_cursor_set@row,w
  4960     064C  1D03               	btfss	3,2
  4961     064D  2E4F               	goto	u171_21
  4962     064E  2E50               	goto	u171_20
  4963     064F                     u171_21:
  4964     064F  2E54               	goto	i1l2014
  4965     0650                     u171_20:
  4966     0650                     i1l2012:
  4967     0650  30BF               	movlw	191
  4968     0651  00FF               	movwf	btemp+1
  4969     0652  087F               	movf	btemp+1,w
  4970     0653  07F4               	addwf	i1LCD_cursor_set@column,f
  4971     0654                     i1l2014:
  4972                           
  4973                           ;LCD_cursor_set.c: 14:     if(row == 3) column += (0x80 + 19);
  4974     0654  3003               	movlw	3
  4975     0655  0675               	xorwf	i1LCD_cursor_set@row,w
  4976     0656  1D03               	btfss	3,2
  4977     0657  2E59               	goto	u172_21
  4978     0658  2E5A               	goto	u172_20
  4979     0659                     u172_21:
  4980     0659  2E5E               	goto	i1l2018
  4981     065A                     u172_20:
  4982     065A                     i1l2016:
  4983     065A  3093               	movlw	147
  4984     065B  00FF               	movwf	btemp+1
  4985     065C  087F               	movf	btemp+1,w
  4986     065D  07F4               	addwf	i1LCD_cursor_set@column,f
  4987     065E                     i1l2018:
  4988                           
  4989                           ;LCD_cursor_set.c: 15:     if(row == 4) column += (0xC0 + 19);
  4990     065E  3004               	movlw	4
  4991     065F  0675               	xorwf	i1LCD_cursor_set@row,w
  4992     0660  1D03               	btfss	3,2
  4993     0661  2E63               	goto	u173_21
  4994     0662  2E64               	goto	u173_20
  4995     0663                     u173_21:
  4996     0663  2E68               	goto	i1l2022
  4997     0664                     u173_20:
  4998     0664                     i1l2020:
  4999     0664  30D3               	movlw	211
  5000     0665  00FF               	movwf	btemp+1
  5001     0666  087F               	movf	btemp+1,w
  5002     0667  07F4               	addwf	i1LCD_cursor_set@column,f
  5003     0668                     i1l2022:
  5004                           
  5005                           ;LCD_cursor_set.c: 18:    LCD_write_command(column);
  5006     0668  0874               	movf	i1LCD_cursor_set@column,w
  5007     0669  120A  118A  2292  120A  118A  	fcall	i1_LCD_write_command
  5008     066E                     i1l84:
  5009     066E  0008               	return
  5010     066F                     __end_ofi1_LCD_cursor_set:
  5011                           
  5012                           	psect	text17
  5013     0292                     __ptext17:	
  5014 ;; *************** function i1_LCD_write_command *****************
  5015 ;; Defined at:
  5016 ;;		line 9 in file "LCD_write_command.c"
  5017 ;; Parameters:    Size  Location     Type
  5018 ;;  command         1    wreg     unsigned char 
  5019 ;; Auto vars:     Size  Location     Type
  5020 ;;  command         1    3[COMMON] unsigned char 
  5021 ;; Return value:  Size  Location     Type
  5022 ;;                  1    wreg      void 
  5023 ;; Registers used:
  5024 ;;		wreg, status,2, status,0, pclath, cstack
  5025 ;; Tracked objects:
  5026 ;;		On entry : 0/0
  5027 ;;		On exit  : 0/0
  5028 ;;		Unchanged: 0/0
  5029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5030 ;;      Params:         0       0       0       0       0
  5031 ;;      Locals:         1       0       0       0       0
  5032 ;;      Temps:          2       0       0       0       0
  5033 ;;      Totals:         3       0       0       0       0
  5034 ;;Total ram usage:        3 bytes
  5035 ;; Hardware stack levels used: 1
  5036 ;; Hardware stack levels required when called: 1
  5037 ;; This function calls:
  5038 ;;		i1_LCD_pulse_clock
  5039 ;; This function is called by:
  5040 ;;		i1_LCD_cursor_set
  5041 ;; This function uses a non-reentrant model
  5042 ;;
  5043                           
  5044     0292                     i1_LCD_write_command:	
  5045                           ;psect for function i1_LCD_write_command
  5046                           
  5047                           
  5048                           ;incstack = 0
  5049 ;; hardware stack exceeded
  5050                           ; Regs used in i1_LCD_write_command: [wreg+status,2+status,0+pclath+cstack]
  5051                           ;i1LCD_write_command@command stored from wreg
  5052     0292  00F3               	movwf	i1LCD_write_command@command
  5053     0293                     i1l1846:
  5054                           
  5055                           ;LCD_write_command.c: 11:     PORTDbits.RD2 = 0;
  5056     0293  1283               	bcf	3,5	;RP0=0, select bank0
  5057     0294  1303               	bcf	3,6	;RP1=0, select bank0
  5058     0295  1108               	bcf	8,2	;volatile
  5059     0296                     i1l1848:
  5060                           
  5061                           ;LCD_write_command.c: 14:     PORTDbits.RD7 = (command & 0b10000000) >> 7;
  5062     0296  0873               	movf	i1LCD_write_command@command,w
  5063     0297  00F1               	movwf	??i1_LCD_write_command
  5064     0298  3007               	movlw	7
  5065     0299                     u151_25:
  5066     0299  1003               	clrc
  5067     029A  0CF1               	rrf	??i1_LCD_write_command,f
  5068     029B  3EFF               	addlw	-1
  5069     029C  1D03               	skipz
  5070     029D  2A99               	goto	u151_25
  5071     029E  0871               	movf	??i1_LCD_write_command,w
  5072     029F  3901               	andlw	1
  5073     02A0  00F2               	movwf	??i1_LCD_write_command+1
  5074     02A1  0CF2               	rrf	??i1_LCD_write_command+1,f
  5075     02A2  0CF2               	rrf	??i1_LCD_write_command+1,f
  5076     02A3  0808               	movf	8,w	;volatile
  5077     02A4  0672               	xorwf	??i1_LCD_write_command+1,w
  5078     02A5  397F               	andlw	-129
  5079     02A6  0672               	xorwf	??i1_LCD_write_command+1,w
  5080     02A7  0088               	movwf	8	;volatile
  5081                           
  5082                           ;LCD_write_command.c: 15:     PORTDbits.RD6 = (command & 0b01000000) >> 6;
  5083     02A8  0873               	movf	i1LCD_write_command@command,w
  5084     02A9  00F1               	movwf	??i1_LCD_write_command
  5085     02AA  3006               	movlw	6
  5086     02AB                     u152_25:
  5087     02AB  1003               	clrc
  5088     02AC  0CF1               	rrf	??i1_LCD_write_command,f
  5089     02AD  3EFF               	addlw	-1
  5090     02AE  1D03               	skipz
  5091     02AF  2AAB               	goto	u152_25
  5092     02B0  0871               	movf	??i1_LCD_write_command,w
  5093     02B1  3901               	andlw	1
  5094     02B2  00F2               	movwf	??i1_LCD_write_command+1
  5095     02B3  0EF2               	swapf	??i1_LCD_write_command+1,f
  5096     02B4  0DF2               	rlf	??i1_LCD_write_command+1,f
  5097     02B5  0DF2               	rlf	??i1_LCD_write_command+1,f
  5098     02B6  0808               	movf	8,w	;volatile
  5099     02B7  0672               	xorwf	??i1_LCD_write_command+1,w
  5100     02B8  39BF               	andlw	-65
  5101     02B9  0672               	xorwf	??i1_LCD_write_command+1,w
  5102     02BA  0088               	movwf	8	;volatile
  5103                           
  5104                           ;LCD_write_command.c: 16:     PORTDbits.RD5 = (command & 0b00100000) >> 5;
  5105     02BB  0873               	movf	i1LCD_write_command@command,w
  5106     02BC  00F1               	movwf	??i1_LCD_write_command
  5107     02BD  3005               	movlw	5
  5108     02BE                     u153_25:
  5109     02BE  1003               	clrc
  5110     02BF  0CF1               	rrf	??i1_LCD_write_command,f
  5111     02C0  3EFF               	addlw	-1
  5112     02C1  1D03               	skipz
  5113     02C2  2ABE               	goto	u153_25
  5114     02C3  0871               	movf	??i1_LCD_write_command,w
  5115     02C4  3901               	andlw	1
  5116     02C5  00F2               	movwf	??i1_LCD_write_command+1
  5117     02C6  0EF2               	swapf	??i1_LCD_write_command+1,f
  5118     02C7  0DF2               	rlf	??i1_LCD_write_command+1,f
  5119     02C8  0808               	movf	8,w	;volatile
  5120     02C9  0672               	xorwf	??i1_LCD_write_command+1,w
  5121     02CA  39DF               	andlw	-33
  5122     02CB  0672               	xorwf	??i1_LCD_write_command+1,w
  5123     02CC  0088               	movwf	8	;volatile
  5124                           
  5125                           ;LCD_write_command.c: 17:     PORTDbits.RD4 = (command & 0b00010000) >> 4;
  5126     02CD  0873               	movf	i1LCD_write_command@command,w
  5127     02CE  00F1               	movwf	??i1_LCD_write_command
  5128     02CF  3004               	movlw	4
  5129     02D0                     u154_25:
  5130     02D0  1003               	clrc
  5131     02D1  0CF1               	rrf	??i1_LCD_write_command,f
  5132     02D2  3EFF               	addlw	-1
  5133     02D3  1D03               	skipz
  5134     02D4  2AD0               	goto	u154_25
  5135     02D5  0871               	movf	??i1_LCD_write_command,w
  5136     02D6  3901               	andlw	1
  5137     02D7  00F2               	movwf	??i1_LCD_write_command+1
  5138     02D8  0EF2               	swapf	??i1_LCD_write_command+1,f
  5139     02D9  0808               	movf	8,w	;volatile
  5140     02DA  0672               	xorwf	??i1_LCD_write_command+1,w
  5141     02DB  39EF               	andlw	-17
  5142     02DC  0672               	xorwf	??i1_LCD_write_command+1,w
  5143     02DD  0088               	movwf	8	;volatile
  5144     02DE                     i1l1850:
  5145                           
  5146                           ;LCD_write_command.c: 20:     LCD_pulse_clock();
  5147     02DE  120A  118A  2771  120A  118A  	fcall	i1_LCD_pulse_clock
  5148     02E3                     i1l1852:
  5149                           
  5150                           ;LCD_write_command.c: 23:     PORTDbits.RD7 = (command & 0b00001000) >> 3;
  5151     02E3  0873               	movf	i1LCD_write_command@command,w
  5152     02E4  00F1               	movwf	??i1_LCD_write_command
  5153     02E5  3003               	movlw	3
  5154     02E6                     u155_25:
  5155     02E6  1003               	clrc
  5156     02E7  0CF1               	rrf	??i1_LCD_write_command,f
  5157     02E8  3EFF               	addlw	-1
  5158     02E9  1D03               	skipz
  5159     02EA  2AE6               	goto	u155_25
  5160     02EB  0871               	movf	??i1_LCD_write_command,w
  5161     02EC  3901               	andlw	1
  5162     02ED  00F2               	movwf	??i1_LCD_write_command+1
  5163     02EE  0CF2               	rrf	??i1_LCD_write_command+1,f
  5164     02EF  0CF2               	rrf	??i1_LCD_write_command+1,f
  5165     02F0  1283               	bcf	3,5	;RP0=0, select bank0
  5166     02F1  1303               	bcf	3,6	;RP1=0, select bank0
  5167     02F2  0808               	movf	8,w	;volatile
  5168     02F3  0672               	xorwf	??i1_LCD_write_command+1,w
  5169     02F4  397F               	andlw	-129
  5170     02F5  0672               	xorwf	??i1_LCD_write_command+1,w
  5171     02F6  0088               	movwf	8	;volatile
  5172     02F7                     i1l1854:
  5173                           
  5174                           ;LCD_write_command.c: 24:     PORTDbits.RD6 = (command & 0b00000100) >> 2;
  5175     02F7  0873               	movf	i1LCD_write_command@command,w
  5176     02F8  00F1               	movwf	??i1_LCD_write_command
  5177     02F9  3002               	movlw	2
  5178     02FA                     u156_25:
  5179     02FA  1003               	clrc
  5180     02FB  0CF1               	rrf	??i1_LCD_write_command,f
  5181     02FC  3EFF               	addlw	-1
  5182     02FD  1D03               	skipz
  5183     02FE  2AFA               	goto	u156_25
  5184     02FF  0871               	movf	??i1_LCD_write_command,w
  5185     0300  3901               	andlw	1
  5186     0301  00F2               	movwf	??i1_LCD_write_command+1
  5187     0302  0EF2               	swapf	??i1_LCD_write_command+1,f
  5188     0303  0DF2               	rlf	??i1_LCD_write_command+1,f
  5189     0304  0DF2               	rlf	??i1_LCD_write_command+1,f
  5190     0305  0808               	movf	8,w	;volatile
  5191     0306  0672               	xorwf	??i1_LCD_write_command+1,w
  5192     0307  39BF               	andlw	-65
  5193     0308  0672               	xorwf	??i1_LCD_write_command+1,w
  5194     0309  0088               	movwf	8	;volatile
  5195     030A                     i1l1856:
  5196                           
  5197                           ;LCD_write_command.c: 25:     PORTDbits.RD5 = (command & 0b00000010) >> 1;
  5198     030A  0873               	movf	i1LCD_write_command@command,w
  5199     030B  00F1               	movwf	??i1_LCD_write_command
  5200     030C  1003               	clrc
  5201     030D  0C71               	rrf	??i1_LCD_write_command,w
  5202     030E  3901               	andlw	1
  5203     030F  00F2               	movwf	??i1_LCD_write_command+1
  5204     0310  0EF2               	swapf	??i1_LCD_write_command+1,f
  5205     0311  0DF2               	rlf	??i1_LCD_write_command+1,f
  5206     0312  0808               	movf	8,w	;volatile
  5207     0313  0672               	xorwf	??i1_LCD_write_command+1,w
  5208     0314  39DF               	andlw	-33
  5209     0315  0672               	xorwf	??i1_LCD_write_command+1,w
  5210     0316  0088               	movwf	8	;volatile
  5211     0317                     i1l1858:
  5212                           
  5213                           ;LCD_write_command.c: 26:     PORTDbits.RD4 = (command & 0b00000001) ;
  5214     0317  0873               	movf	i1LCD_write_command@command,w
  5215     0318  3901               	andlw	1
  5216     0319  00F1               	movwf	??i1_LCD_write_command
  5217     031A  0EF1               	swapf	??i1_LCD_write_command,f
  5218     031B  0808               	movf	8,w	;volatile
  5219     031C  0671               	xorwf	??i1_LCD_write_command,w
  5220     031D  39EF               	andlw	-17
  5221     031E  0671               	xorwf	??i1_LCD_write_command,w
  5222     031F  0088               	movwf	8	;volatile
  5223     0320                     i1l1860:
  5224                           
  5225                           ;LCD_write_command.c: 29:     LCD_pulse_clock();
  5226     0320  120A  118A  2771  120A  118A  	fcall	i1_LCD_pulse_clock
  5227     0325                     i1l139:
  5228     0325  0008               	return
  5229     0326                     __end_ofi1_LCD_write_command:
  5230                           
  5231                           	psect	text18
  5232     0771                     __ptext18:	
  5233 ;; *************** function i1_LCD_pulse_clock *****************
  5234 ;; Defined at:
  5235 ;;		line 8 in file "LCD_pulse_clock.c"
  5236 ;; Parameters:    Size  Location     Type
  5237 ;;		None
  5238 ;; Auto vars:     Size  Location     Type
  5239 ;;		None
  5240 ;; Return value:  Size  Location     Type
  5241 ;;                  1    wreg      void 
  5242 ;; Registers used:
  5243 ;;		wreg
  5244 ;; Tracked objects:
  5245 ;;		On entry : 0/0
  5246 ;;		On exit  : 0/0
  5247 ;;		Unchanged: 0/0
  5248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5249 ;;      Params:         0       0       0       0       0
  5250 ;;      Locals:         0       0       0       0       0
  5251 ;;      Temps:          1       0       0       0       0
  5252 ;;      Totals:         1       0       0       0       0
  5253 ;;Total ram usage:        1 bytes
  5254 ;; Hardware stack levels used: 1
  5255 ;; This function calls:
  5256 ;;		Nothing
  5257 ;; This function is called by:
  5258 ;;		i1_LCD_write_command
  5259 ;;		i1_LCD_write_data
  5260 ;; This function uses a non-reentrant model
  5261 ;;
  5262                           
  5263     0771                     i1_LCD_pulse_clock:	
  5264                           ;psect for function i1_LCD_pulse_clock
  5265                           
  5266     0771                     i1l1764:	
  5267                           ;incstack = 0
  5268 ;; hardware stack exceeded
  5269                           ; Regs used in i1_LCD_pulse_clock: [wreg]
  5270                           
  5271                           
  5272                           ;LCD_pulse_clock.c: 10:   PORTDbits.RD3 = 1;
  5273     0771  1283               	bcf	3,5	;RP0=0, select bank0
  5274     0772  1303               	bcf	3,6	;RP1=0, select bank0
  5275     0773  1588               	bsf	8,3	;volatile
  5276     0774                     i1l1766:
  5277                           
  5278                           ;LCD_pulse_clock.c: 11:   _delay((unsigned long)((40)*(4000000/4000000.0)));
  5279     0774  300D               	movlw	13
  5280     0775  00F0               	movwf	??i1_LCD_pulse_clock
  5281     0776                     u227_27:
  5282     0776  0BF0               	decfsz	??i1_LCD_pulse_clock,f
  5283     0777  2F76               	goto	u227_27
  5284     0778                     i1l1768:
  5285                           
  5286                           ;LCD_pulse_clock.c: 12:   PORTDbits.RD3 = 0;
  5287     0778  1283               	bcf	3,5	;RP0=0, select bank0
  5288     0779  1303               	bcf	3,6	;RP1=0, select bank0
  5289     077A  1188               	bcf	8,3	;volatile
  5290     077B                     i1l110:
  5291     077B  0008               	return
  5292     077C                     __end_ofi1_LCD_pulse_clock:
  5293                           
  5294                           	psect	text19
  5295     057F                     __ptext19:	
  5296 ;; *************** function _strstr *****************
  5297 ;; Defined at:
  5298 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\strstr.c"
  5299 ;; Parameters:    Size  Location     Type
  5300 ;;  h               1    wreg     PTR const unsigned char 
  5301 ;;		 -> NULL(0), StringReceive(30), 
  5302 ;;  n               1    6[COMMON] PTR const unsigned char 
  5303 ;;		 -> STR_8(2), STR_7(2), 
  5304 ;; Auto vars:     Size  Location     Type
  5305 ;;  h               1   11[COMMON] PTR const unsigned char 
  5306 ;;		 -> NULL(0), StringReceive(30), 
  5307 ;;  nl              2    9[COMMON] unsigned int 
  5308 ;; Return value:  Size  Location     Type
  5309 ;;                  1    wreg      PTR unsigned char 
  5310 ;; Registers used:
  5311 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5312 ;; Tracked objects:
  5313 ;;		On entry : 0/0
  5314 ;;		On exit  : 0/0
  5315 ;;		Unchanged: 0/0
  5316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5317 ;;      Params:         1       0       0       0       0
  5318 ;;      Locals:         3       0       0       0       0
  5319 ;;      Temps:          2       0       0       0       0
  5320 ;;      Totals:         6       0       0       0       0
  5321 ;;Total ram usage:        6 bytes
  5322 ;; Hardware stack levels used: 1
  5323 ;; Hardware stack levels required when called: 2
  5324 ;; This function calls:
  5325 ;;		_strchr
  5326 ;;		_strlen
  5327 ;;		_strncmp
  5328 ;; This function is called by:
  5329 ;;		_setDoorStatus
  5330 ;; This function uses a non-reentrant model
  5331 ;;
  5332                           
  5333     057F                     _strstr:	
  5334                           ;psect for function _strstr
  5335                           
  5336                           
  5337                           ;incstack = 0
  5338 ;; hardware stack exceeded
  5339                           ; Regs used in _strstr: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5340                           ;strstr@h stored from wreg
  5341     057F  00FB               	movwf	strstr@h
  5342     0580                     i1l1986:
  5343     0580  0876               	movf	strstr@n,w
  5344     0581  1903               	btfsc	3,2
  5345     0582  2D84               	goto	u166_21
  5346     0583  2D85               	goto	u166_20
  5347     0584                     u166_21:
  5348     0584  2DC6               	goto	i1l2002
  5349     0585                     u166_20:
  5350     0585                     i1l1988:
  5351     0585  0876               	movf	strstr@n,w
  5352     0586  120A  118A  2702  120A  118A  	fcall	_strlen
  5353     058B  0871               	movf	?_strlen+1,w
  5354     058C  00FA               	movwf	strstr@nl+1
  5355     058D  0870               	movf	?_strlen,w
  5356     058E  00F9               	movwf	strstr@nl
  5357     058F  2DB9               	goto	i1l1998
  5358     0590                     i1l1990:
  5359     0590  0876               	movf	strstr@n,w
  5360     0591  00F0               	movwf	strncmp@r
  5361     0592  087A               	movf	strstr@nl+1,w
  5362     0593  00F2               	movwf	strncmp@n+1
  5363     0594  0879               	movf	strstr@nl,w
  5364     0595  00F1               	movwf	strncmp@n
  5365     0596  087B               	movf	strstr@h,w
  5366     0597  120A  118A  247E  120A  118A  	fcall	_strncmp
  5367     059C  0870               	movf	?_strncmp,w
  5368     059D  0471               	iorwf	?_strncmp+1,w
  5369     059E  1D03               	btfss	3,2
  5370     059F  2DA1               	goto	u167_21
  5371     05A0  2DA2               	goto	u167_20
  5372     05A1                     u167_21:
  5373     05A1  2DA4               	goto	i1l1996
  5374     05A2                     u167_20:
  5375     05A2                     i1l1992:
  5376     05A2  087B               	movf	strstr@h,w
  5377     05A3  2DC7               	goto	i1l994
  5378     05A4                     i1l1996:
  5379     05A4  0876               	movf	strstr@n,w
  5380     05A5  0084               	movwf	4
  5381     05A6  120A  118A  2326  120A  118A  	fcall	stringdir
  5382     05AB  00F7               	movwf	??_strstr
  5383     05AC  01F8               	clrf	??_strstr+1
  5384     05AD  0877               	movf	??_strstr,w
  5385     05AE  00F0               	movwf	strchr@c
  5386     05AF  0878               	movf	??_strstr+1,w
  5387     05B0  00F1               	movwf	strchr@c+1
  5388     05B1  087B               	movf	strstr@h,w
  5389     05B2  3E01               	addlw	1
  5390     05B3  120A  118A  274C  120A  118A  	fcall	_strchr
  5391     05B8  00FB               	movwf	strstr@h
  5392     05B9                     i1l1998:
  5393     05B9  087B               	movf	strstr@h,w
  5394     05BA  1903               	btfsc	3,2
  5395     05BB  2DBD               	goto	u168_21
  5396     05BC  2DBE               	goto	u168_20
  5397     05BD                     u168_21:
  5398     05BD  2DC6               	goto	i1l2002
  5399     05BE                     u168_20:
  5400     05BE                     i1l2000:
  5401     05BE  087B               	movf	strstr@h,w
  5402     05BF  0084               	movwf	4
  5403     05C0  1383               	bcf	3,7	;select IRP bank0
  5404     05C1  0800               	movf	0,w
  5405     05C2  1D03               	btfss	3,2
  5406     05C3  2DC5               	goto	u169_21
  5407     05C4  2DC6               	goto	u169_20
  5408     05C5                     u169_21:
  5409     05C5  2D90               	goto	i1l1990
  5410     05C6                     u169_20:
  5411     05C6                     i1l2002:
  5412     05C6  3000               	movlw	0
  5413     05C7                     i1l994:
  5414     05C7  0008               	return
  5415     05C8                     __end_of_strstr:
  5416                           
  5417                           	psect	text20
  5418     047E                     __ptext20:	
  5419 ;; *************** function _strncmp *****************
  5420 ;; Defined at:
  5421 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\strncmp.c"
  5422 ;; Parameters:    Size  Location     Type
  5423 ;;  l               1    wreg     PTR const unsigned char 
  5424 ;;		 -> NULL(0), StringReceive(30), 
  5425 ;;  r               1    0[COMMON] PTR const unsigned char 
  5426 ;;		 -> STR_8(2), STR_7(2), 
  5427 ;;  n               2    1[COMMON] unsigned int 
  5428 ;; Auto vars:     Size  Location     Type
  5429 ;;  l               1    5[COMMON] PTR const unsigned char 
  5430 ;;		 -> NULL(0), StringReceive(30), 
  5431 ;; Return value:  Size  Location     Type
  5432 ;;                  2    0[COMMON] int 
  5433 ;; Registers used:
  5434 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  5435 ;; Tracked objects:
  5436 ;;		On entry : 0/0
  5437 ;;		On exit  : 0/0
  5438 ;;		Unchanged: 0/0
  5439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5440 ;;      Params:         3       0       0       0       0
  5441 ;;      Locals:         1       0       0       0       0
  5442 ;;      Temps:          2       0       0       0       0
  5443 ;;      Totals:         6       0       0       0       0
  5444 ;;Total ram usage:        6 bytes
  5445 ;; Hardware stack levels used: 2
  5446 ;; This function calls:
  5447 ;;		Nothing
  5448 ;; This function is called by:
  5449 ;;		_strstr
  5450 ;; This function uses a non-reentrant model
  5451 ;;
  5452                           
  5453     047E                     _strncmp:	
  5454                           ;psect for function _strncmp
  5455                           
  5456                           
  5457                           ;incstack = 0
  5458 ;; hardware stack exceeded
  5459                           ; Regs used in _strncmp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  5460                           ;strncmp@l stored from wreg
  5461     047E  00F5               	movwf	strncmp@l
  5462     047F                     i1l1812:
  5463     047F  3001               	movlw	1
  5464     0480  02F1               	subwf	strncmp@n,f
  5465     0481  3000               	movlw	0
  5466     0482  1C03               	skipc
  5467     0483  03F2               	decf	strncmp@n+1,f
  5468     0484  02F2               	subwf	strncmp@n+1,f
  5469     0485  0A71               	incf	strncmp@n,w
  5470     0486  1D03               	skipz
  5471     0487  2C8C               	goto	u144_21
  5472     0488  0A72               	incf	strncmp@n+1,w
  5473     0489  1D03               	btfss	3,2
  5474     048A  2C8C               	goto	u144_21
  5475     048B  2C8D               	goto	u144_20
  5476     048C                     u144_21:
  5477     048C  2C9E               	goto	i1l1822
  5478     048D                     u144_20:
  5479     048D                     i1l1814:
  5480     048D  01F0               	clrf	?_strncmp
  5481     048E  01F1               	clrf	?_strncmp+1
  5482     048F  2CDA               	goto	i1l1013
  5483     0490                     i1l1818:
  5484     0490  3001               	movlw	1
  5485     0491  00FF               	movwf	btemp+1
  5486     0492  087F               	movf	btemp+1,w
  5487     0493  07F5               	addwf	strncmp@l,f
  5488     0494  3001               	movlw	1
  5489     0495  00FF               	movwf	btemp+1
  5490     0496  087F               	movf	btemp+1,w
  5491     0497  07F0               	addwf	strncmp@r,f
  5492     0498                     i1l1820:
  5493     0498  3001               	movlw	1
  5494     0499  02F1               	subwf	strncmp@n,f
  5495     049A  3000               	movlw	0
  5496     049B  1C03               	skipc
  5497     049C  03F2               	decf	strncmp@n+1,f
  5498     049D  02F2               	subwf	strncmp@n+1,f
  5499     049E                     i1l1822:
  5500     049E  0875               	movf	strncmp@l,w
  5501     049F  0084               	movwf	4
  5502     04A0  1383               	bcf	3,7	;select IRP bank0
  5503     04A1  0800               	movf	0,w
  5504     04A2  1903               	btfsc	3,2
  5505     04A3  2CA5               	goto	u145_21
  5506     04A4  2CA6               	goto	u145_20
  5507     04A5                     u145_21:
  5508     04A5  2CC8               	goto	i1l1830
  5509     04A6                     u145_20:
  5510     04A6                     i1l1824:
  5511     04A6  0870               	movf	strncmp@r,w
  5512     04A7  0084               	movwf	4
  5513     04A8  120A  118A  2326  120A  118A  	fcall	stringdir
  5514     04AD  3A00               	xorlw	0
  5515     04AE  1903               	skipnz
  5516     04AF  2CB1               	goto	u146_21
  5517     04B0  2CB2               	goto	u146_20
  5518     04B1                     u146_21:
  5519     04B1  2CC8               	goto	i1l1830
  5520     04B2                     u146_20:
  5521     04B2                     i1l1826:
  5522     04B2  0871               	movf	strncmp@n,w
  5523     04B3  0472               	iorwf	strncmp@n+1,w
  5524     04B4  1903               	btfsc	3,2
  5525     04B5  2CB7               	goto	u147_21
  5526     04B6  2CB8               	goto	u147_20
  5527     04B7                     u147_21:
  5528     04B7  2CC8               	goto	i1l1830
  5529     04B8                     u147_20:
  5530     04B8                     i1l1828:
  5531     04B8  0870               	movf	strncmp@r,w
  5532     04B9  0084               	movwf	4
  5533     04BA  120A  118A  2326  120A  118A  	fcall	stringdir
  5534     04BF  00F3               	movwf	??_strncmp
  5535     04C0  0875               	movf	strncmp@l,w
  5536     04C1  0084               	movwf	4
  5537     04C2  0800               	movf	0,w
  5538     04C3  0673               	xorwf	??_strncmp,w
  5539     04C4  1903               	skipnz
  5540     04C5  2CC7               	goto	u148_21
  5541     04C6  2CC8               	goto	u148_20
  5542     04C7                     u148_21:
  5543     04C7  2C90               	goto	i1l1818
  5544     04C8                     u148_20:
  5545     04C8                     i1l1830:
  5546     04C8  0870               	movf	strncmp@r,w
  5547     04C9  0084               	movwf	4
  5548     04CA  120A  118A  2326  120A  118A  	fcall	stringdir
  5549     04CF  00F3               	movwf	??_strncmp
  5550     04D0  0875               	movf	strncmp@l,w
  5551     04D1  0084               	movwf	4
  5552     04D2  0800               	movf	0,w
  5553     04D3  00F4               	movwf	??_strncmp+1
  5554     04D4  0873               	movf	??_strncmp,w
  5555     04D5  0274               	subwf	??_strncmp+1,w
  5556     04D6  00F0               	movwf	?_strncmp
  5557     04D7  01F1               	clrf	?_strncmp+1
  5558     04D8  1C03               	skipc
  5559     04D9  03F1               	decf	?_strncmp+1,f
  5560     04DA                     i1l1013:
  5561     04DA  0008               	return
  5562     04DB                     __end_of_strncmp:
  5563                           
  5564                           	psect	text21
  5565     0702                     __ptext21:	
  5566 ;; *************** function _strlen *****************
  5567 ;; Defined at:
  5568 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\strlen.c"
  5569 ;; Parameters:    Size  Location     Type
  5570 ;;  s               1    wreg     PTR const unsigned char 
  5571 ;;		 -> STR_8(2), STR_7(2), 
  5572 ;; Auto vars:     Size  Location     Type
  5573 ;;  s               1    3[COMMON] PTR const unsigned char 
  5574 ;;		 -> STR_8(2), STR_7(2), 
  5575 ;;  a               1    2[COMMON] PTR const unsigned char 
  5576 ;;		 -> STR_8(2), STR_7(2), 
  5577 ;; Return value:  Size  Location     Type
  5578 ;;                  2    0[COMMON] unsigned int 
  5579 ;; Registers used:
  5580 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  5581 ;; Tracked objects:
  5582 ;;		On entry : 0/0
  5583 ;;		On exit  : 0/0
  5584 ;;		Unchanged: 0/0
  5585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5586 ;;      Params:         2       0       0       0       0
  5587 ;;      Locals:         2       0       0       0       0
  5588 ;;      Temps:          0       0       0       0       0
  5589 ;;      Totals:         4       0       0       0       0
  5590 ;;Total ram usage:        4 bytes
  5591 ;; Hardware stack levels used: 2
  5592 ;; This function calls:
  5593 ;;		Nothing
  5594 ;; This function is called by:
  5595 ;;		_strstr
  5596 ;; This function uses a non-reentrant model
  5597 ;;
  5598                           
  5599     0702                     _strlen:	
  5600                           ;psect for function _strlen
  5601                           
  5602                           
  5603                           ;incstack = 0
  5604 ;; hardware stack exceeded
  5605                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  5606                           ;strlen@s stored from wreg
  5607     0702  00F3               	movwf	strlen@s
  5608     0703                     i1l1802:
  5609     0703  0873               	movf	strlen@s,w
  5610     0704  00F2               	movwf	strlen@a
  5611     0705  2F0A               	goto	i1l1806
  5612     0706                     i1l1804:
  5613     0706  3001               	movlw	1
  5614     0707  00FF               	movwf	btemp+1
  5615     0708  087F               	movf	btemp+1,w
  5616     0709  07F3               	addwf	strlen@s,f
  5617     070A                     i1l1806:
  5618     070A  0873               	movf	strlen@s,w
  5619     070B  0084               	movwf	4
  5620     070C  120A  118A  2326  120A  118A  	fcall	stringdir
  5621     0711  3A00               	xorlw	0
  5622     0712  1D03               	skipz
  5623     0713  2F15               	goto	u143_21
  5624     0714  2F16               	goto	u143_20
  5625     0715                     u143_21:
  5626     0715  2F06               	goto	i1l1804
  5627     0716                     u143_20:
  5628     0716                     i1l1808:
  5629     0716  0872               	movf	strlen@a,w
  5630     0717  0273               	subwf	strlen@s,w
  5631     0718  00F0               	movwf	?_strlen
  5632     0719  01F1               	clrf	?_strlen+1
  5633     071A  1BF0               	btfsc	?_strlen,7
  5634     071B  03F1               	decf	?_strlen+1,f
  5635     071C                     i1l1009:
  5636     071C  0008               	return
  5637     071D                     __end_of_strlen:
  5638                           
  5639                           	psect	text22
  5640     074C                     __ptext22:	
  5641 ;; *************** function _strchr *****************
  5642 ;; Defined at:
  5643 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\strchr.c"
  5644 ;; Parameters:    Size  Location     Type
  5645 ;;  s               1    wreg     PTR const unsigned char 
  5646 ;;		 -> NULL(0), StringReceive(30), 
  5647 ;;  c               2    0[COMMON] int 
  5648 ;; Auto vars:     Size  Location     Type
  5649 ;;  s               1    2[COMMON] PTR const unsigned char 
  5650 ;;		 -> NULL(0), StringReceive(30), 
  5651 ;; Return value:  Size  Location     Type
  5652 ;;                  1    wreg      PTR unsigned char 
  5653 ;; Registers used:
  5654 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5655 ;; Tracked objects:
  5656 ;;		On entry : 0/0
  5657 ;;		On exit  : 0/0
  5658 ;;		Unchanged: 0/0
  5659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5660 ;;      Params:         2       0       0       0       0
  5661 ;;      Locals:         1       0       0       0       0
  5662 ;;      Temps:          0       0       0       0       0
  5663 ;;      Totals:         3       0       0       0       0
  5664 ;;Total ram usage:        3 bytes
  5665 ;; Hardware stack levels used: 1
  5666 ;; This function calls:
  5667 ;;		Nothing
  5668 ;; This function is called by:
  5669 ;;		_strstr
  5670 ;; This function uses a non-reentrant model
  5671 ;;
  5672                           
  5673     074C                     _strchr:	
  5674                           ;psect for function _strchr
  5675                           
  5676                           
  5677                           ;incstack = 0
  5678 ;; hardware stack exceeded
  5679                           ; Regs used in _strchr: [wreg-fsr0h+status,2+status,0]
  5680                           ;strchr@s stored from wreg
  5681     074C  00F2               	movwf	strchr@s
  5682     074D                     i1l1000:
  5683     074D                     i1l1834:
  5684     074D  0872               	movf	strchr@s,w
  5685     074E  0084               	movwf	4
  5686     074F  1383               	bcf	3,7	;select IRP bank0
  5687     0750  0800               	movf	0,w
  5688     0751  0670               	xorwf	strchr@c,w
  5689     0752  1D03               	skipz
  5690     0753  2F55               	goto	u149_21
  5691     0754  2F56               	goto	u149_20
  5692     0755                     u149_21:
  5693     0755  2F58               	goto	i1l1840
  5694     0756                     u149_20:
  5695     0756                     i1l1836:
  5696     0756  0872               	movf	strchr@s,w
  5697     0757  2F62               	goto	i1l1002
  5698     0758                     i1l1840:
  5699     0758  0872               	movf	strchr@s,w
  5700     0759  0084               	movwf	4
  5701     075A  3001               	movlw	1
  5702     075B  07F2               	addwf	strchr@s,f
  5703     075C  0800               	movf	0,w
  5704     075D  1D03               	btfss	3,2
  5705     075E  2F60               	goto	u150_21
  5706     075F  2F61               	goto	u150_20
  5707     0760                     u150_21:
  5708     0760  2F4D               	goto	i1l1000
  5709     0761                     u150_20:
  5710     0761                     i1l1842:
  5711     0761  3000               	movlw	0
  5712     0762                     i1l1002:
  5713     0762  0008               	return
  5714     0763                     __end_of_strchr:
  5715                           
  5716                           	psect	text23
  5717     06E3                     __ptext23:	
  5718 ;; *************** function _ClearStringReceive *****************
  5719 ;; Defined at:
  5720 ;;		line 249 in file "main.c"
  5721 ;; Parameters:    Size  Location     Type
  5722 ;;		None
  5723 ;; Auto vars:     Size  Location     Type
  5724 ;;  i               2    0[COMMON] int 
  5725 ;; Return value:  Size  Location     Type
  5726 ;;                  1    wreg      void 
  5727 ;; Registers used:
  5728 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  5729 ;; Tracked objects:
  5730 ;;		On entry : 0/0
  5731 ;;		On exit  : 0/0
  5732 ;;		Unchanged: 0/0
  5733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5734 ;;      Params:         0       0       0       0       0
  5735 ;;      Locals:         2       0       0       0       0
  5736 ;;      Temps:          0       0       0       0       0
  5737 ;;      Totals:         2       0       0       0       0
  5738 ;;Total ram usage:        2 bytes
  5739 ;; Hardware stack levels used: 1
  5740 ;; This function calls:
  5741 ;;		Nothing
  5742 ;; This function is called by:
  5743 ;;		_setDoorStatus
  5744 ;; This function uses a non-reentrant model
  5745 ;;
  5746                           
  5747     06E3                     _ClearStringReceive:	
  5748                           ;psect for function _ClearStringReceive
  5749                           
  5750     06E3                     i1l1974:	
  5751                           ;incstack = 0
  5752                           ; Regs used in _ClearStringReceive: [wreg-fsr0h+status,2+status,0+btemp+1]
  5753                           
  5754                           
  5755                           ;main.c: 250:     pos = 0;
  5756     06E3  1283               	bcf	3,5	;RP0=0, select bank0
  5757     06E4  1303               	bcf	3,6	;RP1=0, select bank0
  5758     06E5  01AC               	clrf	_pos
  5759     06E6  01AD               	clrf	_pos+1
  5760                           
  5761                           ;main.c: 251:     for (int i = 0; i < 30; i++)
  5762     06E7  01F0               	clrf	ClearStringReceive@i
  5763     06E8  01F1               	clrf	ClearStringReceive@i+1
  5764     06E9                     i1l1980:
  5765                           
  5766                           ;main.c: 252:         StringReceive[i] = '\0';
  5767     06E9  0870               	movf	ClearStringReceive@i,w
  5768     06EA  3E2E               	addlw	(low (_StringReceive| 0))& (0+255)
  5769     06EB  0084               	movwf	4
  5770     06EC  1383               	bcf	3,7	;select IRP bank0
  5771     06ED  0180               	clrf	0
  5772     06EE                     i1l1982:
  5773     06EE  3001               	movlw	1
  5774     06EF  07F0               	addwf	ClearStringReceive@i,f
  5775     06F0  1803               	skipnc
  5776     06F1  0AF1               	incf	ClearStringReceive@i+1,f
  5777     06F2  3000               	movlw	0
  5778     06F3  07F1               	addwf	ClearStringReceive@i+1,f
  5779     06F4                     i1l1984:
  5780     06F4  0871               	movf	ClearStringReceive@i+1,w
  5781     06F5  3A80               	xorlw	128
  5782     06F6  00FF               	movwf	btemp+1
  5783     06F7  3080               	movlw	128
  5784     06F8  027F               	subwf	btemp+1,w
  5785     06F9  1D03               	skipz
  5786     06FA  2EFD               	goto	u165_25
  5787     06FB  301E               	movlw	30
  5788     06FC  0270               	subwf	ClearStringReceive@i,w
  5789     06FD                     u165_25:
  5790     06FD  1C03               	skipc
  5791     06FE  2F00               	goto	u165_21
  5792     06FF  2F01               	goto	u165_20
  5793     0700                     u165_21:
  5794     0700  2EE9               	goto	i1l1980
  5795     0701                     u165_20:
  5796     0701                     i1l291:
  5797     0701  0008               	return
  5798     0702                     __end_of_ClearStringReceive:
  5799     007E                     btemp	set	126	;btemp
  5800     007E                     wtemp0	set	126
  5801                           
  5802                           	psect	config
  5803                           
  5804                           ;Config register CONFIG1 @ 0x2007
  5805                           ;	Oscillator Selection bits
  5806                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  5807                           ;	Watchdog Timer Enable bit
  5808                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  5809                           ;	Power-up Timer Enable bit
  5810                           ;	PWRTE = OFF, PWRT disabled
  5811                           ;	RE3/MCLR pin function select bit
  5812                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  5813                           ;	Code Protection bit
  5814                           ;	CP = OFF, Program memory code protection is disabled
  5815                           ;	Data Code Protection bit
  5816                           ;	CPD = OFF, Data memory code protection is disabled
  5817                           ;	Brown Out Reset Selection bits
  5818                           ;	BOREN = ON, BOR enabled
  5819                           ;	Internal External Switchover bit
  5820                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  5821                           ;	Fail-Safe Clock Monitor Enabled bit
  5822                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  5823                           ;	Low Voltage Programming Enable bit
  5824                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  5825                           ;	In-Circuit Debugger Mode bit
  5826                           ;	DEBUG = 0x1, unprogrammed default
  5827     2007                     	org	8199
  5828     2007  23D2               	dw	9170
  5829                           
  5830                           ;Config register CONFIG2 @ 0x2008
  5831                           ;	Brown-out Reset Selection bit
  5832                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  5833                           ;	Flash Program Memory Self Write Enable bits
  5834                           ;	WRT = OFF, Write protection off
  5835     2008                     	org	8200
  5836     2008  3FFF               	dw	16383

Data Sizes:
    Strings     102
    Constant    17
    Data        2
    BSS         76
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80     18      62
    BANK1            80      0      32
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCD_write_string@string	PTR unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[16]), STR_2(CODE[13]), STR_3(CODE[12]), STR_4(CODE[12]), 
		 -> STR_5(CODE[13]), STR_6(CODE[12]), STR_9(CODE[17]), 

    sp__strchr	PTR unsigned char  size(1) Largest target is 30
		 -> StringReceive(BANK0[30]), NULL(NULL[0]), 

    sp__strstr	PTR unsigned char  size(1) Largest target is 30
		 -> StringReceive(BANK0[30]), NULL(NULL[0]), 

    strchr@s	PTR const unsigned char  size(1) Largest target is 30
		 -> StringReceive(BANK0[30]), NULL(NULL[0]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 2
		 -> STR_7(CODE[2]), STR_8(CODE[2]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 2
		 -> STR_7(CODE[2]), STR_8(CODE[2]), 

    strncmp@l	PTR const unsigned char  size(1) Largest target is 30
		 -> StringReceive(BANK0[30]), NULL(NULL[0]), 

    strncmp@r	PTR const unsigned char  size(1) Largest target is 2
		 -> STR_7(CODE[2]), STR_8(CODE[2]), 

    strstr@h	PTR const unsigned char  size(1) Largest target is 30
		 -> StringReceive(BANK0[30]), NULL(NULL[0]), 

    strstr@n	PTR const unsigned char  size(1) Largest target is 2
		 -> STR_7(CODE[2]), STR_8(CODE[2]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _setDoorStatus->_strstr
    i1_LCD_write_string->i1_LCD_write_data
    i1_LCD_write_data->i1_LCD_pulse_clock
    i1_LCD_cursor_set->i1_LCD_write_command
    i1_LCD_write_command->i1_LCD_pulse_clock
    _strstr->_strncmp

Critical Paths under _main in BANK0

    _main->_picInit
    _picInit->_closeDoor
    _closeDoor->_LCD_cursor_set
    _closeDoor->_LCD_write_string
    _LCD_init->_LCD_clear
    _openDoor->_LCD_cursor_set
    _openDoor->_LCD_write_string
    _LCD_write_string->_LCD_write_data
    _LCD_write_data->_LCD_pulse_clock
    _LCD_cursor_set->_LCD_write_command
    _LCD_clear->_LCD_write_command
    _LCD_write_command->_LCD_pulse_clock

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    7830
                                             16 BANK0      2     2      0
                     _LCD_cursor_set
                          _closeDoor
                           _openDoor
                            _picInit
 ---------------------------------------------------------------------------------
 (1) _picInit                                              5     5      0    3595
                                             13 BANK0      3     3      0
                           _InitUART
                          _LCD_clear
                     _LCD_cursor_set
                           _LCD_init
                   _LCD_write_string
                          _closeDoor
 ---------------------------------------------------------------------------------
 (2) _closeDoor                                            3     3      0    1621
                                             10 BANK0      3     3      0
                          _LCD_clear
                     _LCD_cursor_set
                   _LCD_write_string
 ---------------------------------------------------------------------------------
 (2) _LCD_init                                             2     2      0     352
                                              9 BANK0      2     2      0
                          _LCD_clear
                    _LCD_pulse_clock
                  _LCD_write_command
 ---------------------------------------------------------------------------------
 (2) _InitUART                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _openDoor                                             3     3      0    1621
                                             10 BANK0      3     3      0
                          _LCD_clear
                     _LCD_cursor_set
                   _LCD_write_string
 ---------------------------------------------------------------------------------
 (3) _LCD_write_string                                     2     2      0     497
                                              8 BANK0      2     2      0
                     _LCD_write_data
 ---------------------------------------------------------------------------------
 (4) _LCD_write_data                                       3     3      0     176
                                              5 BANK0      3     3      0
                    _LCD_pulse_clock
 ---------------------------------------------------------------------------------
 (3) _LCD_cursor_set                                       2     1      1     948
                                              8 BANK0      2     1      1
                  _LCD_write_command
 ---------------------------------------------------------------------------------
 (3) _LCD_clear                                            1     1      0     176
                                              8 BANK0      1     1      0
                  _LCD_write_command
 ---------------------------------------------------------------------------------
 (4) _LCD_write_command                                    3     3      0     176
                                              5 BANK0      3     3      0
                    _LCD_pulse_clock
 ---------------------------------------------------------------------------------
 (5) _LCD_pulse_clock                                      1     1      0       0
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  4     4      0    1774
                                              0 BANK0      4     4      0
                      _setDoorStatus
 ---------------------------------------------------------------------------------
 (7) _setDoorStatus                                        0     0      0    1774
                 _ClearStringReceive
                             _strstr
                   i1_LCD_cursor_set
                 i1_LCD_write_string
 ---------------------------------------------------------------------------------
 (8) i1_LCD_write_string                                   2     2      0     266
                                              4 COMMON     2     2      0
                   i1_LCD_write_data
 ---------------------------------------------------------------------------------
 (9) i1_LCD_write_data                                     3     3      0     176
                                              1 COMMON     3     3      0
                  i1_LCD_pulse_clock
 ---------------------------------------------------------------------------------
 (8) i1_LCD_cursor_set                                     2     1      1     316
                                              4 COMMON     2     1      1
                i1_LCD_write_command
 ---------------------------------------------------------------------------------
 (9) i1_LCD_write_command                                  3     3      0     176
                                              1 COMMON     3     3      0
                  i1_LCD_pulse_clock
 ---------------------------------------------------------------------------------
 (10) i1_LCD_pulse_clock                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _strstr                                               6     5      1    1124
                                              6 COMMON     6     5      1
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (10) _strncmp                                             6     3      3     364
                                              0 COMMON     6     3      3
 ---------------------------------------------------------------------------------
 (10) _strlen                                              4     2      2     123
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (9) _strchr                                               3     1      2     197
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (8) _ClearStringReceive                                   2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_cursor_set
     _LCD_write_command
       _LCD_pulse_clock
   _closeDoor
     _LCD_clear
       _LCD_write_command
     _LCD_cursor_set
     _LCD_write_string
       _LCD_write_data
         _LCD_pulse_clock
   _openDoor
     _LCD_clear
     _LCD_cursor_set
     _LCD_write_string
   _picInit
     _InitUART
     _LCD_clear
     _LCD_cursor_set
     _LCD_init
       _LCD_clear
       _LCD_pulse_clock
       _LCD_write_command
     _LCD_write_string
     _closeDoor

 _ISR (ROOT)
   _setDoorStatus
     _ClearStringReceive
     _strstr
       _strchr
       _strlen
       _strncmp
     i1_LCD_cursor_set
       i1_LCD_write_command
         i1_LCD_pulse_clock
     i1_LCD_write_string
       i1_LCD_write_data
         i1_LCD_pulse_clock

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      20       7       40.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     12      3E       5       77.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      C       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      6C      12        0.0%
ABS                  0      0      6C       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Wed Feb 07 00:22:06 2024

                          pc 0002                           l20 074B                           l84 063F  
                         fsr 0004                          l110 0770                          l103 0419  
                        l146 0169                          l139 01FD                          l171 06C0  
                        l260 003E                          l328 0734                          l273 0558  
                        l283 0435                          l276 057E                          l286 047D  
                        l279 060E                          _GIE 005F                          _RB0 0030  
                        _RB1 0031                          _RB2 0032                          _RB3 0033  
                        _RB4 0034                          _RB5 0035                          _RB6 0036  
                        _RB7 0037                          _ISR 066F                          _pos 002C  
                        fsr0 0004                          indf 0000                         ?_ISR 0070  
                       l2060 053C                         l2300 0042                         l2070 0566  
                       l2062 054B                         l2310 006F                         l2302 0053  
                       l2080 05D3                         l2072 0574                         l2064 0555  
                       l2056 0530                         l2320 0090                         l2312 0074  
                       l2304 0059                         l2090 05F3                         l2082 05DB  
                       l2074 0579                         l2066 055C                         l2058 0536  
                       l2330 00B3                         l2322 009A                         l2314 007E  
                       l2306 005E                         l2092 05F8                         l2084 05E1  
                       l2076 05C8                         l2068 0560                         l2340 00CE  
                       l2324 00A2                         l2332 00B7                         l2316 0086  
                       l2308 0069                         l2094 0608                         l2086 05E4  
                       l2078 05CD                         l2334 00BD                         l2326 00A8  
                       l2318 008C                         l1800 06B3                         l2096 060B  
                       l2088 05E5                         l2336 00C3                         l2328 00AE  
                       l1730 076D                         l2098 060C                         l2338 00C9  
                       l1740 01CF                         l1732 016D                         l1900 03FA  
                       l1726 0763                         l1742 01E2                         l1734 016E  
                       l1750 00DA                         l1910 0408                         l1902 03FB  
                       l1728 0766                         l1744 01EF                         l1736 01B6  
                       l1760 015B                         l1752 0122                         l1912 040E  
                       l1904 03FC                         l1920 0429                         l2296 0036  
                       l1746 01F8                         l1738 01BB                         l1770 0612  
                       l1762 0164                         l1754 0127                         l1914 0414  
                       l1906 03FD                         l1930 0442                         l1922 042F  
                       l2298 003B                         l1780 062B                         l1772 0617  
                       l1756 013B                         l1748 00D9                         l1908 0402  
                       l1940 0462                         l1932 044A                         l1916 041A  
                       l1790 073B                         l1782 062F                         l1774 061B  
                       l1758 014E                         l1950 047B                         l1942 0467  
                       l1934 0450                         l1926 0439                         l1918 041F  
                       l1792 0745                         l1784 0635                         l1776 0621  
                       l1960 0727                         l1952 071D                         l1880 03C7  
                       l1944 0471                         l1936 0453                         l1928 043E  
                       l1786 0639                         l1778 0625                         l1794 069E  
                       l1970 0732                         l1962 072A                         l1954 0722  
                       l1890 03D8                         l1882 03D2                         l1946 0477  
                       l1938 0454                         l1788 0735                         l1796 06A0  
                       l1972 0733                         l1964 072B                         l1956 0723  
                       l1892 03DD                         l1884 03D5                         l1948 047A  
                       l1798 06AD                         l1966 072E                         l1958 0724  
                       l1894 03EC                         l1886 03D6                         l1878 03A3  
                       l1968 072F                         l1896 03F2                         l1888 03D7  
                       l1898 03F7                         STR_1 034E                         STR_2 035E  
                       STR_3 0378                         STR_4 0390                         STR_5 036B  
                       STR_6 0384                         STR_7 03A1                         STR_8 039F  
                       STR_9 033D                         _CREN 00C4                         u2100 0086  
                       u2101 0085                         u2110 008C                         u2111 008B  
                       u1400 062B                         u2120 0090                         u1305 01C0  
                       u1401 062A                         u2121 008F                         u1410 0635  
                       u2130 00A2                         u2050 0042                         u1315 01D2  
                       u1411 0634                         u2131 00A1                         u2051 0041  
                       _LEDO 0024                         u1420 06C0                         u2140 00A8  
                       u2060 0053                         u1325 00DD                         u1421 06BF  
                       u2141 00A7                         u2061 0052                         u2150 00AE  
                       u2070 0059                         u1335 00EF                         u2207 045C  
                       u2151 00AD                         u2071 0058                         u2160 00BD  
                       u2080 0069                         u1265 0171                         u1345 0102  
                       u2217 03CD                         u2161 00BC                         u2081 0068  
                       u2170 00C3                         u2090 006F                         u1275 0183  
                       u1355 0114                         u2227 03E3                         u2171 00C2  
                       u2091 006E                         u1380 0617                         u2180 00C9  
                       u1285 0196                         u1381 0616                         u1365 012C  
                       u2237 03F0                         u2181 00C8                         u1390 0621  
                       u1630 0435                         u1295 01A8                         u1391 0620  
                       u1375 013E                         u2247 05ED                         u1631 0434  
                       u1640 0439                         u2257 073F                         u1641 0438  
                       u2267 076A                         u2197 056E                         u1780 055C  
                       u1781 055B                         _PEIE 005E                         _RCIF 0065  
                       i1l84 066E                         _OERR 00C1                         _TXIF 0064  
                       _main 0036                         btemp 007E  __end_ofi1_LCD_write_command 0326  
                       start 0012        __end_of_setDoorStatus 0530                        ??_ISR 004C  
          ?i1_LCD_cursor_set 0074             __end_of_LCD_init 041A                        ?_main 0070  
                      STR_10 039C           ??i1_LCD_cursor_set 0075                        i1l110 077B  
                      i1l146 0291                        i1l139 0325                        i1l171 06E2  
                      i1l254 068E                        i1l291 0701                        i1l297 052F  
                      i1l994 05C7                        _RCREG 001A                        _SPBRG 0099  
                      _TXREG 0019                _StringDisplay 00A0              __end_of_picInit 057F  
              _StringReceive 002E                   _KeyPadChar 032C                        pclath 000A  
              main@adcResult 005C                        status 0003                        wtemp0 007E  
            __end_of_strncmp 04DB              __initialization 0015                 __end_of_main 00D6  
           __end_of_InitUART 0735            ?_LCD_write_string 0070                       ??_main 005C  
         ??_LCD_write_string 0054            __end_of_LCD_clear 074C                       _ADCON0 001F  
                     _ADCON1 009F                       _ADRESH 001E                       _ADRESL 009E  
        i1LCD_cursor_set@row 0075                       i1l1000 074D                       i1l1002 0762  
                     i1l1013 04DA                       i1l2000 05BE                       i1l1009 071C  
                     i1l2002 05C6                       i1l2010 064A                       i1l2020 0664  
                     i1l2012 0650                       i1l2022 0668                       i1l2014 0654  
                     i1l2006 0641                       i1l2030 06D5                       i1l2016 065A  
                     i1l2008 0646                       i1l2024 06C2                       i1l2040 04F7  
                     i1l2018 065E                       i1l2026 06C4                       i1l2050 051C  
                     i1l2042 0504                       i1l2034 04DB                       i1l2028 06D1  
                     i1l2052 0521                       i1l2044 0508                       i1l2036 04E8  
                     i1l2054 0529                       i1l2046 050C                       i1l2038 04F2  
                     i1l2048 0511                       i1l1802 0703                       i1l2290 0682  
                     i1l1804 0706                       i1l1820 0498                       i1l1812 047F  
                     i1l2292 0688                       i1l2284 066F                       i1l1806 070A  
                     i1l1830 04C8                       i1l1814 048D                       i1l1822 049E  
                     i1l2286 0673                       i1l2294 0689                       i1l1840 0758  
                     i1l1808 0716                       i1l1824 04A6                       i1l2288 067C  
                     i1l1842 0761                       i1l1834 074D                       i1l1826 04B2  
                     i1l1818 0490                       i1l1850 02DE                       i1l1836 0756  
                     i1l1828 04B8                       i1l1764 0771                       i1l1860 0320  
                     i1l1852 02E3                       i1l1766 0774                       i1l1854 02F7  
                     i1l1846 0293                       i1l1870 0263                       i1l1862 01FF  
                     i1l1768 0778                       i1l1856 030A                       i1l1848 0296  
                     i1l1872 0276                       i1l1864 0202                       u203_20 0673  
                     u203_21 0672                       i1l1858 0317                       i1l1874 0283  
                     i1l1866 024A                       i1l1980 06E9                       i1l1876 028C  
                     i1l1868 024F                       i1l1982 06EE                       i1l1974 06E3  
                     i1l1990 0590                       i1l1984 06F4                       i1l1992 05A2  
                     u204_20 067C                       u204_21 067B                       i1l1986 0580  
                     i1l1996 05A4                       i1l1988 0585                       i1l1998 05B9  
                     u150_20 0761                       u150_21 0760                       u143_20 0716  
                     u143_21 0715                       u151_25 0299                       u144_20 048D  
                     u144_21 048C                       u152_25 02AB                       u160_25 023C  
                     u145_20 04A6                       u145_21 04A5                       u153_25 02BE  
                     u161_25 0252                       u146_20 04B2                       u170_20 0646  
                     u146_21 04B1                       u170_21 0645                       u154_25 02D0  
                     u162_25 0266                       u147_20 04B8                       u171_20 0650  
                     u147_21 04B7                       u171_21 064F                       u155_25 02E6  
                     u227_27 0776                       u148_20 04C8                       u172_20 065A  
                     u148_21 04C7                       u172_21 0659                       u156_25 02FA  
                     u165_20 0701                       u149_20 0756                       u173_20 0664  
                     u165_21 0700                       u149_21 0755                       u173_21 0663  
                     u165_25 06FD                       u157_25 0205                       u166_20 0585  
                     u174_20 06E2                       u166_21 0584                       u174_21 06E1  
                     u158_25 0217                       u167_20 05A2                       u175_20 04E8  
                     u167_21 05A1                       u175_21 04E7                       u159_25 022A  
                     u168_20 05BE                       u176_20 0504                       u168_21 05BD  
                     u176_21 0503                       u169_20 05C6                       u177_20 051C  
                     u169_21 05C5                       u177_21 051B       LCD_write_string@string 0055  
                     _TRISB0 0430                       _TRISB1 0431                       _TRISB2 0432  
                     _TRISB3 0433                       _TRISB4 0434                       _TRISB5 0435  
                     _TRISB6 0436                       _TRISB7 0437                       _TRISC6 043E  
                     _TRISC7 043F            ?i1_LCD_write_data 0070           ??i1_LCD_write_data 0071  
                     _strchr 074C                       _strlen 0702             __end_of_openDoor 060F  
                     _strstr 057F   __end_of_ClearStringReceive 0702                    ??_picInit 0059  
               __pdataCOMMON 007C                       saved_w 007E                    ??_strncmp 0073  
    __end_of__initialization 0032                    ?_LCD_init 0070               __pcstackCOMMON 0070  
             _LCD_entry_mode 007D            _LCD_write_command 016A          i1LCD_write_string@i 0075  
             _LCD_cursor_set 060F           ?_LCD_write_command 0070          ??_LCD_write_command 0051  
                 __pbssBANK0 0020                   __pbssBANK1 00A0                    ?_InitUART 0070  
                 ??_LCD_init 0055            i1_LCD_pulse_clock 0771    __end_of_LCD_write_command 01FE  
                 __pmaintext 0036           ?i1_LCD_pulse_clock 0070       __end_of_LCD_cursor_set 0640  
                 __pintentry 0004          ClearStringReceive@i 0070          ??i1_LCD_pulse_clock 0070  
                    ?_strchr 0070                      ?_strlen 0070                      ?_strstr 0076  
                 __stringtab 0326     LCD_write_command@command 0053                   ??_InitUART 0050  
                 _doorStatus 002A    __end_ofi1_LCD_pulse_clock 077C       i1LCD_cursor_set@column 0074  
                  ?_openDoor 0070            __end_of_closeDoor 047E              ?_LCD_cursor_set 0054  
             _LCD_write_data 00D6                      __ptext1 0530                      __ptext2 041A  
                    __ptext3 03A3                      __ptext4 071D                      __ptext5 05C8  
                    __ptext6 069B                      __ptext7 00D6                      __ptext8 060F  
                    __ptext9 0735                      _picInit 0530   i1LCD_write_command@command 0073  
       i1LCD_write_data@data 0073                      clrloop0 077D                      _strncmp 047E  
                  _LCD_clear 0735         end_of_initialization 0032         LCD_cursor_set@column 0054  
                 ??_openDoor 0056          _LCD_display_control 007C       __end_of_LCD_write_data 016A  
                  _RCSTAbits 0018                      strchr@c 0070                      strchr@s 0072  
                    strlen@a 0072                      strlen@s 0073                      strstr@h 007B  
                    strstr@n 0076                    _PORTBbits 0006                    _PORTDbits 0008  
          ??_LCD_pulse_clock 0050                    _TRISBbits 0086                    _TRISDbits 0088  
                 ?_LCD_clear 0070           _ClearStringReceive 06E3                    _TXSTAbits 0098  
        ?_ClearStringReceive 0070              ?_LCD_write_data 0070                _setDoorStatus 04DB  
 __end_ofi1_LCD_write_string 06E3                __pidataCOMMON 0784           __end_of_KeyPadChar 033D  
             __end_of_strchr 0763               __end_of_strlen 071D               __end_of_strstr 05C8  
        start_initialization 0015         ??_ClearStringReceive 0070                  __end_of_ISR 069B  
           i1_LCD_cursor_set 0640               ?_setDoorStatus 0070                     ??_strchr 0072  
                   ??_strlen 0072                     ??_strstr 0077                    ___latbits 0002  
              __pcstackBANK0 004C          i1_LCD_write_command 0292                  ??_LCD_clear 0054  
           _LCD_write_string 069B             ??_LCD_cursor_set 0055         ?i1_LCD_write_command 0070  
                  _closeDoor 041A                    __pstrings 0326                    _doorClose 0026  
                   ?_picInit 0070             i1_LCD_write_data 01FE           LCD_write_data@data 0053  
                   ?_strncmp 0070            interrupt_function 0004                     _LCD_init 03A3  
                  clear_ram0 077C                     _PIE1bits 008C              ??_setDoorStatus 007C  
                   _PIR1bits 000C                     _GO_nDONE 00F9              _LCD_pulse_clock 0763  
      ??i1_LCD_write_command 0071                   ?_closeDoor 0070                  __stringbase 032B  
                   _InitUART 071D             ??_LCD_write_data 0051                    modff@F522 0020  
          LCD_cursor_set@row 0055     __end_ofi1_LCD_cursor_set 066F           __end_of__stringtab 032C  
         i1_LCD_write_string 06C1                     __ptext10 016A                     __ptext11 0763  
                   __ptext20 047E                     __ptext12 066F                     __ptext21 0702  
                   __ptext13 04DB                     __ptext22 074C                     __ptext14 06C1  
                   __ptext23 06E3                     __ptext15 01FE                     __ptext16 0640  
                   __ptext17 0292                     __ptext18 0771                     __ptext19 057F  
        ?i1_LCD_write_string 0070      __end_of_LCD_pulse_clock 0771                     _openDoor 05C8  
       ??i1_LCD_write_string 0074                  ??_closeDoor 0056     __end_of_LCD_write_string 06C1  
   i1LCD_write_string@string 0074            LCD_write_string@i 0054                     intlevel1 0000  
                  stringcode 0326     __end_ofi1_LCD_write_data 0292                     strncmp@l 0075  
                   strncmp@n 0071                     strncmp@r 0070                     stringdir 0326  
                   stringtab 0326                     strstr@nl 0079                 _StatusChange 0028  
           ?_LCD_pulse_clock 0070  
