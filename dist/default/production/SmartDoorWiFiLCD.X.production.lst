

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Thu Jan 25 04:12:33 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	strings,global,class=STRING,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	maintext,global,class=CODE,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2
    38                           	psect	intentry,global,class=CODE,delta=2
    39                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    40                           	dabs	1,0x7E,2
    41     0000                     
    42                           ; Generated 22/03/2023 GMT
    43                           ; 
    44                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    45                           ; All rights reserved.
    46                           ; 
    47                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    48                           ; 
    49                           ; Redistribution and use in source and binary forms, with or without modification, are
    50                           ; permitted provided that the following conditions are met:
    51                           ; 
    52                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    53                           ;        conditions and the following disclaimer.
    54                           ; 
    55                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    56                           ;        of conditions and the following disclaimer in the documentation and/or other
    57                           ;        materials provided with the distribution. Publication is not required when
    58                           ;        this file is used in an embedded application.
    59                           ; 
    60                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    61                           ;        software without specific prior written permission.
    62                           ; 
    63                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    64                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    65                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    66                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    67                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    68                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    69                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    70                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    71                           ; 
    72                           ; 
    73                           ; Code-generator required, PIC16F887 Definitions
    74                           ; 
    75                           ; SFR Addresses
    76     0000                     	;# 
    77     0001                     	;# 
    78     0002                     	;# 
    79     0003                     	;# 
    80     0004                     	;# 
    81     0005                     	;# 
    82     0006                     	;# 
    83     0007                     	;# 
    84     0008                     	;# 
    85     0009                     	;# 
    86     000A                     	;# 
    87     000B                     	;# 
    88     000C                     	;# 
    89     000D                     	;# 
    90     000E                     	;# 
    91     000E                     	;# 
    92     000F                     	;# 
    93     0010                     	;# 
    94     0011                     	;# 
    95     0012                     	;# 
    96     0013                     	;# 
    97     0014                     	;# 
    98     0015                     	;# 
    99     0015                     	;# 
   100     0016                     	;# 
   101     0017                     	;# 
   102     0018                     	;# 
   103     0019                     	;# 
   104     001A                     	;# 
   105     001B                     	;# 
   106     001B                     	;# 
   107     001C                     	;# 
   108     001D                     	;# 
   109     001E                     	;# 
   110     001F                     	;# 
   111     0081                     	;# 
   112     0085                     	;# 
   113     0086                     	;# 
   114     0087                     	;# 
   115     0088                     	;# 
   116     0089                     	;# 
   117     008C                     	;# 
   118     008D                     	;# 
   119     008E                     	;# 
   120     008F                     	;# 
   121     0090                     	;# 
   122     0091                     	;# 
   123     0092                     	;# 
   124     0093                     	;# 
   125     0093                     	;# 
   126     0093                     	;# 
   127     0094                     	;# 
   128     0095                     	;# 
   129     0096                     	;# 
   130     0097                     	;# 
   131     0098                     	;# 
   132     0099                     	;# 
   133     009A                     	;# 
   134     009B                     	;# 
   135     009C                     	;# 
   136     009D                     	;# 
   137     009E                     	;# 
   138     009F                     	;# 
   139     0105                     	;# 
   140     0107                     	;# 
   141     0108                     	;# 
   142     0109                     	;# 
   143     010C                     	;# 
   144     010C                     	;# 
   145     010D                     	;# 
   146     010E                     	;# 
   147     010F                     	;# 
   148     0185                     	;# 
   149     0187                     	;# 
   150     0188                     	;# 
   151     0189                     	;# 
   152     018C                     	;# 
   153     018D                     	;# 
   154     0000                     	;# 
   155     0001                     	;# 
   156     0002                     	;# 
   157     0003                     	;# 
   158     0004                     	;# 
   159     0005                     	;# 
   160     0006                     	;# 
   161     0007                     	;# 
   162     0008                     	;# 
   163     0009                     	;# 
   164     000A                     	;# 
   165     000B                     	;# 
   166     000C                     	;# 
   167     000D                     	;# 
   168     000E                     	;# 
   169     000E                     	;# 
   170     000F                     	;# 
   171     0010                     	;# 
   172     0011                     	;# 
   173     0012                     	;# 
   174     0013                     	;# 
   175     0014                     	;# 
   176     0015                     	;# 
   177     0015                     	;# 
   178     0016                     	;# 
   179     0017                     	;# 
   180     0018                     	;# 
   181     0019                     	;# 
   182     001A                     	;# 
   183     001B                     	;# 
   184     001B                     	;# 
   185     001C                     	;# 
   186     001D                     	;# 
   187     001E                     	;# 
   188     001F                     	;# 
   189     0081                     	;# 
   190     0085                     	;# 
   191     0086                     	;# 
   192     0087                     	;# 
   193     0088                     	;# 
   194     0089                     	;# 
   195     008C                     	;# 
   196     008D                     	;# 
   197     008E                     	;# 
   198     008F                     	;# 
   199     0090                     	;# 
   200     0091                     	;# 
   201     0092                     	;# 
   202     0093                     	;# 
   203     0093                     	;# 
   204     0093                     	;# 
   205     0094                     	;# 
   206     0095                     	;# 
   207     0096                     	;# 
   208     0097                     	;# 
   209     0098                     	;# 
   210     0099                     	;# 
   211     009A                     	;# 
   212     009B                     	;# 
   213     009C                     	;# 
   214     009D                     	;# 
   215     009E                     	;# 
   216     009F                     	;# 
   217     0105                     	;# 
   218     0107                     	;# 
   219     0108                     	;# 
   220     0109                     	;# 
   221     010C                     	;# 
   222     010C                     	;# 
   223     010D                     	;# 
   224     010E                     	;# 
   225     010F                     	;# 
   226     0185                     	;# 
   227     0187                     	;# 
   228     0188                     	;# 
   229     0189                     	;# 
   230     018C                     	;# 
   231     018D                     	;# 
   232     0000                     	;# 
   233     0001                     	;# 
   234     0002                     	;# 
   235     0003                     	;# 
   236     0004                     	;# 
   237     0005                     	;# 
   238     0006                     	;# 
   239     0007                     	;# 
   240     0008                     	;# 
   241     0009                     	;# 
   242     000A                     	;# 
   243     000B                     	;# 
   244     000C                     	;# 
   245     000D                     	;# 
   246     000E                     	;# 
   247     000E                     	;# 
   248     000F                     	;# 
   249     0010                     	;# 
   250     0011                     	;# 
   251     0012                     	;# 
   252     0013                     	;# 
   253     0014                     	;# 
   254     0015                     	;# 
   255     0015                     	;# 
   256     0016                     	;# 
   257     0017                     	;# 
   258     0018                     	;# 
   259     0019                     	;# 
   260     001A                     	;# 
   261     001B                     	;# 
   262     001B                     	;# 
   263     001C                     	;# 
   264     001D                     	;# 
   265     001E                     	;# 
   266     001F                     	;# 
   267     0081                     	;# 
   268     0085                     	;# 
   269     0086                     	;# 
   270     0087                     	;# 
   271     0088                     	;# 
   272     0089                     	;# 
   273     008C                     	;# 
   274     008D                     	;# 
   275     008E                     	;# 
   276     008F                     	;# 
   277     0090                     	;# 
   278     0091                     	;# 
   279     0092                     	;# 
   280     0093                     	;# 
   281     0093                     	;# 
   282     0093                     	;# 
   283     0094                     	;# 
   284     0095                     	;# 
   285     0096                     	;# 
   286     0097                     	;# 
   287     0098                     	;# 
   288     0099                     	;# 
   289     009A                     	;# 
   290     009B                     	;# 
   291     009C                     	;# 
   292     009D                     	;# 
   293     009E                     	;# 
   294     009F                     	;# 
   295     0105                     	;# 
   296     0107                     	;# 
   297     0108                     	;# 
   298     0109                     	;# 
   299     010C                     	;# 
   300     010C                     	;# 
   301     010D                     	;# 
   302     010E                     	;# 
   303     010F                     	;# 
   304     0185                     	;# 
   305     0187                     	;# 
   306     0188                     	;# 
   307     0189                     	;# 
   308     018C                     	;# 
   309     018D                     	;# 
   310     0000                     	;# 
   311     0001                     	;# 
   312     0002                     	;# 
   313     0003                     	;# 
   314     0004                     	;# 
   315     0005                     	;# 
   316     0006                     	;# 
   317     0007                     	;# 
   318     0008                     	;# 
   319     0009                     	;# 
   320     000A                     	;# 
   321     000B                     	;# 
   322     000C                     	;# 
   323     000D                     	;# 
   324     000E                     	;# 
   325     000E                     	;# 
   326     000F                     	;# 
   327     0010                     	;# 
   328     0011                     	;# 
   329     0012                     	;# 
   330     0013                     	;# 
   331     0014                     	;# 
   332     0015                     	;# 
   333     0015                     	;# 
   334     0016                     	;# 
   335     0017                     	;# 
   336     0018                     	;# 
   337     0019                     	;# 
   338     001A                     	;# 
   339     001B                     	;# 
   340     001B                     	;# 
   341     001C                     	;# 
   342     001D                     	;# 
   343     001E                     	;# 
   344     001F                     	;# 
   345     0081                     	;# 
   346     0085                     	;# 
   347     0086                     	;# 
   348     0087                     	;# 
   349     0088                     	;# 
   350     0089                     	;# 
   351     008C                     	;# 
   352     008D                     	;# 
   353     008E                     	;# 
   354     008F                     	;# 
   355     0090                     	;# 
   356     0091                     	;# 
   357     0092                     	;# 
   358     0093                     	;# 
   359     0093                     	;# 
   360     0093                     	;# 
   361     0094                     	;# 
   362     0095                     	;# 
   363     0096                     	;# 
   364     0097                     	;# 
   365     0098                     	;# 
   366     0099                     	;# 
   367     009A                     	;# 
   368     009B                     	;# 
   369     009C                     	;# 
   370     009D                     	;# 
   371     009E                     	;# 
   372     009F                     	;# 
   373     0105                     	;# 
   374     0107                     	;# 
   375     0108                     	;# 
   376     0109                     	;# 
   377     010C                     	;# 
   378     010C                     	;# 
   379     010D                     	;# 
   380     010E                     	;# 
   381     010F                     	;# 
   382     0185                     	;# 
   383     0187                     	;# 
   384     0188                     	;# 
   385     0189                     	;# 
   386     018C                     	;# 
   387     018D                     	;# 
   388     0000                     	;# 
   389     0001                     	;# 
   390     0002                     	;# 
   391     0003                     	;# 
   392     0004                     	;# 
   393     0005                     	;# 
   394     0006                     	;# 
   395     0007                     	;# 
   396     0008                     	;# 
   397     0009                     	;# 
   398     000A                     	;# 
   399     000B                     	;# 
   400     000C                     	;# 
   401     000D                     	;# 
   402     000E                     	;# 
   403     000E                     	;# 
   404     000F                     	;# 
   405     0010                     	;# 
   406     0011                     	;# 
   407     0012                     	;# 
   408     0013                     	;# 
   409     0014                     	;# 
   410     0015                     	;# 
   411     0015                     	;# 
   412     0016                     	;# 
   413     0017                     	;# 
   414     0018                     	;# 
   415     0019                     	;# 
   416     001A                     	;# 
   417     001B                     	;# 
   418     001B                     	;# 
   419     001C                     	;# 
   420     001D                     	;# 
   421     001E                     	;# 
   422     001F                     	;# 
   423     0081                     	;# 
   424     0085                     	;# 
   425     0086                     	;# 
   426     0087                     	;# 
   427     0088                     	;# 
   428     0089                     	;# 
   429     008C                     	;# 
   430     008D                     	;# 
   431     008E                     	;# 
   432     008F                     	;# 
   433     0090                     	;# 
   434     0091                     	;# 
   435     0092                     	;# 
   436     0093                     	;# 
   437     0093                     	;# 
   438     0093                     	;# 
   439     0094                     	;# 
   440     0095                     	;# 
   441     0096                     	;# 
   442     0097                     	;# 
   443     0098                     	;# 
   444     0099                     	;# 
   445     009A                     	;# 
   446     009B                     	;# 
   447     009C                     	;# 
   448     009D                     	;# 
   449     009E                     	;# 
   450     009F                     	;# 
   451     0105                     	;# 
   452     0107                     	;# 
   453     0108                     	;# 
   454     0109                     	;# 
   455     010C                     	;# 
   456     010C                     	;# 
   457     010D                     	;# 
   458     010E                     	;# 
   459     010F                     	;# 
   460     0185                     	;# 
   461     0187                     	;# 
   462     0188                     	;# 
   463     0189                     	;# 
   464     018C                     	;# 
   465     018D                     	;# 
   466     0000                     	;# 
   467     0001                     	;# 
   468     0002                     	;# 
   469     0003                     	;# 
   470     0004                     	;# 
   471     0005                     	;# 
   472     0006                     	;# 
   473     0007                     	;# 
   474     0008                     	;# 
   475     0009                     	;# 
   476     000A                     	;# 
   477     000B                     	;# 
   478     000C                     	;# 
   479     000D                     	;# 
   480     000E                     	;# 
   481     000E                     	;# 
   482     000F                     	;# 
   483     0010                     	;# 
   484     0011                     	;# 
   485     0012                     	;# 
   486     0013                     	;# 
   487     0014                     	;# 
   488     0015                     	;# 
   489     0015                     	;# 
   490     0016                     	;# 
   491     0017                     	;# 
   492     0018                     	;# 
   493     0019                     	;# 
   494     001A                     	;# 
   495     001B                     	;# 
   496     001B                     	;# 
   497     001C                     	;# 
   498     001D                     	;# 
   499     001E                     	;# 
   500     001F                     	;# 
   501     0081                     	;# 
   502     0085                     	;# 
   503     0086                     	;# 
   504     0087                     	;# 
   505     0088                     	;# 
   506     0089                     	;# 
   507     008C                     	;# 
   508     008D                     	;# 
   509     008E                     	;# 
   510     008F                     	;# 
   511     0090                     	;# 
   512     0091                     	;# 
   513     0092                     	;# 
   514     0093                     	;# 
   515     0093                     	;# 
   516     0093                     	;# 
   517     0094                     	;# 
   518     0095                     	;# 
   519     0096                     	;# 
   520     0097                     	;# 
   521     0098                     	;# 
   522     0099                     	;# 
   523     009A                     	;# 
   524     009B                     	;# 
   525     009C                     	;# 
   526     009D                     	;# 
   527     009E                     	;# 
   528     009F                     	;# 
   529     0105                     	;# 
   530     0107                     	;# 
   531     0108                     	;# 
   532     0109                     	;# 
   533     010C                     	;# 
   534     010C                     	;# 
   535     010D                     	;# 
   536     010E                     	;# 
   537     010F                     	;# 
   538     0185                     	;# 
   539     0187                     	;# 
   540     0188                     	;# 
   541     0189                     	;# 
   542     018C                     	;# 
   543     018D                     	;# 
   544     0000                     	;# 
   545     0001                     	;# 
   546     0002                     	;# 
   547     0003                     	;# 
   548     0004                     	;# 
   549     0005                     	;# 
   550     0006                     	;# 
   551     0007                     	;# 
   552     0008                     	;# 
   553     0009                     	;# 
   554     000A                     	;# 
   555     000B                     	;# 
   556     000C                     	;# 
   557     000D                     	;# 
   558     000E                     	;# 
   559     000E                     	;# 
   560     000F                     	;# 
   561     0010                     	;# 
   562     0011                     	;# 
   563     0012                     	;# 
   564     0013                     	;# 
   565     0014                     	;# 
   566     0015                     	;# 
   567     0015                     	;# 
   568     0016                     	;# 
   569     0017                     	;# 
   570     0018                     	;# 
   571     0019                     	;# 
   572     001A                     	;# 
   573     001B                     	;# 
   574     001B                     	;# 
   575     001C                     	;# 
   576     001D                     	;# 
   577     001E                     	;# 
   578     001F                     	;# 
   579     0081                     	;# 
   580     0085                     	;# 
   581     0086                     	;# 
   582     0087                     	;# 
   583     0088                     	;# 
   584     0089                     	;# 
   585     008C                     	;# 
   586     008D                     	;# 
   587     008E                     	;# 
   588     008F                     	;# 
   589     0090                     	;# 
   590     0091                     	;# 
   591     0092                     	;# 
   592     0093                     	;# 
   593     0093                     	;# 
   594     0093                     	;# 
   595     0094                     	;# 
   596     0095                     	;# 
   597     0096                     	;# 
   598     0097                     	;# 
   599     0098                     	;# 
   600     0099                     	;# 
   601     009A                     	;# 
   602     009B                     	;# 
   603     009C                     	;# 
   604     009D                     	;# 
   605     009E                     	;# 
   606     009F                     	;# 
   607     0105                     	;# 
   608     0107                     	;# 
   609     0108                     	;# 
   610     0109                     	;# 
   611     010C                     	;# 
   612     010C                     	;# 
   613     010D                     	;# 
   614     010E                     	;# 
   615     010F                     	;# 
   616     0185                     	;# 
   617     0187                     	;# 
   618     0188                     	;# 
   619     0189                     	;# 
   620     018C                     	;# 
   621     018D                     	;# 
   622     0000                     	;# 
   623     0001                     	;# 
   624     0002                     	;# 
   625     0003                     	;# 
   626     0004                     	;# 
   627     0005                     	;# 
   628     0006                     	;# 
   629     0007                     	;# 
   630     0008                     	;# 
   631     0009                     	;# 
   632     000A                     	;# 
   633     000B                     	;# 
   634     000C                     	;# 
   635     000D                     	;# 
   636     000E                     	;# 
   637     000E                     	;# 
   638     000F                     	;# 
   639     0010                     	;# 
   640     0011                     	;# 
   641     0012                     	;# 
   642     0013                     	;# 
   643     0014                     	;# 
   644     0015                     	;# 
   645     0015                     	;# 
   646     0016                     	;# 
   647     0017                     	;# 
   648     0018                     	;# 
   649     0019                     	;# 
   650     001A                     	;# 
   651     001B                     	;# 
   652     001B                     	;# 
   653     001C                     	;# 
   654     001D                     	;# 
   655     001E                     	;# 
   656     001F                     	;# 
   657     0081                     	;# 
   658     0085                     	;# 
   659     0086                     	;# 
   660     0087                     	;# 
   661     0088                     	;# 
   662     0089                     	;# 
   663     008C                     	;# 
   664     008D                     	;# 
   665     008E                     	;# 
   666     008F                     	;# 
   667     0090                     	;# 
   668     0091                     	;# 
   669     0092                     	;# 
   670     0093                     	;# 
   671     0093                     	;# 
   672     0093                     	;# 
   673     0094                     	;# 
   674     0095                     	;# 
   675     0096                     	;# 
   676     0097                     	;# 
   677     0098                     	;# 
   678     0099                     	;# 
   679     009A                     	;# 
   680     009B                     	;# 
   681     009C                     	;# 
   682     009D                     	;# 
   683     009E                     	;# 
   684     009F                     	;# 
   685     0105                     	;# 
   686     0107                     	;# 
   687     0108                     	;# 
   688     0109                     	;# 
   689     010C                     	;# 
   690     010C                     	;# 
   691     010D                     	;# 
   692     010E                     	;# 
   693     010F                     	;# 
   694     0185                     	;# 
   695     0187                     	;# 
   696     0188                     	;# 
   697     0189                     	;# 
   698     018C                     	;# 
   699     018D                     	;# 
   700     0000                     	;# 
   701     0001                     	;# 
   702     0002                     	;# 
   703     0003                     	;# 
   704     0004                     	;# 
   705     0005                     	;# 
   706     0006                     	;# 
   707     0007                     	;# 
   708     0008                     	;# 
   709     0009                     	;# 
   710     000A                     	;# 
   711     000B                     	;# 
   712     000C                     	;# 
   713     000D                     	;# 
   714     000E                     	;# 
   715     000E                     	;# 
   716     000F                     	;# 
   717     0010                     	;# 
   718     0011                     	;# 
   719     0012                     	;# 
   720     0013                     	;# 
   721     0014                     	;# 
   722     0015                     	;# 
   723     0015                     	;# 
   724     0016                     	;# 
   725     0017                     	;# 
   726     0018                     	;# 
   727     0019                     	;# 
   728     001A                     	;# 
   729     001B                     	;# 
   730     001B                     	;# 
   731     001C                     	;# 
   732     001D                     	;# 
   733     001E                     	;# 
   734     001F                     	;# 
   735     0081                     	;# 
   736     0085                     	;# 
   737     0086                     	;# 
   738     0087                     	;# 
   739     0088                     	;# 
   740     0089                     	;# 
   741     008C                     	;# 
   742     008D                     	;# 
   743     008E                     	;# 
   744     008F                     	;# 
   745     0090                     	;# 
   746     0091                     	;# 
   747     0092                     	;# 
   748     0093                     	;# 
   749     0093                     	;# 
   750     0093                     	;# 
   751     0094                     	;# 
   752     0095                     	;# 
   753     0096                     	;# 
   754     0097                     	;# 
   755     0098                     	;# 
   756     0099                     	;# 
   757     009A                     	;# 
   758     009B                     	;# 
   759     009C                     	;# 
   760     009D                     	;# 
   761     009E                     	;# 
   762     009F                     	;# 
   763     0105                     	;# 
   764     0107                     	;# 
   765     0108                     	;# 
   766     0109                     	;# 
   767     010C                     	;# 
   768     010C                     	;# 
   769     010D                     	;# 
   770     010E                     	;# 
   771     010F                     	;# 
   772     0185                     	;# 
   773     0187                     	;# 
   774     0188                     	;# 
   775     0189                     	;# 
   776     018C                     	;# 
   777     018D                     	;# 
   778     0000                     	;# 
   779     0001                     	;# 
   780     0002                     	;# 
   781     0003                     	;# 
   782     0004                     	;# 
   783     0005                     	;# 
   784     0006                     	;# 
   785     0007                     	;# 
   786     0008                     	;# 
   787     0009                     	;# 
   788     000A                     	;# 
   789     000B                     	;# 
   790     000C                     	;# 
   791     000D                     	;# 
   792     000E                     	;# 
   793     000E                     	;# 
   794     000F                     	;# 
   795     0010                     	;# 
   796     0011                     	;# 
   797     0012                     	;# 
   798     0013                     	;# 
   799     0014                     	;# 
   800     0015                     	;# 
   801     0015                     	;# 
   802     0016                     	;# 
   803     0017                     	;# 
   804     0018                     	;# 
   805     0019                     	;# 
   806     001A                     	;# 
   807     001B                     	;# 
   808     001B                     	;# 
   809     001C                     	;# 
   810     001D                     	;# 
   811     001E                     	;# 
   812     001F                     	;# 
   813     0081                     	;# 
   814     0085                     	;# 
   815     0086                     	;# 
   816     0087                     	;# 
   817     0088                     	;# 
   818     0089                     	;# 
   819     008C                     	;# 
   820     008D                     	;# 
   821     008E                     	;# 
   822     008F                     	;# 
   823     0090                     	;# 
   824     0091                     	;# 
   825     0092                     	;# 
   826     0093                     	;# 
   827     0093                     	;# 
   828     0093                     	;# 
   829     0094                     	;# 
   830     0095                     	;# 
   831     0096                     	;# 
   832     0097                     	;# 
   833     0098                     	;# 
   834     0099                     	;# 
   835     009A                     	;# 
   836     009B                     	;# 
   837     009C                     	;# 
   838     009D                     	;# 
   839     009E                     	;# 
   840     009F                     	;# 
   841     0105                     	;# 
   842     0107                     	;# 
   843     0108                     	;# 
   844     0109                     	;# 
   845     010C                     	;# 
   846     010C                     	;# 
   847     010D                     	;# 
   848     010E                     	;# 
   849     010F                     	;# 
   850     0185                     	;# 
   851     0187                     	;# 
   852     0188                     	;# 
   853     0189                     	;# 
   854     018C                     	;# 
   855     018D                     	;# 
   856     0000                     	;# 
   857     0001                     	;# 
   858     0002                     	;# 
   859     0003                     	;# 
   860     0004                     	;# 
   861     0005                     	;# 
   862     0006                     	;# 
   863     0007                     	;# 
   864     0008                     	;# 
   865     0009                     	;# 
   866     000A                     	;# 
   867     000B                     	;# 
   868     000C                     	;# 
   869     000D                     	;# 
   870     000E                     	;# 
   871     000E                     	;# 
   872     000F                     	;# 
   873     0010                     	;# 
   874     0011                     	;# 
   875     0012                     	;# 
   876     0013                     	;# 
   877     0014                     	;# 
   878     0015                     	;# 
   879     0015                     	;# 
   880     0016                     	;# 
   881     0017                     	;# 
   882     0018                     	;# 
   883     0019                     	;# 
   884     001A                     	;# 
   885     001B                     	;# 
   886     001B                     	;# 
   887     001C                     	;# 
   888     001D                     	;# 
   889     001E                     	;# 
   890     001F                     	;# 
   891     0081                     	;# 
   892     0085                     	;# 
   893     0086                     	;# 
   894     0087                     	;# 
   895     0088                     	;# 
   896     0089                     	;# 
   897     008C                     	;# 
   898     008D                     	;# 
   899     008E                     	;# 
   900     008F                     	;# 
   901     0090                     	;# 
   902     0091                     	;# 
   903     0092                     	;# 
   904     0093                     	;# 
   905     0093                     	;# 
   906     0093                     	;# 
   907     0094                     	;# 
   908     0095                     	;# 
   909     0096                     	;# 
   910     0097                     	;# 
   911     0098                     	;# 
   912     0099                     	;# 
   913     009A                     	;# 
   914     009B                     	;# 
   915     009C                     	;# 
   916     009D                     	;# 
   917     009E                     	;# 
   918     009F                     	;# 
   919     0105                     	;# 
   920     0107                     	;# 
   921     0108                     	;# 
   922     0109                     	;# 
   923     010C                     	;# 
   924     010C                     	;# 
   925     010D                     	;# 
   926     010E                     	;# 
   927     010F                     	;# 
   928     0185                     	;# 
   929     0187                     	;# 
   930     0188                     	;# 
   931     0189                     	;# 
   932     018C                     	;# 
   933     018D                     	;# 
   934     0000                     	;# 
   935     0001                     	;# 
   936     0002                     	;# 
   937     0003                     	;# 
   938     0004                     	;# 
   939     0005                     	;# 
   940     0006                     	;# 
   941     0007                     	;# 
   942     0008                     	;# 
   943     0009                     	;# 
   944     000A                     	;# 
   945     000B                     	;# 
   946     000C                     	;# 
   947     000D                     	;# 
   948     000E                     	;# 
   949     000E                     	;# 
   950     000F                     	;# 
   951     0010                     	;# 
   952     0011                     	;# 
   953     0012                     	;# 
   954     0013                     	;# 
   955     0014                     	;# 
   956     0015                     	;# 
   957     0015                     	;# 
   958     0016                     	;# 
   959     0017                     	;# 
   960     0018                     	;# 
   961     0019                     	;# 
   962     001A                     	;# 
   963     001B                     	;# 
   964     001B                     	;# 
   965     001C                     	;# 
   966     001D                     	;# 
   967     001E                     	;# 
   968     001F                     	;# 
   969     0081                     	;# 
   970     0085                     	;# 
   971     0086                     	;# 
   972     0087                     	;# 
   973     0088                     	;# 
   974     0089                     	;# 
   975     008C                     	;# 
   976     008D                     	;# 
   977     008E                     	;# 
   978     008F                     	;# 
   979     0090                     	;# 
   980     0091                     	;# 
   981     0092                     	;# 
   982     0093                     	;# 
   983     0093                     	;# 
   984     0093                     	;# 
   985     0094                     	;# 
   986     0095                     	;# 
   987     0096                     	;# 
   988     0097                     	;# 
   989     0098                     	;# 
   990     0099                     	;# 
   991     009A                     	;# 
   992     009B                     	;# 
   993     009C                     	;# 
   994     009D                     	;# 
   995     009E                     	;# 
   996     009F                     	;# 
   997     0105                     	;# 
   998     0107                     	;# 
   999     0108                     	;# 
  1000     0109                     	;# 
  1001     010C                     	;# 
  1002     010C                     	;# 
  1003     010D                     	;# 
  1004     010E                     	;# 
  1005     010F                     	;# 
  1006     0185                     	;# 
  1007     0187                     	;# 
  1008     0188                     	;# 
  1009     0189                     	;# 
  1010     018C                     	;# 
  1011     018D                     	;# 
  1012     0000                     	;# 
  1013     0001                     	;# 
  1014     0002                     	;# 
  1015     0003                     	;# 
  1016     0004                     	;# 
  1017     0005                     	;# 
  1018     0006                     	;# 
  1019     0007                     	;# 
  1020     0008                     	;# 
  1021     0009                     	;# 
  1022     000A                     	;# 
  1023     000B                     	;# 
  1024     000C                     	;# 
  1025     000D                     	;# 
  1026     000E                     	;# 
  1027     000E                     	;# 
  1028     000F                     	;# 
  1029     0010                     	;# 
  1030     0011                     	;# 
  1031     0012                     	;# 
  1032     0013                     	;# 
  1033     0014                     	;# 
  1034     0015                     	;# 
  1035     0015                     	;# 
  1036     0016                     	;# 
  1037     0017                     	;# 
  1038     0018                     	;# 
  1039     0019                     	;# 
  1040     001A                     	;# 
  1041     001B                     	;# 
  1042     001B                     	;# 
  1043     001C                     	;# 
  1044     001D                     	;# 
  1045     001E                     	;# 
  1046     001F                     	;# 
  1047     0081                     	;# 
  1048     0085                     	;# 
  1049     0086                     	;# 
  1050     0087                     	;# 
  1051     0088                     	;# 
  1052     0089                     	;# 
  1053     008C                     	;# 
  1054     008D                     	;# 
  1055     008E                     	;# 
  1056     008F                     	;# 
  1057     0090                     	;# 
  1058     0091                     	;# 
  1059     0092                     	;# 
  1060     0093                     	;# 
  1061     0093                     	;# 
  1062     0093                     	;# 
  1063     0094                     	;# 
  1064     0095                     	;# 
  1065     0096                     	;# 
  1066     0097                     	;# 
  1067     0098                     	;# 
  1068     0099                     	;# 
  1069     009A                     	;# 
  1070     009B                     	;# 
  1071     009C                     	;# 
  1072     009D                     	;# 
  1073     009E                     	;# 
  1074     009F                     	;# 
  1075     0105                     	;# 
  1076     0107                     	;# 
  1077     0108                     	;# 
  1078     0109                     	;# 
  1079     010C                     	;# 
  1080     010C                     	;# 
  1081     010D                     	;# 
  1082     010E                     	;# 
  1083     010F                     	;# 
  1084     0185                     	;# 
  1085     0187                     	;# 
  1086     0188                     	;# 
  1087     0189                     	;# 
  1088     018C                     	;# 
  1089     018D                     	;# 
  1090     0000                     	;# 
  1091     0001                     	;# 
  1092     0002                     	;# 
  1093     0003                     	;# 
  1094     0004                     	;# 
  1095     0005                     	;# 
  1096     0006                     	;# 
  1097     0007                     	;# 
  1098     0008                     	;# 
  1099     0009                     	;# 
  1100     000A                     	;# 
  1101     000B                     	;# 
  1102     000C                     	;# 
  1103     000D                     	;# 
  1104     000E                     	;# 
  1105     000E                     	;# 
  1106     000F                     	;# 
  1107     0010                     	;# 
  1108     0011                     	;# 
  1109     0012                     	;# 
  1110     0013                     	;# 
  1111     0014                     	;# 
  1112     0015                     	;# 
  1113     0015                     	;# 
  1114     0016                     	;# 
  1115     0017                     	;# 
  1116     0018                     	;# 
  1117     0019                     	;# 
  1118     001A                     	;# 
  1119     001B                     	;# 
  1120     001B                     	;# 
  1121     001C                     	;# 
  1122     001D                     	;# 
  1123     001E                     	;# 
  1124     001F                     	;# 
  1125     0081                     	;# 
  1126     0085                     	;# 
  1127     0086                     	;# 
  1128     0087                     	;# 
  1129     0088                     	;# 
  1130     0089                     	;# 
  1131     008C                     	;# 
  1132     008D                     	;# 
  1133     008E                     	;# 
  1134     008F                     	;# 
  1135     0090                     	;# 
  1136     0091                     	;# 
  1137     0092                     	;# 
  1138     0093                     	;# 
  1139     0093                     	;# 
  1140     0093                     	;# 
  1141     0094                     	;# 
  1142     0095                     	;# 
  1143     0096                     	;# 
  1144     0097                     	;# 
  1145     0098                     	;# 
  1146     0099                     	;# 
  1147     009A                     	;# 
  1148     009B                     	;# 
  1149     009C                     	;# 
  1150     009D                     	;# 
  1151     009E                     	;# 
  1152     009F                     	;# 
  1153     0105                     	;# 
  1154     0107                     	;# 
  1155     0108                     	;# 
  1156     0109                     	;# 
  1157     010C                     	;# 
  1158     010C                     	;# 
  1159     010D                     	;# 
  1160     010E                     	;# 
  1161     010F                     	;# 
  1162     0185                     	;# 
  1163     0187                     	;# 
  1164     0188                     	;# 
  1165     0189                     	;# 
  1166     018C                     	;# 
  1167     018D                     	;# 
  1168     0000                     	;# 
  1169     0001                     	;# 
  1170     0002                     	;# 
  1171     0003                     	;# 
  1172     0004                     	;# 
  1173     0005                     	;# 
  1174     0006                     	;# 
  1175     0007                     	;# 
  1176     0008                     	;# 
  1177     0009                     	;# 
  1178     000A                     	;# 
  1179     000B                     	;# 
  1180     000C                     	;# 
  1181     000D                     	;# 
  1182     000E                     	;# 
  1183     000E                     	;# 
  1184     000F                     	;# 
  1185     0010                     	;# 
  1186     0011                     	;# 
  1187     0012                     	;# 
  1188     0013                     	;# 
  1189     0014                     	;# 
  1190     0015                     	;# 
  1191     0015                     	;# 
  1192     0016                     	;# 
  1193     0017                     	;# 
  1194     0018                     	;# 
  1195     0019                     	;# 
  1196     001A                     	;# 
  1197     001B                     	;# 
  1198     001B                     	;# 
  1199     001C                     	;# 
  1200     001D                     	;# 
  1201     001E                     	;# 
  1202     001F                     	;# 
  1203     0081                     	;# 
  1204     0085                     	;# 
  1205     0086                     	;# 
  1206     0087                     	;# 
  1207     0088                     	;# 
  1208     0089                     	;# 
  1209     008C                     	;# 
  1210     008D                     	;# 
  1211     008E                     	;# 
  1212     008F                     	;# 
  1213     0090                     	;# 
  1214     0091                     	;# 
  1215     0092                     	;# 
  1216     0093                     	;# 
  1217     0093                     	;# 
  1218     0093                     	;# 
  1219     0094                     	;# 
  1220     0095                     	;# 
  1221     0096                     	;# 
  1222     0097                     	;# 
  1223     0098                     	;# 
  1224     0099                     	;# 
  1225     009A                     	;# 
  1226     009B                     	;# 
  1227     009C                     	;# 
  1228     009D                     	;# 
  1229     009E                     	;# 
  1230     009F                     	;# 
  1231     0105                     	;# 
  1232     0107                     	;# 
  1233     0108                     	;# 
  1234     0109                     	;# 
  1235     010C                     	;# 
  1236     010C                     	;# 
  1237     010D                     	;# 
  1238     010E                     	;# 
  1239     010F                     	;# 
  1240     0185                     	;# 
  1241     0187                     	;# 
  1242     0188                     	;# 
  1243     0189                     	;# 
  1244     018C                     	;# 
  1245     018D                     	;# 
  1246     0000                     	;# 
  1247     0001                     	;# 
  1248     0002                     	;# 
  1249     0003                     	;# 
  1250     0004                     	;# 
  1251     0005                     	;# 
  1252     0006                     	;# 
  1253     0007                     	;# 
  1254     0008                     	;# 
  1255     0009                     	;# 
  1256     000A                     	;# 
  1257     000B                     	;# 
  1258     000C                     	;# 
  1259     000D                     	;# 
  1260     000E                     	;# 
  1261     000E                     	;# 
  1262     000F                     	;# 
  1263     0010                     	;# 
  1264     0011                     	;# 
  1265     0012                     	;# 
  1266     0013                     	;# 
  1267     0014                     	;# 
  1268     0015                     	;# 
  1269     0015                     	;# 
  1270     0016                     	;# 
  1271     0017                     	;# 
  1272     0018                     	;# 
  1273     0019                     	;# 
  1274     001A                     	;# 
  1275     001B                     	;# 
  1276     001B                     	;# 
  1277     001C                     	;# 
  1278     001D                     	;# 
  1279     001E                     	;# 
  1280     001F                     	;# 
  1281     0081                     	;# 
  1282     0085                     	;# 
  1283     0086                     	;# 
  1284     0087                     	;# 
  1285     0088                     	;# 
  1286     0089                     	;# 
  1287     008C                     	;# 
  1288     008D                     	;# 
  1289     008E                     	;# 
  1290     008F                     	;# 
  1291     0090                     	;# 
  1292     0091                     	;# 
  1293     0092                     	;# 
  1294     0093                     	;# 
  1295     0093                     	;# 
  1296     0093                     	;# 
  1297     0094                     	;# 
  1298     0095                     	;# 
  1299     0096                     	;# 
  1300     0097                     	;# 
  1301     0098                     	;# 
  1302     0099                     	;# 
  1303     009A                     	;# 
  1304     009B                     	;# 
  1305     009C                     	;# 
  1306     009D                     	;# 
  1307     009E                     	;# 
  1308     009F                     	;# 
  1309     0105                     	;# 
  1310     0107                     	;# 
  1311     0108                     	;# 
  1312     0109                     	;# 
  1313     010C                     	;# 
  1314     010C                     	;# 
  1315     010D                     	;# 
  1316     010E                     	;# 
  1317     010F                     	;# 
  1318     0185                     	;# 
  1319     0187                     	;# 
  1320     0188                     	;# 
  1321     0189                     	;# 
  1322     018C                     	;# 
  1323     018D                     	;# 
  1324     0000                     	;# 
  1325     0001                     	;# 
  1326     0002                     	;# 
  1327     0003                     	;# 
  1328     0004                     	;# 
  1329     0005                     	;# 
  1330     0006                     	;# 
  1331     0007                     	;# 
  1332     0008                     	;# 
  1333     0009                     	;# 
  1334     000A                     	;# 
  1335     000B                     	;# 
  1336     000C                     	;# 
  1337     000D                     	;# 
  1338     000E                     	;# 
  1339     000E                     	;# 
  1340     000F                     	;# 
  1341     0010                     	;# 
  1342     0011                     	;# 
  1343     0012                     	;# 
  1344     0013                     	;# 
  1345     0014                     	;# 
  1346     0015                     	;# 
  1347     0015                     	;# 
  1348     0016                     	;# 
  1349     0017                     	;# 
  1350     0018                     	;# 
  1351     0019                     	;# 
  1352     001A                     	;# 
  1353     001B                     	;# 
  1354     001B                     	;# 
  1355     001C                     	;# 
  1356     001D                     	;# 
  1357     001E                     	;# 
  1358     001F                     	;# 
  1359     0081                     	;# 
  1360     0085                     	;# 
  1361     0086                     	;# 
  1362     0087                     	;# 
  1363     0088                     	;# 
  1364     0089                     	;# 
  1365     008C                     	;# 
  1366     008D                     	;# 
  1367     008E                     	;# 
  1368     008F                     	;# 
  1369     0090                     	;# 
  1370     0091                     	;# 
  1371     0092                     	;# 
  1372     0093                     	;# 
  1373     0093                     	;# 
  1374     0093                     	;# 
  1375     0094                     	;# 
  1376     0095                     	;# 
  1377     0096                     	;# 
  1378     0097                     	;# 
  1379     0098                     	;# 
  1380     0099                     	;# 
  1381     009A                     	;# 
  1382     009B                     	;# 
  1383     009C                     	;# 
  1384     009D                     	;# 
  1385     009E                     	;# 
  1386     009F                     	;# 
  1387     0105                     	;# 
  1388     0107                     	;# 
  1389     0108                     	;# 
  1390     0109                     	;# 
  1391     010C                     	;# 
  1392     010C                     	;# 
  1393     010D                     	;# 
  1394     010E                     	;# 
  1395     010F                     	;# 
  1396     0185                     	;# 
  1397     0187                     	;# 
  1398     0188                     	;# 
  1399     0189                     	;# 
  1400     018C                     	;# 
  1401     018D                     	;# 
  1402     0000                     	;# 
  1403     0001                     	;# 
  1404     0002                     	;# 
  1405     0003                     	;# 
  1406     0004                     	;# 
  1407     0005                     	;# 
  1408     0006                     	;# 
  1409     0007                     	;# 
  1410     0008                     	;# 
  1411     0009                     	;# 
  1412     000A                     	;# 
  1413     000B                     	;# 
  1414     000C                     	;# 
  1415     000D                     	;# 
  1416     000E                     	;# 
  1417     000E                     	;# 
  1418     000F                     	;# 
  1419     0010                     	;# 
  1420     0011                     	;# 
  1421     0012                     	;# 
  1422     0013                     	;# 
  1423     0014                     	;# 
  1424     0015                     	;# 
  1425     0015                     	;# 
  1426     0016                     	;# 
  1427     0017                     	;# 
  1428     0018                     	;# 
  1429     0019                     	;# 
  1430     001A                     	;# 
  1431     001B                     	;# 
  1432     001B                     	;# 
  1433     001C                     	;# 
  1434     001D                     	;# 
  1435     001E                     	;# 
  1436     001F                     	;# 
  1437     0081                     	;# 
  1438     0085                     	;# 
  1439     0086                     	;# 
  1440     0087                     	;# 
  1441     0088                     	;# 
  1442     0089                     	;# 
  1443     008C                     	;# 
  1444     008D                     	;# 
  1445     008E                     	;# 
  1446     008F                     	;# 
  1447     0090                     	;# 
  1448     0091                     	;# 
  1449     0092                     	;# 
  1450     0093                     	;# 
  1451     0093                     	;# 
  1452     0093                     	;# 
  1453     0094                     	;# 
  1454     0095                     	;# 
  1455     0096                     	;# 
  1456     0097                     	;# 
  1457     0098                     	;# 
  1458     0099                     	;# 
  1459     009A                     	;# 
  1460     009B                     	;# 
  1461     009C                     	;# 
  1462     009D                     	;# 
  1463     009E                     	;# 
  1464     009F                     	;# 
  1465     0105                     	;# 
  1466     0107                     	;# 
  1467     0108                     	;# 
  1468     0109                     	;# 
  1469     010C                     	;# 
  1470     010C                     	;# 
  1471     010D                     	;# 
  1472     010E                     	;# 
  1473     010F                     	;# 
  1474     0185                     	;# 
  1475     0187                     	;# 
  1476     0188                     	;# 
  1477     0189                     	;# 
  1478     018C                     	;# 
  1479     018D                     	;# 
  1480     0000                     	;# 
  1481     0001                     	;# 
  1482     0002                     	;# 
  1483     0003                     	;# 
  1484     0004                     	;# 
  1485     0005                     	;# 
  1486     0006                     	;# 
  1487     0007                     	;# 
  1488     0008                     	;# 
  1489     0009                     	;# 
  1490     000A                     	;# 
  1491     000B                     	;# 
  1492     000C                     	;# 
  1493     000D                     	;# 
  1494     000E                     	;# 
  1495     000E                     	;# 
  1496     000F                     	;# 
  1497     0010                     	;# 
  1498     0011                     	;# 
  1499     0012                     	;# 
  1500     0013                     	;# 
  1501     0014                     	;# 
  1502     0015                     	;# 
  1503     0015                     	;# 
  1504     0016                     	;# 
  1505     0017                     	;# 
  1506     0018                     	;# 
  1507     0019                     	;# 
  1508     001A                     	;# 
  1509     001B                     	;# 
  1510     001B                     	;# 
  1511     001C                     	;# 
  1512     001D                     	;# 
  1513     001E                     	;# 
  1514     001F                     	;# 
  1515     0081                     	;# 
  1516     0085                     	;# 
  1517     0086                     	;# 
  1518     0087                     	;# 
  1519     0088                     	;# 
  1520     0089                     	;# 
  1521     008C                     	;# 
  1522     008D                     	;# 
  1523     008E                     	;# 
  1524     008F                     	;# 
  1525     0090                     	;# 
  1526     0091                     	;# 
  1527     0092                     	;# 
  1528     0093                     	;# 
  1529     0093                     	;# 
  1530     0093                     	;# 
  1531     0094                     	;# 
  1532     0095                     	;# 
  1533     0096                     	;# 
  1534     0097                     	;# 
  1535     0098                     	;# 
  1536     0099                     	;# 
  1537     009A                     	;# 
  1538     009B                     	;# 
  1539     009C                     	;# 
  1540     009D                     	;# 
  1541     009E                     	;# 
  1542     009F                     	;# 
  1543     0105                     	;# 
  1544     0107                     	;# 
  1545     0108                     	;# 
  1546     0109                     	;# 
  1547     010C                     	;# 
  1548     010C                     	;# 
  1549     010D                     	;# 
  1550     010E                     	;# 
  1551     010F                     	;# 
  1552     0185                     	;# 
  1553     0187                     	;# 
  1554     0188                     	;# 
  1555     0189                     	;# 
  1556     018C                     	;# 
  1557     018D                     	;# 
  1558     0000                     	;# 
  1559     0001                     	;# 
  1560     0002                     	;# 
  1561     0003                     	;# 
  1562     0004                     	;# 
  1563     0005                     	;# 
  1564     0006                     	;# 
  1565     0007                     	;# 
  1566     0008                     	;# 
  1567     0009                     	;# 
  1568     000A                     	;# 
  1569     000B                     	;# 
  1570     000C                     	;# 
  1571     000D                     	;# 
  1572     000E                     	;# 
  1573     000E                     	;# 
  1574     000F                     	;# 
  1575     0010                     	;# 
  1576     0011                     	;# 
  1577     0012                     	;# 
  1578     0013                     	;# 
  1579     0014                     	;# 
  1580     0015                     	;# 
  1581     0015                     	;# 
  1582     0016                     	;# 
  1583     0017                     	;# 
  1584     0018                     	;# 
  1585     0019                     	;# 
  1586     001A                     	;# 
  1587     001B                     	;# 
  1588     001B                     	;# 
  1589     001C                     	;# 
  1590     001D                     	;# 
  1591     001E                     	;# 
  1592     001F                     	;# 
  1593     0081                     	;# 
  1594     0085                     	;# 
  1595     0086                     	;# 
  1596     0087                     	;# 
  1597     0088                     	;# 
  1598     0089                     	;# 
  1599     008C                     	;# 
  1600     008D                     	;# 
  1601     008E                     	;# 
  1602     008F                     	;# 
  1603     0090                     	;# 
  1604     0091                     	;# 
  1605     0092                     	;# 
  1606     0093                     	;# 
  1607     0093                     	;# 
  1608     0093                     	;# 
  1609     0094                     	;# 
  1610     0095                     	;# 
  1611     0096                     	;# 
  1612     0097                     	;# 
  1613     0098                     	;# 
  1614     0099                     	;# 
  1615     009A                     	;# 
  1616     009B                     	;# 
  1617     009C                     	;# 
  1618     009D                     	;# 
  1619     009E                     	;# 
  1620     009F                     	;# 
  1621     0105                     	;# 
  1622     0107                     	;# 
  1623     0108                     	;# 
  1624     0109                     	;# 
  1625     010C                     	;# 
  1626     010C                     	;# 
  1627     010D                     	;# 
  1628     010E                     	;# 
  1629     010F                     	;# 
  1630     0185                     	;# 
  1631     0187                     	;# 
  1632     0188                     	;# 
  1633     0189                     	;# 
  1634     018C                     	;# 
  1635     018D                     	;# 
  1636     0000                     	;# 
  1637     0001                     	;# 
  1638     0002                     	;# 
  1639     0003                     	;# 
  1640     0004                     	;# 
  1641     0005                     	;# 
  1642     0006                     	;# 
  1643     0007                     	;# 
  1644     0008                     	;# 
  1645     0009                     	;# 
  1646     000A                     	;# 
  1647     000B                     	;# 
  1648     000C                     	;# 
  1649     000D                     	;# 
  1650     000E                     	;# 
  1651     000E                     	;# 
  1652     000F                     	;# 
  1653     0010                     	;# 
  1654     0011                     	;# 
  1655     0012                     	;# 
  1656     0013                     	;# 
  1657     0014                     	;# 
  1658     0015                     	;# 
  1659     0015                     	;# 
  1660     0016                     	;# 
  1661     0017                     	;# 
  1662     0018                     	;# 
  1663     0019                     	;# 
  1664     001A                     	;# 
  1665     001B                     	;# 
  1666     001B                     	;# 
  1667     001C                     	;# 
  1668     001D                     	;# 
  1669     001E                     	;# 
  1670     001F                     	;# 
  1671     0081                     	;# 
  1672     0085                     	;# 
  1673     0086                     	;# 
  1674     0087                     	;# 
  1675     0088                     	;# 
  1676     0089                     	;# 
  1677     008C                     	;# 
  1678     008D                     	;# 
  1679     008E                     	;# 
  1680     008F                     	;# 
  1681     0090                     	;# 
  1682     0091                     	;# 
  1683     0092                     	;# 
  1684     0093                     	;# 
  1685     0093                     	;# 
  1686     0093                     	;# 
  1687     0094                     	;# 
  1688     0095                     	;# 
  1689     0096                     	;# 
  1690     0097                     	;# 
  1691     0098                     	;# 
  1692     0099                     	;# 
  1693     009A                     	;# 
  1694     009B                     	;# 
  1695     009C                     	;# 
  1696     009D                     	;# 
  1697     009E                     	;# 
  1698     009F                     	;# 
  1699     0105                     	;# 
  1700     0107                     	;# 
  1701     0108                     	;# 
  1702     0109                     	;# 
  1703     010C                     	;# 
  1704     010C                     	;# 
  1705     010D                     	;# 
  1706     010E                     	;# 
  1707     010F                     	;# 
  1708     0185                     	;# 
  1709     0187                     	;# 
  1710     0188                     	;# 
  1711     0189                     	;# 
  1712     018C                     	;# 
  1713     018D                     	;# 
  1714     0000                     	;# 
  1715     0001                     	;# 
  1716     0002                     	;# 
  1717     0003                     	;# 
  1718     0004                     	;# 
  1719     0005                     	;# 
  1720     0006                     	;# 
  1721     0007                     	;# 
  1722     0008                     	;# 
  1723     0009                     	;# 
  1724     000A                     	;# 
  1725     000B                     	;# 
  1726     000C                     	;# 
  1727     000D                     	;# 
  1728     000E                     	;# 
  1729     000E                     	;# 
  1730     000F                     	;# 
  1731     0010                     	;# 
  1732     0011                     	;# 
  1733     0012                     	;# 
  1734     0013                     	;# 
  1735     0014                     	;# 
  1736     0015                     	;# 
  1737     0015                     	;# 
  1738     0016                     	;# 
  1739     0017                     	;# 
  1740     0018                     	;# 
  1741     0019                     	;# 
  1742     001A                     	;# 
  1743     001B                     	;# 
  1744     001B                     	;# 
  1745     001C                     	;# 
  1746     001D                     	;# 
  1747     001E                     	;# 
  1748     001F                     	;# 
  1749     0081                     	;# 
  1750     0085                     	;# 
  1751     0086                     	;# 
  1752     0087                     	;# 
  1753     0088                     	;# 
  1754     0089                     	;# 
  1755     008C                     	;# 
  1756     008D                     	;# 
  1757     008E                     	;# 
  1758     008F                     	;# 
  1759     0090                     	;# 
  1760     0091                     	;# 
  1761     0092                     	;# 
  1762     0093                     	;# 
  1763     0093                     	;# 
  1764     0093                     	;# 
  1765     0094                     	;# 
  1766     0095                     	;# 
  1767     0096                     	;# 
  1768     0097                     	;# 
  1769     0098                     	;# 
  1770     0099                     	;# 
  1771     009A                     	;# 
  1772     009B                     	;# 
  1773     009C                     	;# 
  1774     009D                     	;# 
  1775     009E                     	;# 
  1776     009F                     	;# 
  1777     0105                     	;# 
  1778     0107                     	;# 
  1779     0108                     	;# 
  1780     0109                     	;# 
  1781     010C                     	;# 
  1782     010C                     	;# 
  1783     010D                     	;# 
  1784     010E                     	;# 
  1785     010F                     	;# 
  1786     0185                     	;# 
  1787     0187                     	;# 
  1788     0188                     	;# 
  1789     0189                     	;# 
  1790     018C                     	;# 
  1791     018D                     	;# 
  1792     0000                     	;# 
  1793     0001                     	;# 
  1794     0002                     	;# 
  1795     0003                     	;# 
  1796     0004                     	;# 
  1797     0005                     	;# 
  1798     0006                     	;# 
  1799     0007                     	;# 
  1800     0008                     	;# 
  1801     0009                     	;# 
  1802     000A                     	;# 
  1803     000B                     	;# 
  1804     000C                     	;# 
  1805     000D                     	;# 
  1806     000E                     	;# 
  1807     000E                     	;# 
  1808     000F                     	;# 
  1809     0010                     	;# 
  1810     0011                     	;# 
  1811     0012                     	;# 
  1812     0013                     	;# 
  1813     0014                     	;# 
  1814     0015                     	;# 
  1815     0015                     	;# 
  1816     0016                     	;# 
  1817     0017                     	;# 
  1818     0018                     	;# 
  1819     0019                     	;# 
  1820     001A                     	;# 
  1821     001B                     	;# 
  1822     001B                     	;# 
  1823     001C                     	;# 
  1824     001D                     	;# 
  1825     001E                     	;# 
  1826     001F                     	;# 
  1827     0081                     	;# 
  1828     0085                     	;# 
  1829     0086                     	;# 
  1830     0087                     	;# 
  1831     0088                     	;# 
  1832     0089                     	;# 
  1833     008C                     	;# 
  1834     008D                     	;# 
  1835     008E                     	;# 
  1836     008F                     	;# 
  1837     0090                     	;# 
  1838     0091                     	;# 
  1839     0092                     	;# 
  1840     0093                     	;# 
  1841     0093                     	;# 
  1842     0093                     	;# 
  1843     0094                     	;# 
  1844     0095                     	;# 
  1845     0096                     	;# 
  1846     0097                     	;# 
  1847     0098                     	;# 
  1848     0099                     	;# 
  1849     009A                     	;# 
  1850     009B                     	;# 
  1851     009C                     	;# 
  1852     009D                     	;# 
  1853     009E                     	;# 
  1854     009F                     	;# 
  1855     0105                     	;# 
  1856     0107                     	;# 
  1857     0108                     	;# 
  1858     0109                     	;# 
  1859     010C                     	;# 
  1860     010C                     	;# 
  1861     010D                     	;# 
  1862     010E                     	;# 
  1863     010F                     	;# 
  1864     0185                     	;# 
  1865     0187                     	;# 
  1866     0188                     	;# 
  1867     0189                     	;# 
  1868     018C                     	;# 
  1869     018D                     	;# 
  1870     0000                     	;# 
  1871     0001                     	;# 
  1872     0002                     	;# 
  1873     0003                     	;# 
  1874     0004                     	;# 
  1875     0005                     	;# 
  1876     0006                     	;# 
  1877     0007                     	;# 
  1878     0008                     	;# 
  1879     0009                     	;# 
  1880     000A                     	;# 
  1881     000B                     	;# 
  1882     000C                     	;# 
  1883     000D                     	;# 
  1884     000E                     	;# 
  1885     000E                     	;# 
  1886     000F                     	;# 
  1887     0010                     	;# 
  1888     0011                     	;# 
  1889     0012                     	;# 
  1890     0013                     	;# 
  1891     0014                     	;# 
  1892     0015                     	;# 
  1893     0015                     	;# 
  1894     0016                     	;# 
  1895     0017                     	;# 
  1896     0018                     	;# 
  1897     0019                     	;# 
  1898     001A                     	;# 
  1899     001B                     	;# 
  1900     001B                     	;# 
  1901     001C                     	;# 
  1902     001D                     	;# 
  1903     001E                     	;# 
  1904     001F                     	;# 
  1905     0081                     	;# 
  1906     0085                     	;# 
  1907     0086                     	;# 
  1908     0087                     	;# 
  1909     0088                     	;# 
  1910     0089                     	;# 
  1911     008C                     	;# 
  1912     008D                     	;# 
  1913     008E                     	;# 
  1914     008F                     	;# 
  1915     0090                     	;# 
  1916     0091                     	;# 
  1917     0092                     	;# 
  1918     0093                     	;# 
  1919     0093                     	;# 
  1920     0093                     	;# 
  1921     0094                     	;# 
  1922     0095                     	;# 
  1923     0096                     	;# 
  1924     0097                     	;# 
  1925     0098                     	;# 
  1926     0099                     	;# 
  1927     009A                     	;# 
  1928     009B                     	;# 
  1929     009C                     	;# 
  1930     009D                     	;# 
  1931     009E                     	;# 
  1932     009F                     	;# 
  1933     0105                     	;# 
  1934     0107                     	;# 
  1935     0108                     	;# 
  1936     0109                     	;# 
  1937     010C                     	;# 
  1938     010C                     	;# 
  1939     010D                     	;# 
  1940     010E                     	;# 
  1941     010F                     	;# 
  1942     0185                     	;# 
  1943     0187                     	;# 
  1944     0188                     	;# 
  1945     0189                     	;# 
  1946     018C                     	;# 
  1947     018D                     	;# 
  1948     0000                     	;# 
  1949     0001                     	;# 
  1950     0002                     	;# 
  1951     0003                     	;# 
  1952     0004                     	;# 
  1953     0005                     	;# 
  1954     0006                     	;# 
  1955     0007                     	;# 
  1956     0008                     	;# 
  1957     0009                     	;# 
  1958     000A                     	;# 
  1959     000B                     	;# 
  1960     000C                     	;# 
  1961     000D                     	;# 
  1962     000E                     	;# 
  1963     000E                     	;# 
  1964     000F                     	;# 
  1965     0010                     	;# 
  1966     0011                     	;# 
  1967     0012                     	;# 
  1968     0013                     	;# 
  1969     0014                     	;# 
  1970     0015                     	;# 
  1971     0015                     	;# 
  1972     0016                     	;# 
  1973     0017                     	;# 
  1974     0018                     	;# 
  1975     0019                     	;# 
  1976     001A                     	;# 
  1977     001B                     	;# 
  1978     001B                     	;# 
  1979     001C                     	;# 
  1980     001D                     	;# 
  1981     001E                     	;# 
  1982     001F                     	;# 
  1983     0081                     	;# 
  1984     0085                     	;# 
  1985     0086                     	;# 
  1986     0087                     	;# 
  1987     0088                     	;# 
  1988     0089                     	;# 
  1989     008C                     	;# 
  1990     008D                     	;# 
  1991     008E                     	;# 
  1992     008F                     	;# 
  1993     0090                     	;# 
  1994     0091                     	;# 
  1995     0092                     	;# 
  1996     0093                     	;# 
  1997     0093                     	;# 
  1998     0093                     	;# 
  1999     0094                     	;# 
  2000     0095                     	;# 
  2001     0096                     	;# 
  2002     0097                     	;# 
  2003     0098                     	;# 
  2004     0099                     	;# 
  2005     009A                     	;# 
  2006     009B                     	;# 
  2007     009C                     	;# 
  2008     009D                     	;# 
  2009     009E                     	;# 
  2010     009F                     	;# 
  2011     0105                     	;# 
  2012     0107                     	;# 
  2013     0108                     	;# 
  2014     0109                     	;# 
  2015     010C                     	;# 
  2016     010C                     	;# 
  2017     010D                     	;# 
  2018     010E                     	;# 
  2019     010F                     	;# 
  2020     0185                     	;# 
  2021     0187                     	;# 
  2022     0188                     	;# 
  2023     0189                     	;# 
  2024     018C                     	;# 
  2025     018D                     	;# 
  2026                           
  2027                           	psect	idataCOMMON
  2028     0E9E                     __pidataCOMMON:
  2029                           
  2030                           ;initializer for _mode
  2031     0E9E  3442               	retlw	66
  2032                           
  2033                           ;initializer for _LCD_display_control
  2034     0E9F  340C               	retlw	12
  2035                           
  2036                           ;initializer for _LCD_entry_mode
  2037     0EA0  3406               	retlw	6
  2038                           
  2039                           	psect	idataBANK1
  2040     0FC4                     __pidataBANK1:
  2041                           
  2042                           ;initializer for _PassWord
  2043     0FC4  345F               	retlw	95
  2044     0FC5  3400               	retlw	0
  2045     0FC6  3400               	retlw	0
  2046     0FC7  3400               	retlw	0
  2047     0FC8  3400               	retlw	0
  2048     0FC9  3400               	retlw	0
  2049     0FCA  3400               	retlw	0
  2050     0FCB  3400               	retlw	0
  2051     0FCC  3400               	retlw	0
  2052     0FCD  3400               	retlw	0
  2053     0FCE  3400               	retlw	0
  2054     0FCF  3400               	retlw	0
  2055     0FD0  3400               	retlw	0
  2056     0FD1  3400               	retlw	0
  2057     0FD2  3400               	retlw	0
  2058     0FD3  3400               	retlw	0
  2059     0FD4  3400               	retlw	0
  2060     0FD5  3400               	retlw	0
  2061     0FD6  3400               	retlw	0
  2062     0FD7  3400               	retlw	0
  2063     0FD8  3400               	retlw	0
  2064     0FD9  3400               	retlw	0
  2065     0FDA  3400               	retlw	0
  2066     0FDB  3400               	retlw	0
  2067     0FDC  3400               	retlw	0
  2068     0FDD  3400               	retlw	0
  2069     0FDE  3400               	retlw	0
  2070     0FDF  3400               	retlw	0
  2071     0FE0  3400               	retlw	0
  2072     0FE1  3400               	retlw	0
  2073                           
  2074                           ;initializer for _WifiName
  2075     0FE2  345F               	retlw	95
  2076     0FE3  3400               	retlw	0
  2077     0FE4  3400               	retlw	0
  2078     0FE5  3400               	retlw	0
  2079     0FE6  3400               	retlw	0
  2080     0FE7  3400               	retlw	0
  2081     0FE8  3400               	retlw	0
  2082     0FE9  3400               	retlw	0
  2083     0FEA  3400               	retlw	0
  2084     0FEB  3400               	retlw	0
  2085     0FEC  3400               	retlw	0
  2086     0FED  3400               	retlw	0
  2087     0FEE  3400               	retlw	0
  2088     0FEF  3400               	retlw	0
  2089     0FF0  3400               	retlw	0
  2090     0FF1  3400               	retlw	0
  2091     0FF2  3400               	retlw	0
  2092     0FF3  3400               	retlw	0
  2093     0FF4  3400               	retlw	0
  2094     0FF5  3400               	retlw	0
  2095     0FF6  3400               	retlw	0
  2096     0FF7  3400               	retlw	0
  2097     0FF8  3400               	retlw	0
  2098     0FF9  3400               	retlw	0
  2099     0FFA  3400               	retlw	0
  2100     0FFB  3400               	retlw	0
  2101     0FFC  3400               	retlw	0
  2102     0FFD  3400               	retlw	0
  2103     0FFE  3400               	retlw	0
  2104     0FFF  3400               	retlw	0
  2105                           
  2106                           	psect	strings
  2107     0400                     __pstrings:
  2108     0400                     stringtab:
  2109     0400                     __stringtab:
  2110                           
  2111                           ;	String table - string pointers are 1 byte each
  2112     0400  1BFF               	btfsc	btemp+1,7
  2113     0401  2C0A               	ljmp	stringcode
  2114     0402  1383               	bcf	3,7
  2115     0403  187F               	btfsc	btemp+1,0
  2116     0404  1783               	bsf	3,7
  2117     0405  0800               	movf	0,w
  2118     0406  0A84               	incf	4,f
  2119     0407  1903               	skipnz
  2120     0408  0AFF               	incf	btemp+1,f
  2121     0409  0008               	return
  2122     040A                     stringcode:
  2123     040A                     stringdir:
  2124     040A  3004               	movlw	high stringdir
  2125     040B  008A               	movwf	10
  2126     040C  0804               	movf	4,w
  2127     040D  0A84               	incf	4,f
  2128     040E  0782               	addwf	2,f
  2129     040F                     __stringbase:
  2130     040F  3400               	retlw	0
  2131     0410                     __end_of__stringtab:
  2132     0410                     _KeyPadChar:
  2133     0410  3431               	retlw	49
  2134     0411  3432               	retlw	50
  2135     0412  3433               	retlw	51
  2136     0413  3441               	retlw	65
  2137     0414  3434               	retlw	52
  2138     0415  3435               	retlw	53
  2139     0416  3436               	retlw	54
  2140     0417  3442               	retlw	66
  2141     0418  3437               	retlw	55
  2142     0419  3438               	retlw	56
  2143     041A  3439               	retlw	57
  2144     041B  3443               	retlw	67
  2145     041C  342A               	retlw	42
  2146     041D  3430               	retlw	48
  2147     041E  3423               	retlw	35
  2148     041F  3444               	retlw	68
  2149     0420  343F               	retlw	63
  2150     0421                     __end_of_KeyPadChar:
  2151     0019                     _TXREG	set	25
  2152     0018                     _RCSTAbits	set	24
  2153     001A                     _RCREG	set	26
  2154     000C                     _PIR1bits	set	12
  2155     001E                     _ADRESH	set	30
  2156     001F                     _ADCON0	set	31
  2157     0006                     _PORTBbits	set	6
  2158     0006                     _PORTB	set	6
  2159     0008                     _PORTDbits	set	8
  2160     0037                     _RB7	set	55
  2161     0036                     _RB6	set	54
  2162     0035                     _RB5	set	53
  2163     0034                     _RB4	set	52
  2164     0033                     _RB3	set	51
  2165     0032                     _RB2	set	50
  2166     0031                     _RB1	set	49
  2167     0030                     _RB0	set	48
  2168     00C4                     _CREN	set	196
  2169     00C1                     _OERR	set	193
  2170     0064                     _TXIF	set	100
  2171     005F                     _GIE	set	95
  2172     005E                     _PEIE	set	94
  2173     0065                     _RCIF	set	101
  2174     00F9                     _GO_nDONE	set	249
  2175     008C                     _PIE1bits	set	140
  2176     0099                     _SPBRG	set	153
  2177     0098                     _TXSTAbits	set	152
  2178     009E                     _ADRESL	set	158
  2179     009F                     _ADCON1	set	159
  2180     0086                     _TRISB	set	134
  2181     0088                     _TRISDbits	set	136
  2182     0437                     _TRISB7	set	1079
  2183     0436                     _TRISB6	set	1078
  2184     0435                     _TRISB5	set	1077
  2185     0434                     _TRISB4	set	1076
  2186     0433                     _TRISB3	set	1075
  2187     0432                     _TRISB2	set	1074
  2188     0431                     _TRISB1	set	1073
  2189     0430                     _TRISB0	set	1072
  2190     043F                     _TRISC7	set	1087
  2191     043E                     _TRISC6	set	1086
  2192     0428                     _TRISA0	set	1064
  2193     0421                     STR_6:
  2194     0421  3457               	retlw	87	;'W'
  2195     0422  3461               	retlw	97	;'a'
  2196     0423  3469               	retlw	105	;'i'
  2197     0424  3474               	retlw	116	;'t'
  2198     0425  3469               	retlw	105	;'i'
  2199     0426  346E               	retlw	110	;'n'
  2200     0427  3467               	retlw	103	;'g'
  2201     0428  3420               	retlw	32	;' '
  2202     0429  3474               	retlw	116	;'t'
  2203     042A  346F               	retlw	111	;'o'
  2204     042B  3420               	retlw	32	;' '
  2205     042C  3452               	retlw	82	;'R'
  2206     042D  3465               	retlw	101	;'e'
  2207     042E  3473               	retlw	115	;'s'
  2208     042F  3470               	retlw	112	;'p'
  2209     0430  346F               	retlw	111	;'o'
  2210     0431  346E               	retlw	110	;'n'
  2211     0432  3473               	retlw	115	;'s'
  2212     0433  3465               	retlw	101	;'e'
  2213     0434  3400               	retlw	0
  2214     0435                     STR_8:
  2215     0435  3445               	retlw	69	;'E'
  2216     0436  3453               	retlw	83	;'S'
  2217     0437  3450               	retlw	80	;'P'
  2218     0438  3420               	retlw	32	;' '
  2219     0439  3438               	retlw	56	;'8'
  2220     043A  3432               	retlw	50	;'2'
  2221     043B  3436               	retlw	54	;'6'
  2222     043C  3436               	retlw	54	;'6'
  2223     043D  3420               	retlw	32	;' '
  2224     043E  3443               	retlw	67	;'C'
  2225     043F  346F               	retlw	111	;'o'
  2226     0440  346E               	retlw	110	;'n'
  2227     0441  346E               	retlw	110	;'n'
  2228     0442  3465               	retlw	101	;'e'
  2229     0443  3463               	retlw	99	;'c'
  2230     0444  3474               	retlw	116	;'t'
  2231     0445  3465               	retlw	101	;'e'
  2232     0446  3464               	retlw	100	;'d'
  2233     0447  3400               	retlw	0
  2234     0448                     STR_3:
  2235     0448  3455               	retlw	85	;'U'
  2236     0449  3441               	retlw	65	;'A'
  2237     044A  3452               	retlw	82	;'R'
  2238     044B  3454               	retlw	84	;'T'
  2239     044C  3420               	retlw	32	;' '
  2240     044D  3449               	retlw	73	;'I'
  2241     044E  346E               	retlw	110	;'n'
  2242     044F  3469               	retlw	105	;'i'
  2243     0450  3474               	retlw	116	;'t'
  2244     0451  3420               	retlw	32	;' '
  2245     0452  3453               	retlw	83	;'S'
  2246     0453  3475               	retlw	117	;'u'
  2247     0454  3463               	retlw	99	;'c'
  2248     0455  3463               	retlw	99	;'c'
  2249     0456  3465               	retlw	101	;'e'
  2250     0457  3473               	retlw	115	;'s'
  2251     0458  3473               	retlw	115	;'s'
  2252     0459  3400               	retlw	0
  2253     045A                     STR_2:
  2254     045A  3449               	retlw	73	;'I'
  2255     045B  346E               	retlw	110	;'n'
  2256     045C  3469               	retlw	105	;'i'
  2257     045D  3474               	retlw	116	;'t'
  2258     045E  344B               	retlw	75	;'K'
  2259     045F  3465               	retlw	101	;'e'
  2260     0460  3479               	retlw	121	;'y'
  2261     0461  3450               	retlw	80	;'P'
  2262     0462  3461               	retlw	97	;'a'
  2263     0463  3464               	retlw	100	;'d'
  2264     0464  3428               	retlw	40	;'('
  2265     0465  3429               	retlw	41	;')'
  2266     0466  3400               	retlw	0
  2267     0467                     STR_7:
  2268     0467  3452               	retlw	82	;'R'
  2269     0468  3465               	retlw	101	;'e'
  2270     0469  3463               	retlw	99	;'c'
  2271     046A  3465               	retlw	101	;'e'
  2272     046B  3469               	retlw	105	;'i'
  2273     046C  3476               	retlw	118	;'v'
  2274     046D  3465               	retlw	101	;'e'
  2275     046E  3464               	retlw	100	;'d'
  2276     046F  3420               	retlw	32	;' '
  2277     0470  344F               	retlw	79	;'O'
  2278     0471  344B               	retlw	75	;'K'
  2279     0472  3400               	retlw	0
  2280     0473                     STR_12:
  2281     0473  3444               	retlw	68	;'D'
  2282     0474  346F               	retlw	111	;'o'
  2283     0475  346E               	retlw	110	;'n'
  2284     0476  3465               	retlw	101	;'e'
  2285     0477  3464               	retlw	100	;'d'
  2286     0478  3420               	retlw	32	;' '
  2287     0479  3449               	retlw	73	;'I'
  2288     047A  3452               	retlw	82	;'R'
  2289     047B  3420               	retlw	32	;' '
  2290     047C  3453               	retlw	83	;'S'
  2291     047D  3452               	retlw	82	;'R'
  2292     047E  3400               	retlw	0
  2293     047F                     STR_11:
  2294     047F  3443               	retlw	67	;'C'
  2295     0480  3468               	retlw	104	;'h'
  2296     0481  3465               	retlw	101	;'e'
  2297     0482  3463               	retlw	99	;'c'
  2298     0483  346B               	retlw	107	;'k'
  2299     0484  3420               	retlw	32	;' '
  2300     0485  3449               	retlw	73	;'I'
  2301     0486  3452               	retlw	82	;'R'
  2302     0487  3420               	retlw	32	;' '
  2303     0488  3453               	retlw	83	;'S'
  2304     0489  3452               	retlw	82	;'R'
  2305     048A  3400               	retlw	0
  2306     048B                     STR_10:
  2307     048B  3444               	retlw	68	;'D'
  2308     048C  346F               	retlw	111	;'o'
  2309     048D  346F               	retlw	111	;'o'
  2310     048E  3472               	retlw	114	;'r'
  2311     048F  3420               	retlw	32	;' '
  2312     0490  344F               	retlw	79	;'O'
  2313     0491  3470               	retlw	112	;'p'
  2314     0492  3465               	retlw	101	;'e'
  2315     0493  346E               	retlw	110	;'n'
  2316     0494  3465               	retlw	101	;'e'
  2317     0495  3464               	retlw	100	;'d'
  2318     0496  3400               	retlw	0
  2319     0497                     STR_13:
  2320     0497  3444               	retlw	68	;'D'
  2321     0498  346F               	retlw	111	;'o'
  2322     0499  346F               	retlw	111	;'o'
  2323     049A  3472               	retlw	114	;'r'
  2324     049B  3420               	retlw	32	;' '
  2325     049C  3443               	retlw	67	;'C'
  2326     049D  346C               	retlw	108	;'l'
  2327     049E  346F               	retlw	111	;'o'
  2328     049F  3473               	retlw	115	;'s'
  2329     04A0  3465               	retlw	101	;'e'
  2330     04A1  3464               	retlw	100	;'d'
  2331     04A2  3400               	retlw	0
  2332     04A3                     STR_1:
  2333     04A3  344C               	retlw	76	;'L'
  2334     04A4  3443               	retlw	67	;'C'
  2335     04A5  3444               	retlw	68	;'D'
  2336     04A6  345F               	retlw	95	;'_'
  2337     04A7  3469               	retlw	105	;'i'
  2338     04A8  346E               	retlw	110	;'n'
  2339     04A9  3469               	retlw	105	;'i'
  2340     04AA  3474               	retlw	116	;'t'
  2341     04AB  3428               	retlw	40	;'('
  2342     04AC  3429               	retlw	41	;')'
  2343     04AD  3400               	retlw	0
  2344     04AE                     STR_5:
  2345     04AE  3441               	retlw	65	;'A'
  2346     04AF  3454               	retlw	84	;'T'
  2347     04B0  3420               	retlw	32	;' '
  2348     04B1  3453               	retlw	83	;'S'
  2349     04B2  3465               	retlw	101	;'e'
  2350     04B3  346E               	retlw	110	;'n'
  2351     04B4  3474               	retlw	116	;'t'
  2352     04B5  3400               	retlw	0
  2353     04B6                     STR_9:
  2354     04B6  344F               	retlw	79	;'O'
  2355     04B7  3470               	retlw	112	;'p'
  2356     04B8  3465               	retlw	101	;'e'
  2357     04B9  346E               	retlw	110	;'n'
  2358     04BA  3400               	retlw	0
  2359     04BB                     STR_14:
  2360     04BB  340D               	retlw	13
  2361     04BC  340A               	retlw	10
  2362     04BD  3400               	retlw	0
  2363     04BE                     STR_4:
  2364     04BE  3441               	retlw	65	;'A'
  2365     04BF  3454               	retlw	84	;'T'
  2366     04C0  3400               	retlw	0
  2367                           
  2368                           	psect	cinit
  2369     0011                     start_initialization:	
  2370                           ; #config settings
  2371                           
  2372     0011                     __initialization:
  2373                           
  2374                           ; Initialize objects allocated to BANK1
  2375     0011  1383               	bcf	3,7	;select IRP bank0
  2376     0012  30DC               	movlw	low (__pdataBANK1+60)
  2377     0013  00FD               	movwf	btemp+-1
  2378     0014  300F               	movlw	high __pidataBANK1
  2379     0015  00FE               	movwf	btemp
  2380     0016  30C4               	movlw	low __pidataBANK1
  2381     0017  00FF               	movwf	btemp+1
  2382     0018  30A0               	movlw	low __pdataBANK1
  2383     0019  0084               	movwf	4
  2384     001A  120A  158A  26D0  120A  118A  	fcall	init_ram0
  2385                           
  2386                           ; Initialize objects allocated to COMMON
  2387     001F  120A  158A  269E  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
  2388     0024  00F8               	movwf	__pdataCOMMON& (0+127)
  2389     0025  120A  158A  269F  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
  2390     002A  00F9               	movwf	(__pdataCOMMON+1)& (0+127)
  2391     002B  120A  158A  26A0  120A  118A  	fcall	__pidataCOMMON+2	;fetch initializer
  2392     0030  00FA               	movwf	(__pdataCOMMON+2)& (0+127)
  2393                           
  2394                           ; Clear objects allocated to BANK3
  2395     0031  1783               	bsf	3,7	;select IRP bank2
  2396     0032  3090               	movlw	low __pbssBANK3
  2397     0033  0084               	movwf	4
  2398     0034  30B0               	movlw	low (__pbssBANK3+32)
  2399     0035  120A  158A  26A1  120A  118A  	fcall	clear_ram0
  2400                           
  2401                           ; Clear objects allocated to BANK0
  2402     003A  1383               	bcf	3,7	;select IRP bank0
  2403     003B  3020               	movlw	low __pbssBANK0
  2404     003C  0084               	movwf	4
  2405     003D  3046               	movlw	low (__pbssBANK0+38)
  2406     003E  120A  158A  26A1  120A  118A  	fcall	clear_ram0
  2407     0043                     end_of_initialization:	
  2408                           ;End of C runtime variable initialization code
  2409                           
  2410     0043                     __end_of__initialization:
  2411     0043  0183               	clrf	3
  2412     0044  120A  118A  2847   	ljmp	_main	;jump to C main() function
  2413                           
  2414                           	psect	dataCOMMON
  2415     0078                     __pdataCOMMON:
  2416     0078                     _mode:
  2417     0078                     	ds	1
  2418     0079                     _LCD_display_control:
  2419     0079                     	ds	1
  2420     007A                     _LCD_entry_mode:
  2421     007A                     	ds	1
  2422                           
  2423                           	psect	bssBANK0
  2424     0020                     __pbssBANK0:
  2425     0020                     modff@F522:
  2426     0020                     	ds	4
  2427     0024                     _adcResult:
  2428     0024                     	ds	2
  2429     0026                     _pos:
  2430     0026                     	ds	2
  2431     0028                     _StringReceive:
  2432     0028                     	ds	30
  2433                           
  2434                           	psect	dataBANK1
  2435     00A0                     __pdataBANK1:
  2436     00A0                     _PassWord:
  2437     00A0                     	ds	30
  2438     00BE                     _WifiName:
  2439     00BE                     	ds	30
  2440                           
  2441                           	psect	bssBANK3
  2442     0190                     __pbssBANK3:
  2443     0190                     _StringDisplay:
  2444     0190                     	ds	32
  2445                           
  2446                           	psect	inittext
  2447     0ECC                     init_fetch0:	
  2448                           ;	Called with low address in FSR and high address in W
  2449                           
  2450     0ECC  087E               	movf	btemp,w
  2451     0ECD  008A               	movwf	10
  2452     0ECE  087F               	movf	btemp+1,w
  2453     0ECF  0082               	movwf	2
  2454     0ED0                     init_ram0:	
  2455                           ;Called with:
  2456                           ;	high address of idata address in btemp 
  2457                           ;	low address of idata address in btemp+1 
  2458                           ;	low address of data in FSR
  2459                           ;	high address + 1 of data in btemp-1
  2460                           
  2461     0ED0  120A  158A  26CC  120A  158A  	fcall	init_fetch0
  2462     0ED5  0080               	movwf	0
  2463     0ED6  0A84               	incf	4,f
  2464     0ED7  0804               	movf	4,w
  2465     0ED8  067D               	xorwf	btemp+-1,w
  2466     0ED9  1903               	btfsc	3,2
  2467     0EDA  3400               	retlw	0
  2468     0EDB  0AFF               	incf	btemp+1,f
  2469     0EDC  1903               	btfsc	3,2
  2470     0EDD  0AFE               	incf	btemp,f
  2471     0EDE  2ED0               	goto	init_ram0
  2472                           
  2473                           	psect	clrtext
  2474     0EA1                     clear_ram0:	
  2475                           ;	Called with FSR containing the base address, and
  2476                           ;	W with the last address+1
  2477                           
  2478     0EA1  0064               	clrwdt	;clear the watchdog before getting into this loop
  2479     0EA2                     clrloop0:
  2480     0EA2  0180               	clrf	0	;clear RAM location pointed to by FSR
  2481     0EA3  0A84               	incf	4,f	;increment pointer
  2482     0EA4  0604               	xorwf	4,w	;XOR with final address
  2483     0EA5  1903               	btfsc	3,2	;have we reached the end yet?
  2484     0EA6  3400               	retlw	0	;all done for this memory range, return
  2485     0EA7  0604               	xorwf	4,w	;XOR again to restore value
  2486     0EA8  2EA2               	goto	clrloop0	;do the next byte
  2487                           
  2488                           	psect	cstackCOMMON
  2489     0070                     __pcstackCOMMON:
  2490     0070                     ?_LCD_write_command:
  2491     0070                     ?_LCD_write_data:	
  2492                           ; 1 bytes @ 0x0
  2493                           
  2494     0070                     ?_LCD_pulse_clock:	
  2495                           ; 1 bytes @ 0x0
  2496                           
  2497     0070                     ?_InitUART:	
  2498                           ; 1 bytes @ 0x0
  2499                           
  2500     0070                     ?_SendCommandAT:	
  2501                           ; 1 bytes @ 0x0
  2502                           
  2503     0070                     ?_LCD_clear:	
  2504                           ; 1 bytes @ 0x0
  2505                           
  2506     0070                     ?_LCD_init:	
  2507                           ; 1 bytes @ 0x0
  2508                           
  2509     0070                     ?_ClearStringReceive:	
  2510                           ; 1 bytes @ 0x0
  2511                           
  2512     0070                     ?_main:	
  2513                           ; 1 bytes @ 0x0
  2514                           
  2515     0070                     ?_ISR:	
  2516                           ; 1 bytes @ 0x0
  2517                           
  2518     0070                     ??_ISR:	
  2519                           ; 1 bytes @ 0x0
  2520                           
  2521     0070                     ?_SendByteSerially:	
  2522                           ; 1 bytes @ 0x0
  2523                           
  2524     0070                     ?_SendStringSerially:	
  2525                           ; 1 bytes @ 0x0
  2526                           
  2527                           
  2528                           ; 1 bytes @ 0x0
  2529     0070                     	ds	3
  2530     0073                     ??_LCD_pulse_clock:
  2531     0073                     ??_InitUART:	
  2532                           ; 1 bytes @ 0x3
  2533                           
  2534     0073                     ?_strchr:	
  2535                           ; 1 bytes @ 0x3
  2536                           
  2537     0073                     ??_ClearStringReceive:	
  2538                           ; 1 bytes @ 0x3
  2539                           
  2540     0073                     ??_SendByteSerially:	
  2541                           ; 1 bytes @ 0x3
  2542                           
  2543     0073                     ??___lmul:	
  2544                           ; 1 bytes @ 0x3
  2545                           
  2546     0073                     ??___aldiv:	
  2547                           ; 1 bytes @ 0x3
  2548                           
  2549     0073                     ??___almod:	
  2550                           ; 1 bytes @ 0x3
  2551                           
  2552     0073                     ?_strlen:	
  2553                           ; 1 bytes @ 0x3
  2554                           
  2555     0073                     ?_strncmp:	
  2556                           ; 2 bytes @ 0x3
  2557                           
  2558     0073                     SendByteSerially@Byte:	
  2559                           ; 2 bytes @ 0x3
  2560                           
  2561     0073                     strncmp@r:	
  2562                           ; 1 bytes @ 0x3
  2563                           
  2564     0073                     ClearStringReceive@i:	
  2565                           ; 1 bytes @ 0x3
  2566                           
  2567     0073                     strchr@c:	
  2568                           ; 2 bytes @ 0x3
  2569                           
  2570                           
  2571                           ; 2 bytes @ 0x3
  2572     0073                     	ds	1
  2573     0074                     ??_LCD_write_command:
  2574     0074                     ??_LCD_write_data:	
  2575                           ; 1 bytes @ 0x4
  2576                           
  2577     0074                     ??_SendStringSerially:	
  2578                           ; 1 bytes @ 0x4
  2579                           
  2580     0074                     SendStringSerially@st:	
  2581                           ; 1 bytes @ 0x4
  2582                           
  2583     0074                     ___almod@counter:	
  2584                           ; 1 bytes @ 0x4
  2585                           
  2586     0074                     strncmp@n:	
  2587                           ; 1 bytes @ 0x4
  2588                           
  2589     0074                     ___lmul@product:	
  2590                           ; 2 bytes @ 0x4
  2591                           
  2592                           
  2593                           ; 4 bytes @ 0x4
  2594     0074                     	ds	1
  2595     0075                     ??_SendCommandAT:
  2596     0075                     ??_strlen:	
  2597                           ; 1 bytes @ 0x5
  2598                           
  2599     0075                     ??_strchr:	
  2600                           ; 1 bytes @ 0x5
  2601                           
  2602     0075                     SendCommandAT@command:	
  2603                           ; 1 bytes @ 0x5
  2604                           
  2605     0075                     ___almod@sign:	
  2606                           ; 1 bytes @ 0x5
  2607                           
  2608     0075                     strchr@s:	
  2609                           ; 1 bytes @ 0x5
  2610                           
  2611     0075                     strlen@a:	
  2612                           ; 1 bytes @ 0x5
  2613                           
  2614                           
  2615                           ; 1 bytes @ 0x5
  2616     0075                     	ds	1
  2617     0076                     ??_strncmp:
  2618     0076                     LCD_write_command@command:	
  2619                           ; 1 bytes @ 0x6
  2620                           
  2621     0076                     LCD_write_data@data:	
  2622                           ; 1 bytes @ 0x6
  2623                           
  2624     0076                     strlen@s:	
  2625                           ; 1 bytes @ 0x6
  2626                           
  2627                           
  2628                           ; 1 bytes @ 0x6
  2629     0076                     	ds	1
  2630     0077                     ?_LCD_cursor_set:
  2631     0077                     ??_LCD_clear:	
  2632                           ; 1 bytes @ 0x7
  2633                           
  2634     0077                     ??_LCD_write_string:	
  2635                           ; 1 bytes @ 0x7
  2636                           
  2637     0077                     LCD_cursor_set@column:	
  2638                           ; 1 bytes @ 0x7
  2639                           
  2640     0077                     LCD_write_string@i:	
  2641                           ; 1 bytes @ 0x7
  2642                           
  2643                           
  2644                           ; 1 bytes @ 0x7
  2645     0077                     	ds	1
  2646     0078                     ??_LCD_cursor_set:
  2647     0078                     ??_LCD_write_variable:	
  2648                           ; 1 bytes @ 0x8
  2649                           
  2650                           
  2651                           	psect	cstackBANK0
  2652     0046                     __pcstackBANK0:	
  2653                           ; 1 bytes @ 0x8
  2654                           
  2655     0046                     ??_LCD_init:
  2656     0046                     ?_LCD_write_string:	
  2657                           ; 1 bytes @ 0x0
  2658                           
  2659     0046                     ?___lmul:	
  2660                           ; 1 bytes @ 0x0
  2661                           
  2662     0046                     ?___aldiv:	
  2663                           ; 4 bytes @ 0x0
  2664                           
  2665     0046                     ?___almod:	
  2666                           ; 4 bytes @ 0x0
  2667                           
  2668     0046                     LCD_cursor_set@row:	
  2669                           ; 4 bytes @ 0x0
  2670                           
  2671     0046                     strncmp@l:	
  2672                           ; 1 bytes @ 0x0
  2673                           
  2674     0046                     LCD_write_string@string:	
  2675                           ; 1 bytes @ 0x0
  2676                           
  2677     0046                     ___lmul@multiplier:	
  2678                           ; 2 bytes @ 0x0
  2679                           
  2680     0046                     ___aldiv@divisor:	
  2681                           ; 4 bytes @ 0x0
  2682                           
  2683     0046                     ___almod@divisor:	
  2684                           ; 4 bytes @ 0x0
  2685                           
  2686                           
  2687                           ; 4 bytes @ 0x0
  2688     0046                     	ds	1
  2689     0047                     ?_strstr:
  2690     0047                     strstr@n:	
  2691                           ; 1 bytes @ 0x1
  2692                           
  2693                           
  2694                           ; 1 bytes @ 0x1
  2695     0047                     	ds	1
  2696     0048                     ??_strstr:
  2697                           
  2698                           ; 1 bytes @ 0x2
  2699     0048                     	ds	2
  2700     004A                     strstr@nl:
  2701     004A                     ___lmul@multiplicand:	
  2702                           ; 2 bytes @ 0x4
  2703                           
  2704     004A                     ___aldiv@dividend:	
  2705                           ; 4 bytes @ 0x4
  2706                           
  2707     004A                     ___almod@dividend:	
  2708                           ; 4 bytes @ 0x4
  2709                           
  2710                           
  2711                           ; 4 bytes @ 0x4
  2712     004A                     	ds	2
  2713     004C                     strstr@h:
  2714                           
  2715                           ; 1 bytes @ 0x6
  2716     004C                     	ds	2
  2717     004E                     ___aldiv@counter:
  2718                           
  2719                           ; 1 bytes @ 0x8
  2720     004E                     	ds	1
  2721     004F                     ___aldiv@sign:
  2722                           
  2723                           ; 1 bytes @ 0x9
  2724     004F                     	ds	1
  2725     0050                     ___aldiv@quotient:
  2726                           
  2727                           ; 4 bytes @ 0xA
  2728     0050                     	ds	4
  2729     0054                     ?_LCD_write_variable:
  2730     0054                     LCD_write_variable@variable:	
  2731                           ; 1 bytes @ 0xE
  2732                           
  2733                           
  2734                           ; 4 bytes @ 0xE
  2735     0054                     	ds	4
  2736     0058                     LCD_write_variable@left_offset:
  2737                           
  2738                           ; 1 bytes @ 0x12
  2739     0058                     	ds	1
  2740     0059                     LCD_write_variable@i:
  2741                           
  2742                           ; 1 bytes @ 0x13
  2743     0059                     	ds	1
  2744     005A                     LCD_write_variable@digits:
  2745                           
  2746                           ; 1 bytes @ 0x14
  2747     005A                     	ds	1
  2748     005B                     LCD_write_variable@temp_variable:
  2749                           
  2750                           ; 4 bytes @ 0x15
  2751     005B                     	ds	4
  2752     005F                     ??_main:
  2753                           
  2754                           ; 1 bytes @ 0x19
  2755     005F                     	ds	3
  2756     0062                     main@adcResult:
  2757                           
  2758                           ; 2 bytes @ 0x1C
  2759     0062                     	ds	2
  2760                           
  2761                           	psect	maintext
  2762     0047                     __pmaintext:	
  2763 ;;
  2764 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  2765 ;;
  2766 ;; *************** function _main *****************
  2767 ;; Defined at:
  2768 ;;		line 71 in file "main.c"
  2769 ;; Parameters:    Size  Location     Type
  2770 ;;		None
  2771 ;; Auto vars:     Size  Location     Type
  2772 ;;  adcResult       2   28[BANK0 ] unsigned int 
  2773 ;;  ival            2    0        int 
  2774 ;;  flag            1    0        unsigned char 
  2775 ;;  x               1    0        unsigned char 
  2776 ;; Return value:  Size  Location     Type
  2777 ;;                  1    wreg      void 
  2778 ;; Registers used:
  2779 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2780 ;; Tracked objects:
  2781 ;;		On entry : B00/0
  2782 ;;		On exit  : 0/0
  2783 ;;		Unchanged: 0/0
  2784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2785 ;;      Params:         0       0       0       0       0
  2786 ;;      Locals:         0       2       0       0       0
  2787 ;;      Temps:          0       3       0       0       0
  2788 ;;      Totals:         0       5       0       0       0
  2789 ;;Total ram usage:        5 bytes
  2790 ;; Hardware stack levels required when called: 5
  2791 ;; This function calls:
  2792 ;;		_ClearStringReceive
  2793 ;;		_InitUART
  2794 ;;		_LCD_clear
  2795 ;;		_LCD_cursor_set
  2796 ;;		_LCD_init
  2797 ;;		_LCD_write_string
  2798 ;;		_LCD_write_variable
  2799 ;;		_SendCommandAT
  2800 ;;		_strstr
  2801 ;; This function is called by:
  2802 ;;		Startup code after reset
  2803 ;; This function uses a non-reentrant model
  2804 ;;
  2805                           
  2806     0047                     _main:	
  2807                           ;psect for function _main
  2808                           
  2809     0047                     l2708:	
  2810                           ;incstack = 0
  2811                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2812                           
  2813                           
  2814                           ;main.c: 72:     LCD_init();
  2815     0047  120A  118A  270D  120A  118A  	fcall	_LCD_init
  2816                           
  2817                           ;main.c: 73:     LCD_clear();
  2818     004C  120A  158A  26DF  120A  118A  	fcall	_LCD_clear
  2819     0051                     l2710:
  2820                           
  2821                           ;main.c: 74:     LCD_cursor_set(1, 1);
  2822     0051  01F7               	clrf	LCD_cursor_set@column
  2823     0052  0AF7               	incf	LCD_cursor_set@column,f
  2824     0053  3001               	movlw	1
  2825     0054  120A  158A  2793  120A  118A  	fcall	_LCD_cursor_set
  2826     0059                     l2712:
  2827                           
  2828                           ;main.c: 75:     LCD_write_string("LCD_init()");
  2829     0059  3094               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2830     005A  1283               	bcf	3,5	;RP0=0, select bank0
  2831     005B  1303               	bcf	3,6	;RP1=0, select bank0
  2832     005C  00C6               	movwf	LCD_write_string@string
  2833     005D  3080               	movlw	128
  2834     005E  00C7               	movwf	LCD_write_string@string+1
  2835     005F  120A  158A  2768  120A  118A  	fcall	_LCD_write_string
  2836     0064                     l2714:
  2837                           
  2838                           ;main.c: 76:     _delay((unsigned long)((1000)*(4000000/4000.0)));
  2839     0064  3006               	movlw	6
  2840     0065  1283               	bcf	3,5	;RP0=0, select bank0
  2841     0066  1303               	bcf	3,6	;RP1=0, select bank0
  2842     0067  00E1               	movwf	??_main+2
  2843     0068  3013               	movlw	19
  2844     0069  00E0               	movwf	??_main+1
  2845     006A  30AD               	movlw	173
  2846     006B  00DF               	movwf	??_main
  2847     006C                     u2747:
  2848     006C  0BDF               	decfsz	??_main,f
  2849     006D  286C               	goto	u2747
  2850     006E  0BE0               	decfsz	??_main+1,f
  2851     006F  286C               	goto	u2747
  2852     0070  0BE1               	decfsz	??_main+2,f
  2853     0071  286C               	goto	u2747
  2854     0072                     l2716:
  2855                           
  2856                           ;main.c: 77:     LCD_cursor_set(1, 1);
  2857     0072  01F7               	clrf	LCD_cursor_set@column
  2858     0073  0AF7               	incf	LCD_cursor_set@column,f
  2859     0074  3001               	movlw	1
  2860     0075  120A  158A  2793  120A  118A  	fcall	_LCD_cursor_set
  2861     007A                     l2718:
  2862                           
  2863                           ;main.c: 78:     LCD_write_string("InitKeyPad()");
  2864     007A  304B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2865     007B  1283               	bcf	3,5	;RP0=0, select bank0
  2866     007C  1303               	bcf	3,6	;RP1=0, select bank0
  2867     007D  00C6               	movwf	LCD_write_string@string
  2868     007E  3080               	movlw	128
  2869     007F  00C7               	movwf	LCD_write_string@string+1
  2870     0080  120A  158A  2768  120A  118A  	fcall	_LCD_write_string
  2871     0085                     l2720:
  2872                           
  2873                           ;main.c: 79:     _delay((unsigned long)((1000)*(4000000/4000.0)));
  2874     0085  3006               	movlw	6
  2875     0086  1283               	bcf	3,5	;RP0=0, select bank0
  2876     0087  1303               	bcf	3,6	;RP1=0, select bank0
  2877     0088  00E1               	movwf	??_main+2
  2878     0089  3013               	movlw	19
  2879     008A  00E0               	movwf	??_main+1
  2880     008B  30AD               	movlw	173
  2881     008C  00DF               	movwf	??_main
  2882     008D                     u2757:
  2883     008D  0BDF               	decfsz	??_main,f
  2884     008E  288D               	goto	u2757
  2885     008F  0BE0               	decfsz	??_main+1,f
  2886     0090  288D               	goto	u2757
  2887     0091  0BE1               	decfsz	??_main+2,f
  2888     0092  288D               	goto	u2757
  2889     0093                     l2722:
  2890                           
  2891                           ;main.c: 81:     InitUART();
  2892     0093  120A  158A  270C  120A  118A  	fcall	_InitUART
  2893     0098                     l2724:
  2894                           
  2895                           ;main.c: 82:     LCD_cursor_set(2, 1);
  2896     0098  01F7               	clrf	LCD_cursor_set@column
  2897     0099  0AF7               	incf	LCD_cursor_set@column,f
  2898     009A  3002               	movlw	2
  2899     009B  120A  158A  2793  120A  118A  	fcall	_LCD_cursor_set
  2900     00A0                     l2726:
  2901                           
  2902                           ;main.c: 83:     LCD_write_string("UART Init Success");
  2903     00A0  3039               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  2904     00A1  1283               	bcf	3,5	;RP0=0, select bank0
  2905     00A2  1303               	bcf	3,6	;RP1=0, select bank0
  2906     00A3  00C6               	movwf	LCD_write_string@string
  2907     00A4  3080               	movlw	128
  2908     00A5  00C7               	movwf	LCD_write_string@string+1
  2909     00A6  120A  158A  2768  120A  118A  	fcall	_LCD_write_string
  2910     00AB                     l2728:
  2911                           
  2912                           ;main.c: 84:     _delay((unsigned long)((1000)*(4000000/4000.0)));
  2913     00AB  3006               	movlw	6
  2914     00AC  1283               	bcf	3,5	;RP0=0, select bank0
  2915     00AD  1303               	bcf	3,6	;RP1=0, select bank0
  2916     00AE  00E1               	movwf	??_main+2
  2917     00AF  3013               	movlw	19
  2918     00B0  00E0               	movwf	??_main+1
  2919     00B1  30AD               	movlw	173
  2920     00B2  00DF               	movwf	??_main
  2921     00B3                     u2767:
  2922     00B3  0BDF               	decfsz	??_main,f
  2923     00B4  28B3               	goto	u2767
  2924     00B5  0BE0               	decfsz	??_main+1,f
  2925     00B6  28B3               	goto	u2767
  2926     00B7  0BE1               	decfsz	??_main+2,f
  2927     00B8  28B3               	goto	u2767
  2928     00B9                     l2730:
  2929                           
  2930                           ;main.c: 87:     LCD_clear();
  2931     00B9  120A  158A  26DF  120A  118A  	fcall	_LCD_clear
  2932     00BE                     l2732:
  2933                           
  2934                           ;main.c: 88:     LCD_cursor_set(1, 1);
  2935     00BE  01F7               	clrf	LCD_cursor_set@column
  2936     00BF  0AF7               	incf	LCD_cursor_set@column,f
  2937     00C0  3001               	movlw	1
  2938     00C1  120A  158A  2793  120A  118A  	fcall	_LCD_cursor_set
  2939     00C6                     l2734:
  2940                           
  2941                           ;main.c: 89:     SendCommandAT("AT");
  2942     00C6  30AF               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  2943     00C7  120A  158A  26BE  120A  118A  	fcall	_SendCommandAT
  2944     00CC                     l2736:
  2945                           
  2946                           ;main.c: 90:     LCD_write_string("AT Sent");
  2947     00CC  309F               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  2948     00CD  1283               	bcf	3,5	;RP0=0, select bank0
  2949     00CE  1303               	bcf	3,6	;RP1=0, select bank0
  2950     00CF  00C6               	movwf	LCD_write_string@string
  2951     00D0  3080               	movlw	128
  2952     00D1  00C7               	movwf	LCD_write_string@string+1
  2953     00D2  120A  158A  2768  120A  118A  	fcall	_LCD_write_string
  2954     00D7                     l2738:
  2955                           
  2956                           ;main.c: 91:     char x, flag;;main.c: 92:     LCD_cursor_set(2, 1);
  2957     00D7  01F7               	clrf	LCD_cursor_set@column
  2958     00D8  0AF7               	incf	LCD_cursor_set@column,f
  2959     00D9  3002               	movlw	2
  2960     00DA  120A  158A  2793  120A  118A  	fcall	_LCD_cursor_set
  2961     00DF                     l2740:
  2962                           
  2963                           ;main.c: 93:     SendCommandAT("Waiting to Response");
  2964     00DF  3012               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  2965     00E0  120A  158A  26BE  120A  118A  	fcall	_SendCommandAT
  2966     00E5                     l2742:
  2967                           
  2968                           ;main.c: 94:     _delay((unsigned long)((1000)*(4000000/4000.0)));
  2969     00E5  3006               	movlw	6
  2970     00E6  1283               	bcf	3,5	;RP0=0, select bank0
  2971     00E7  1303               	bcf	3,6	;RP1=0, select bank0
  2972     00E8  00E1               	movwf	??_main+2
  2973     00E9  3013               	movlw	19
  2974     00EA  00E0               	movwf	??_main+1
  2975     00EB  30AD               	movlw	173
  2976     00EC  00DF               	movwf	??_main
  2977     00ED                     u2777:
  2978     00ED  0BDF               	decfsz	??_main,f
  2979     00EE  28ED               	goto	u2777
  2980     00EF  0BE0               	decfsz	??_main+1,f
  2981     00F0  28ED               	goto	u2777
  2982     00F1  0BE1               	decfsz	??_main+2,f
  2983     00F2  28ED               	goto	u2777
  2984     00F3                     l2744:
  2985                           
  2986                           ;main.c: 95:     LCD_clear();
  2987     00F3  120A  158A  26DF  120A  118A  	fcall	_LCD_clear
  2988     00F8                     l2746:
  2989                           
  2990                           ;main.c: 96:     LCD_cursor_set(1, 1);
  2991     00F8  01F7               	clrf	LCD_cursor_set@column
  2992     00F9  0AF7               	incf	LCD_cursor_set@column,f
  2993     00FA  3001               	movlw	1
  2994     00FB  120A  158A  2793  120A  118A  	fcall	_LCD_cursor_set
  2995     0100                     l2748:
  2996                           
  2997                           ;main.c: 97:     LCD_write_string("Received OK");
  2998     0100  3058               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  2999     0101  1283               	bcf	3,5	;RP0=0, select bank0
  3000     0102  1303               	bcf	3,6	;RP1=0, select bank0
  3001     0103  00C6               	movwf	LCD_write_string@string
  3002     0104  3080               	movlw	128
  3003     0105  00C7               	movwf	LCD_write_string@string+1
  3004     0106  120A  158A  2768  120A  118A  	fcall	_LCD_write_string
  3005     010B                     l2750:
  3006                           
  3007                           ;main.c: 98:     LCD_cursor_set(2, 1);
  3008     010B  01F7               	clrf	LCD_cursor_set@column
  3009     010C  0AF7               	incf	LCD_cursor_set@column,f
  3010     010D  3002               	movlw	2
  3011     010E  120A  158A  2793  120A  118A  	fcall	_LCD_cursor_set
  3012     0113                     l2752:
  3013                           
  3014                           ;main.c: 99:     LCD_write_string("ESP 8266 Connected");
  3015     0113  3026               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  3016     0114  1283               	bcf	3,5	;RP0=0, select bank0
  3017     0115  1303               	bcf	3,6	;RP1=0, select bank0
  3018     0116  00C6               	movwf	LCD_write_string@string
  3019     0117  3080               	movlw	128
  3020     0118  00C7               	movwf	LCD_write_string@string+1
  3021     0119  120A  158A  2768  120A  118A  	fcall	_LCD_write_string
  3022     011E                     l2754:
  3023                           
  3024                           ;main.c: 100:     _delay((unsigned long)((1000)*(4000000/4000.0)));
  3025     011E  3006               	movlw	6
  3026     011F  1283               	bcf	3,5	;RP0=0, select bank0
  3027     0120  1303               	bcf	3,6	;RP1=0, select bank0
  3028     0121  00E1               	movwf	??_main+2
  3029     0122  3013               	movlw	19
  3030     0123  00E0               	movwf	??_main+1
  3031     0124  30AD               	movlw	173
  3032     0125  00DF               	movwf	??_main
  3033     0126                     u2787:
  3034     0126  0BDF               	decfsz	??_main,f
  3035     0127  2926               	goto	u2787
  3036     0128  0BE0               	decfsz	??_main+1,f
  3037     0129  2926               	goto	u2787
  3038     012A  0BE1               	decfsz	??_main+2,f
  3039     012B  2926               	goto	u2787
  3040     012C                     l2756:
  3041                           
  3042                           ;main.c: 101:     LCD_clear();
  3043     012C  120A  158A  26DF  120A  118A  	fcall	_LCD_clear
  3044     0131                     l2758:
  3045                           
  3046                           ;main.c: 103:     TRISB=0X00;
  3047     0131  1683               	bsf	3,5	;RP0=1, select bank1
  3048     0132  1303               	bcf	3,6	;RP1=0, select bank1
  3049     0133  0186               	clrf	6	;volatile
  3050     0134                     l2760:
  3051                           
  3052                           ;main.c: 104:     PORTB=0X00;
  3053     0134  1283               	bcf	3,5	;RP0=0, select bank0
  3054     0135  1303               	bcf	3,6	;RP1=0, select bank0
  3055     0136  0186               	clrf	6	;volatile
  3056     0137                     l2762:
  3057                           
  3058                           ;main.c: 106:     PORTBbits.RB7 = 0;
  3059     0137  1386               	bcf	6,7	;volatile
  3060     0138                     l2764:
  3061                           
  3062                           ;main.c: 107:     PORTBbits.RB6 = 0;
  3063     0138  1306               	bcf	6,6	;volatile
  3064     0139                     l2766:
  3065                           
  3066                           ;main.c: 109:     ADCON1 = 0x80;
  3067     0139  3080               	movlw	128
  3068     013A  1683               	bsf	3,5	;RP0=1, select bank1
  3069     013B  1303               	bcf	3,6	;RP1=0, select bank1
  3070     013C  009F               	movwf	31	;volatile
  3071     013D                     l2768:
  3072                           
  3073                           ;main.c: 110:     ADCON0 = 0x01;
  3074     013D  3001               	movlw	1
  3075     013E  1283               	bcf	3,5	;RP0=0, select bank0
  3076     013F  1303               	bcf	3,6	;RP1=0, select bank0
  3077     0140  009F               	movwf	31	;volatile
  3078     0141                     l2770:
  3079                           
  3080                           ;main.c: 112:     TRISA0 = 1;
  3081     0141  1683               	bsf	3,5	;RP0=1, select bank1
  3082     0142  1303               	bcf	3,6	;RP1=0, select bank1
  3083     0143  1405               	bsf	5,0	;volatile
  3084     0144                     l2772:
  3085                           
  3086                           ;main.c: 117:         GO_nDONE = 1;
  3087     0144  1283               	bcf	3,5	;RP0=0, select bank0
  3088     0145  1303               	bcf	3,6	;RP1=0, select bank0
  3089     0146  149F               	bsf	31,1	;volatile
  3090     0147                     l261:	
  3091                           ;main.c: 118:         while(GO_nDONE);
  3092                           
  3093     0147  189F               	btfsc	31,1	;volatile
  3094     0148  294A               	goto	u2691
  3095     0149  294B               	goto	u2690
  3096     014A                     u2691:
  3097     014A  2947               	goto	l261
  3098     014B                     u2690:
  3099     014B                     l2774:
  3100                           
  3101                           ;main.c: 120:         unsigned int adcResult = ADRESH << 8 | ADRESL;
  3102     014B  081E               	movf	30,w	;volatile
  3103     014C  00E3               	movwf	main@adcResult+1
  3104     014D  1683               	bsf	3,5	;RP0=1, select bank1
  3105     014E  1303               	bcf	3,6	;RP1=0, select bank1
  3106     014F  081E               	movf	30,w	;volatile
  3107     0150  1283               	bcf	3,5	;RP0=0, select bank0
  3108     0151  1303               	bcf	3,6	;RP1=0, select bank0
  3109     0152  00E2               	movwf	main@adcResult
  3110     0153                     l2776:
  3111                           
  3112                           ;main.c: 122:         LCD_cursor_set(2, 1);
  3113     0153  01F7               	clrf	LCD_cursor_set@column
  3114     0154  0AF7               	incf	LCD_cursor_set@column,f
  3115     0155  3002               	movlw	2
  3116     0156  120A  158A  2793  120A  118A  	fcall	_LCD_cursor_set
  3117     015B                     l2778:
  3118                           
  3119                           ;main.c: 123:         LCD_write_string(StringReceive);
  3120     015B  3028               	movlw	(low (_StringReceive| 0))& (0+255)
  3121     015C  1283               	bcf	3,5	;RP0=0, select bank0
  3122     015D  1303               	bcf	3,6	;RP1=0, select bank0
  3123     015E  00C6               	movwf	LCD_write_string@string
  3124     015F  3000               	movlw	0
  3125     0160  00C7               	movwf	LCD_write_string@string+1
  3126     0161  120A  158A  2768  120A  118A  	fcall	_LCD_write_string
  3127     0166                     l2780:
  3128                           
  3129                           ;main.c: 124:         LCD_cursor_set(1, 13);
  3130     0166  300D               	movlw	13
  3131     0167  00F7               	movwf	LCD_cursor_set@column
  3132     0168  3001               	movlw	1
  3133     0169  120A  158A  2793  120A  118A  	fcall	_LCD_cursor_set
  3134     016E                     l2782:
  3135                           
  3136                           ;main.c: 125:         LCD_write_variable(adcResult, 4);
  3137     016E  1283               	bcf	3,5	;RP0=0, select bank0
  3138     016F  1303               	bcf	3,6	;RP1=0, select bank0
  3139     0170  0862               	movf	main@adcResult,w
  3140     0171  00D4               	movwf	LCD_write_variable@variable
  3141     0172  0863               	movf	main@adcResult+1,w
  3142     0173  00D5               	movwf	LCD_write_variable@variable+1
  3143     0174  01D6               	clrf	LCD_write_variable@variable+2
  3144     0175  01D7               	clrf	LCD_write_variable@variable+3
  3145     0176  3004               	movlw	4
  3146     0177  00D8               	movwf	LCD_write_variable@left_offset
  3147     0178  120A  118A  226C  120A  118A  	fcall	_LCD_write_variable
  3148     017D                     l2784:
  3149                           
  3150                           ;main.c: 126:         LCD_cursor_set(1, 1);
  3151     017D  01F7               	clrf	LCD_cursor_set@column
  3152     017E  0AF7               	incf	LCD_cursor_set@column,f
  3153     017F  3001               	movlw	1
  3154     0180  120A  158A  2793  120A  118A  	fcall	_LCD_cursor_set
  3155     0185                     l2786:
  3156                           
  3157                           ;main.c: 127:         if(strstr(StringReceive, "Open") != ((void*)0)){
  3158     0185  30A7               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  3159     0186  1283               	bcf	3,5	;RP0=0, select bank0
  3160     0187  1303               	bcf	3,6	;RP1=0, select bank0
  3161     0188  00C7               	movwf	strstr@n
  3162     0189  3028               	movlw	(low (_StringReceive| 0))& (0+255)
  3163     018A  120A  118A  2344  120A  118A  	fcall	_strstr
  3164     018F  3A00               	xorlw	0
  3165     0190  1903               	skipnz
  3166     0191  2993               	goto	u2701
  3167     0192  2994               	goto	u2700
  3168     0193                     u2701:
  3169     0193  2A45               	goto	l2828
  3170     0194                     u2700:
  3171     0194                     l2788:
  3172                           
  3173                           ;main.c: 128:             LCD_write_string("Door Opened");
  3174     0194  307C               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  3175     0195  1283               	bcf	3,5	;RP0=0, select bank0
  3176     0196  1303               	bcf	3,6	;RP1=0, select bank0
  3177     0197  00C6               	movwf	LCD_write_string@string
  3178     0198  3080               	movlw	128
  3179     0199  00C7               	movwf	LCD_write_string@string+1
  3180     019A  120A  158A  2768  120A  118A  	fcall	_LCD_write_string
  3181     019F                     l2790:
  3182                           
  3183                           ;main.c: 129:             PORTBbits.RB6 = 1;
  3184     019F  1283               	bcf	3,5	;RP0=0, select bank0
  3185     01A0  1303               	bcf	3,6	;RP1=0, select bank0
  3186     01A1  1706               	bsf	6,6	;volatile
  3187     01A2                     l2792:
  3188                           
  3189                           ;main.c: 130:             _delay((unsigned long)((1000)*(4000000/4000.0)));
  3190     01A2  3006               	movlw	6
  3191     01A3  1283               	bcf	3,5	;RP0=0, select bank0
  3192     01A4  1303               	bcf	3,6	;RP1=0, select bank0
  3193     01A5  00E1               	movwf	??_main+2
  3194     01A6  3013               	movlw	19
  3195     01A7  00E0               	movwf	??_main+1
  3196     01A8  30AD               	movlw	173
  3197     01A9  00DF               	movwf	??_main
  3198     01AA                     u2797:
  3199     01AA  0BDF               	decfsz	??_main,f
  3200     01AB  29AA               	goto	u2797
  3201     01AC  0BE0               	decfsz	??_main+1,f
  3202     01AD  29AA               	goto	u2797
  3203     01AE  0BE1               	decfsz	??_main+2,f
  3204     01AF  29AA               	goto	u2797
  3205     01B0                     l2794:
  3206                           
  3207                           ;main.c: 131:             PORTBbits.RB7 = 1;
  3208     01B0  1283               	bcf	3,5	;RP0=0, select bank0
  3209     01B1  1303               	bcf	3,6	;RP1=0, select bank0
  3210     01B2  1786               	bsf	6,7	;volatile
  3211                           
  3212                           ;main.c: 133:             while(adcResult > 500){
  3213     01B3  2A01               	goto	l2812
  3214     01B4                     l266:
  3215                           
  3216                           ;main.c: 134:                 GO_nDONE = 1;
  3217     01B4  149F               	bsf	31,1	;volatile
  3218     01B5                     l267:	
  3219                           ;main.c: 135:                 while(GO_nDONE);
  3220                           
  3221     01B5  189F               	btfsc	31,1	;volatile
  3222     01B6  29B8               	goto	u2711
  3223     01B7  29B9               	goto	u2710
  3224     01B8                     u2711:
  3225     01B8  29B5               	goto	l267
  3226     01B9                     u2710:
  3227     01B9                     l2796:
  3228                           
  3229                           ;main.c: 136:                 LCD_cursor_set(1, 1);
  3230     01B9  01F7               	clrf	LCD_cursor_set@column
  3231     01BA  0AF7               	incf	LCD_cursor_set@column,f
  3232     01BB  3001               	movlw	1
  3233     01BC  120A  158A  2793  120A  118A  	fcall	_LCD_cursor_set
  3234     01C1                     l2798:
  3235                           
  3236                           ;main.c: 137:                 adcResult = ADRESH << 8 | ADRESL;
  3237     01C1  1283               	bcf	3,5	;RP0=0, select bank0
  3238     01C2  1303               	bcf	3,6	;RP1=0, select bank0
  3239     01C3  081E               	movf	30,w	;volatile
  3240     01C4  00E3               	movwf	main@adcResult+1
  3241     01C5  1683               	bsf	3,5	;RP0=1, select bank1
  3242     01C6  1303               	bcf	3,6	;RP1=0, select bank1
  3243     01C7  081E               	movf	30,w	;volatile
  3244     01C8  1283               	bcf	3,5	;RP0=0, select bank0
  3245     01C9  1303               	bcf	3,6	;RP1=0, select bank0
  3246     01CA  00E2               	movwf	main@adcResult
  3247     01CB                     l2800:
  3248                           
  3249                           ;main.c: 139:                 LCD_cursor_set(1, 1);
  3250     01CB  01F7               	clrf	LCD_cursor_set@column
  3251     01CC  0AF7               	incf	LCD_cursor_set@column,f
  3252     01CD  3001               	movlw	1
  3253     01CE  120A  158A  2793  120A  118A  	fcall	_LCD_cursor_set
  3254     01D3                     l2802:
  3255                           
  3256                           ;main.c: 140:                 LCD_write_string("Check IR SR");
  3257     01D3  3070               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  3258     01D4  1283               	bcf	3,5	;RP0=0, select bank0
  3259     01D5  1303               	bcf	3,6	;RP1=0, select bank0
  3260     01D6  00C6               	movwf	LCD_write_string@string
  3261     01D7  3080               	movlw	128
  3262     01D8  00C7               	movwf	LCD_write_string@string+1
  3263     01D9  120A  158A  2768  120A  118A  	fcall	_LCD_write_string
  3264     01DE                     l2804:
  3265                           
  3266                           ;main.c: 141:                 LCD_cursor_set(1, 13);
  3267     01DE  300D               	movlw	13
  3268     01DF  00F7               	movwf	LCD_cursor_set@column
  3269     01E0  3001               	movlw	1
  3270     01E1  120A  158A  2793  120A  118A  	fcall	_LCD_cursor_set
  3271     01E6                     l2806:
  3272                           
  3273                           ;main.c: 142:                 LCD_write_variable(adcResult, 4);
  3274     01E6  1283               	bcf	3,5	;RP0=0, select bank0
  3275     01E7  1303               	bcf	3,6	;RP1=0, select bank0
  3276     01E8  0862               	movf	main@adcResult,w
  3277     01E9  00D4               	movwf	LCD_write_variable@variable
  3278     01EA  0863               	movf	main@adcResult+1,w
  3279     01EB  00D5               	movwf	LCD_write_variable@variable+1
  3280     01EC  01D6               	clrf	LCD_write_variable@variable+2
  3281     01ED  01D7               	clrf	LCD_write_variable@variable+3
  3282     01EE  3004               	movlw	4
  3283     01EF  00D8               	movwf	LCD_write_variable@left_offset
  3284     01F0  120A  118A  226C  120A  118A  	fcall	_LCD_write_variable
  3285     01F5                     l2808:
  3286                           
  3287                           ;main.c: 143:                 if(adcResult < 500){
  3288     01F5  3001               	movlw	1
  3289     01F6  1283               	bcf	3,5	;RP0=0, select bank0
  3290     01F7  1303               	bcf	3,6	;RP1=0, select bank0
  3291     01F8  0263               	subwf	main@adcResult+1,w
  3292     01F9  30F4               	movlw	244
  3293     01FA  1903               	skipnz
  3294     01FB  0262               	subwf	main@adcResult,w
  3295     01FC  1803               	skipnc
  3296     01FD  29FF               	goto	u2721
  3297     01FE  2A00               	goto	u2720
  3298     01FF                     u2721:
  3299     01FF  2A01               	goto	l2812
  3300     0200                     u2720:
  3301     0200  2A0A               	goto	l2814
  3302     0201                     l2812:
  3303                           
  3304                           ;main.c: 133:             while(adcResult > 500){
  3305     0201  3001               	movlw	1
  3306     0202  0263               	subwf	main@adcResult+1,w
  3307     0203  30F5               	movlw	245
  3308     0204  1903               	skipnz
  3309     0205  0262               	subwf	main@adcResult,w
  3310     0206  1803               	skipnc
  3311     0207  2A09               	goto	u2731
  3312     0208  2A0A               	goto	u2730
  3313     0209                     u2731:
  3314     0209  29B4               	goto	l266
  3315     020A                     u2730:
  3316     020A                     l2814:
  3317                           
  3318                           ;main.c: 147:             LCD_cursor_set(1, 1);
  3319     020A  01F7               	clrf	LCD_cursor_set@column
  3320     020B  0AF7               	incf	LCD_cursor_set@column,f
  3321     020C  3001               	movlw	1
  3322     020D  120A  158A  2793  120A  118A  	fcall	_LCD_cursor_set
  3323     0212                     l2816:
  3324                           
  3325                           ;main.c: 148:             LCD_write_string("Doned IR SR");
  3326     0212  3064               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  3327     0213  1283               	bcf	3,5	;RP0=0, select bank0
  3328     0214  1303               	bcf	3,6	;RP1=0, select bank0
  3329     0215  00C6               	movwf	LCD_write_string@string
  3330     0216  3080               	movlw	128
  3331     0217  00C7               	movwf	LCD_write_string@string+1
  3332     0218  120A  158A  2768  120A  118A  	fcall	_LCD_write_string
  3333     021D                     l2818:
  3334                           
  3335                           ;main.c: 149:             _delay((unsigned long)((500)*(4000000/4000.0)));
  3336     021D  3003               	movlw	3
  3337     021E  1283               	bcf	3,5	;RP0=0, select bank0
  3338     021F  1303               	bcf	3,6	;RP1=0, select bank0
  3339     0220  00E1               	movwf	??_main+2
  3340     0221  308A               	movlw	138
  3341     0222  00E0               	movwf	??_main+1
  3342     0223  3055               	movlw	85
  3343     0224  00DF               	movwf	??_main
  3344     0225                     u2807:
  3345     0225  0BDF               	decfsz	??_main,f
  3346     0226  2A25               	goto	u2807
  3347     0227  0BE0               	decfsz	??_main+1,f
  3348     0228  2A25               	goto	u2807
  3349     0229  0BE1               	decfsz	??_main+2,f
  3350     022A  2A25               	goto	u2807
  3351     022B                     l2820:
  3352                           
  3353                           ;main.c: 150:             PORTBbits.RB6 = 0;
  3354     022B  1283               	bcf	3,5	;RP0=0, select bank0
  3355     022C  1303               	bcf	3,6	;RP1=0, select bank0
  3356     022D  1306               	bcf	6,6	;volatile
  3357     022E                     l2822:
  3358                           
  3359                           ;main.c: 151:             _delay((unsigned long)((1000)*(4000000/4000.0)));
  3360     022E  3006               	movlw	6
  3361     022F  1283               	bcf	3,5	;RP0=0, select bank0
  3362     0230  1303               	bcf	3,6	;RP1=0, select bank0
  3363     0231  00E1               	movwf	??_main+2
  3364     0232  3013               	movlw	19
  3365     0233  00E0               	movwf	??_main+1
  3366     0234  30AD               	movlw	173
  3367     0235  00DF               	movwf	??_main
  3368     0236                     u2817:
  3369     0236  0BDF               	decfsz	??_main,f
  3370     0237  2A36               	goto	u2817
  3371     0238  0BE0               	decfsz	??_main+1,f
  3372     0239  2A36               	goto	u2817
  3373     023A  0BE1               	decfsz	??_main+2,f
  3374     023B  2A36               	goto	u2817
  3375     023C                     l2824:
  3376                           
  3377                           ;main.c: 152:             PORTBbits.RB7 = 0;
  3378     023C  1283               	bcf	3,5	;RP0=0, select bank0
  3379     023D  1303               	bcf	3,6	;RP1=0, select bank0
  3380     023E  1386               	bcf	6,7	;volatile
  3381     023F                     l2826:
  3382                           
  3383                           ;main.c: 154:             ClearStringReceive();
  3384     023F  120A  158A  2724  120A  118A  	fcall	_ClearStringReceive
  3385                           
  3386                           ;main.c: 155:         }else{
  3387     0244  2A55               	goto	l2830
  3388     0245                     l2828:
  3389                           
  3390                           ;main.c: 156:             LCD_write_string("Door Closed");
  3391     0245  3088               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
  3392     0246  1283               	bcf	3,5	;RP0=0, select bank0
  3393     0247  1303               	bcf	3,6	;RP1=0, select bank0
  3394     0248  00C6               	movwf	LCD_write_string@string
  3395     0249  3080               	movlw	128
  3396     024A  00C7               	movwf	LCD_write_string@string+1
  3397     024B  120A  158A  2768  120A  118A  	fcall	_LCD_write_string
  3398                           
  3399                           ;main.c: 157:             ClearStringReceive();
  3400     0250  120A  158A  2724  120A  118A  	fcall	_ClearStringReceive
  3401     0255                     l2830:
  3402                           
  3403                           ;main.c: 161:         _delay((unsigned long)((1000)*(4000000/4000.0)));
  3404     0255  3006               	movlw	6
  3405     0256  1283               	bcf	3,5	;RP0=0, select bank0
  3406     0257  1303               	bcf	3,6	;RP1=0, select bank0
  3407     0258  00E1               	movwf	??_main+2
  3408     0259  3013               	movlw	19
  3409     025A  00E0               	movwf	??_main+1
  3410     025B  30AD               	movlw	173
  3411     025C  00DF               	movwf	??_main
  3412     025D                     u2827:
  3413     025D  0BDF               	decfsz	??_main,f
  3414     025E  2A5D               	goto	u2827
  3415     025F  0BE0               	decfsz	??_main+1,f
  3416     0260  2A5D               	goto	u2827
  3417     0261  0BE1               	decfsz	??_main+2,f
  3418     0262  2A5D               	goto	u2827
  3419     0263                     l2832:
  3420                           
  3421                           ;main.c: 162:         LCD_clear();
  3422     0263  120A  158A  26DF  120A  118A  	fcall	_LCD_clear
  3423     0268  2944               	goto	l2772
  3424     0269  120A  118A  280E   	ljmp	start
  3425     026C                     __end_of_main:
  3426                           
  3427                           	psect	text1
  3428     0344                     __ptext1:	
  3429 ;; *************** function _strstr *****************
  3430 ;; Defined at:
  3431 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\strstr.c"
  3432 ;; Parameters:    Size  Location     Type
  3433 ;;  h               1    wreg     PTR const unsigned char 
  3434 ;;		 -> NULL(0), StringReceive(30), 
  3435 ;;  n               1    1[BANK0 ] PTR const unsigned char 
  3436 ;;		 -> STR_9(5), 
  3437 ;; Auto vars:     Size  Location     Type
  3438 ;;  h               1    6[BANK0 ] PTR const unsigned char 
  3439 ;;		 -> NULL(0), StringReceive(30), 
  3440 ;;  nl              2    4[BANK0 ] unsigned int 
  3441 ;; Return value:  Size  Location     Type
  3442 ;;                  1    wreg      PTR unsigned char 
  3443 ;; Registers used:
  3444 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3445 ;; Tracked objects:
  3446 ;;		On entry : 0/0
  3447 ;;		On exit  : 0/0
  3448 ;;		Unchanged: 0/0
  3449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3450 ;;      Params:         0       1       0       0       0
  3451 ;;      Locals:         0       3       0       0       0
  3452 ;;      Temps:          0       2       0       0       0
  3453 ;;      Totals:         0       6       0       0       0
  3454 ;;Total ram usage:        6 bytes
  3455 ;; Hardware stack levels used: 1
  3456 ;; Hardware stack levels required when called: 3
  3457 ;; This function calls:
  3458 ;;		_strchr
  3459 ;;		_strlen
  3460 ;;		_strncmp
  3461 ;; This function is called by:
  3462 ;;		_main
  3463 ;; This function uses a non-reentrant model
  3464 ;;
  3465                           
  3466     0344                     _strstr:	
  3467                           ;psect for function _strstr
  3468                           
  3469                           
  3470                           ;incstack = 0
  3471                           ; Regs used in _strstr: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3472                           ;strstr@h stored from wreg
  3473     0344  1283               	bcf	3,5	;RP0=0, select bank0
  3474     0345  1303               	bcf	3,6	;RP1=0, select bank0
  3475     0346  00CC               	movwf	strstr@h
  3476     0347                     l2600:
  3477     0347  0847               	movf	strstr@n,w
  3478     0348  1903               	btfsc	3,2
  3479     0349  2B4B               	goto	u2551
  3480     034A  2B4C               	goto	u2550
  3481     034B                     u2551:
  3482     034B  2B95               	goto	l2616
  3483     034C                     u2550:
  3484     034C                     l2602:
  3485     034C  0847               	movf	strstr@n,w
  3486     034D  120A  118A  27E3  120A  118A  	fcall	_strlen
  3487     0352  0874               	movf	?_strlen+1,w
  3488     0353  1283               	bcf	3,5	;RP0=0, select bank0
  3489     0354  1303               	bcf	3,6	;RP1=0, select bank0
  3490     0355  00CB               	movwf	strstr@nl+1
  3491     0356  0873               	movf	?_strlen,w
  3492     0357  00CA               	movwf	strstr@nl
  3493     0358  2B88               	goto	l2612
  3494     0359                     l2604:
  3495     0359  0847               	movf	strstr@n,w
  3496     035A  00F3               	movwf	strncmp@r
  3497     035B  084B               	movf	strstr@nl+1,w
  3498     035C  00F5               	movwf	strncmp@n+1
  3499     035D  084A               	movf	strstr@nl,w
  3500     035E  00F4               	movwf	strncmp@n
  3501     035F  084C               	movf	strstr@h,w
  3502     0360  120A  118A  2784  120A  118A  	fcall	_strncmp
  3503     0365  0873               	movf	?_strncmp,w
  3504     0366  0474               	iorwf	?_strncmp+1,w
  3505     0367  1D03               	btfss	3,2
  3506     0368  2B6A               	goto	u2561
  3507     0369  2B6B               	goto	u2560
  3508     036A                     u2561:
  3509     036A  2B6F               	goto	l2610
  3510     036B                     u2560:
  3511     036B                     l2606:
  3512     036B  1283               	bcf	3,5	;RP0=0, select bank0
  3513     036C  1303               	bcf	3,6	;RP1=0, select bank0
  3514     036D  084C               	movf	strstr@h,w
  3515     036E  2B96               	goto	l978
  3516     036F                     l2610:
  3517     036F  1283               	bcf	3,5	;RP0=0, select bank0
  3518     0370  1303               	bcf	3,6	;RP1=0, select bank0
  3519     0371  0847               	movf	strstr@n,w
  3520     0372  0084               	movwf	4
  3521     0373  120A  118A  240A  120A  118A  	fcall	stringdir
  3522     0378  00C8               	movwf	??_strstr
  3523     0379  01C9               	clrf	??_strstr+1
  3524     037A  0848               	movf	??_strstr,w
  3525     037B  00F3               	movwf	strchr@c
  3526     037C  0849               	movf	??_strstr+1,w
  3527     037D  00F4               	movwf	strchr@c+1
  3528     037E  084C               	movf	strstr@h,w
  3529     037F  3E01               	addlw	1
  3530     0380  120A  158A  26F5  120A  118A  	fcall	_strchr
  3531     0385  1283               	bcf	3,5	;RP0=0, select bank0
  3532     0386  1303               	bcf	3,6	;RP1=0, select bank0
  3533     0387  00CC               	movwf	strstr@h
  3534     0388                     l2612:
  3535     0388  084C               	movf	strstr@h,w
  3536     0389  1903               	btfsc	3,2
  3537     038A  2B8C               	goto	u2571
  3538     038B  2B8D               	goto	u2570
  3539     038C                     u2571:
  3540     038C  2B95               	goto	l2616
  3541     038D                     u2570:
  3542     038D                     l2614:
  3543     038D  084C               	movf	strstr@h,w
  3544     038E  0084               	movwf	4
  3545     038F  1383               	bcf	3,7	;select IRP bank0
  3546     0390  0800               	movf	0,w
  3547     0391  1D03               	btfss	3,2
  3548     0392  2B94               	goto	u2581
  3549     0393  2B95               	goto	u2580
  3550     0394                     u2581:
  3551     0394  2B59               	goto	l2604
  3552     0395                     u2580:
  3553     0395                     l2616:
  3554     0395  3000               	movlw	0
  3555     0396                     l978:
  3556     0396  0008               	return
  3557     0397                     __end_of_strstr:
  3558                           
  3559                           	psect	text2
  3560     0784                     __ptext2:	
  3561 ;; *************** function _strncmp *****************
  3562 ;; Defined at:
  3563 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\strncmp.c"
  3564 ;; Parameters:    Size  Location     Type
  3565 ;;  l               1    wreg     PTR const unsigned char 
  3566 ;;		 -> NULL(0), StringReceive(30), 
  3567 ;;  r               1    3[COMMON] PTR const unsigned char 
  3568 ;;		 -> STR_9(5), 
  3569 ;;  n               2    4[COMMON] unsigned int 
  3570 ;; Auto vars:     Size  Location     Type
  3571 ;;  l               1    0[BANK0 ] PTR const unsigned char 
  3572 ;;		 -> NULL(0), StringReceive(30), 
  3573 ;; Return value:  Size  Location     Type
  3574 ;;                  2    3[COMMON] int 
  3575 ;; Registers used:
  3576 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  3577 ;; Tracked objects:
  3578 ;;		On entry : 0/0
  3579 ;;		On exit  : 0/0
  3580 ;;		Unchanged: 0/0
  3581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3582 ;;      Params:         3       0       0       0       0
  3583 ;;      Locals:         0       1       0       0       0
  3584 ;;      Temps:          2       0       0       0       0
  3585 ;;      Totals:         5       1       0       0       0
  3586 ;;Total ram usage:        6 bytes
  3587 ;; Hardware stack levels used: 2
  3588 ;; Hardware stack levels required when called: 1
  3589 ;; This function calls:
  3590 ;;		Nothing
  3591 ;; This function is called by:
  3592 ;;		_strstr
  3593 ;; This function uses a non-reentrant model
  3594 ;;
  3595                           
  3596     0784                     _strncmp:	
  3597                           ;psect for function _strncmp
  3598                           
  3599                           
  3600                           ;incstack = 0
  3601                           ; Regs used in _strncmp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  3602                           ;strncmp@l stored from wreg
  3603     0784  1283               	bcf	3,5	;RP0=0, select bank0
  3604     0785  1303               	bcf	3,6	;RP1=0, select bank0
  3605     0786  00C6               	movwf	strncmp@l
  3606     0787                     l2470:
  3607     0787  3001               	movlw	1
  3608     0788  02F4               	subwf	strncmp@n,f
  3609     0789  3000               	movlw	0
  3610     078A  1C03               	skipc
  3611     078B  03F5               	decf	strncmp@n+1,f
  3612     078C  02F5               	subwf	strncmp@n+1,f
  3613     078D  0A74               	incf	strncmp@n,w
  3614     078E  1D03               	skipz
  3615     078F  2F94               	goto	u2401
  3616     0790  0A75               	incf	strncmp@n+1,w
  3617     0791  1D03               	btfss	3,2
  3618     0792  2F94               	goto	u2401
  3619     0793  2F95               	goto	u2400
  3620     0794                     u2401:
  3621     0794  2FA6               	goto	l2480
  3622     0795                     u2400:
  3623     0795                     l2472:
  3624     0795  01F3               	clrf	?_strncmp
  3625     0796  01F4               	clrf	?_strncmp+1
  3626     0797  2FE2               	goto	l997
  3627     0798                     l2476:
  3628     0798  3001               	movlw	1
  3629     0799  00FF               	movwf	btemp+1
  3630     079A  087F               	movf	btemp+1,w
  3631     079B  07C6               	addwf	strncmp@l,f
  3632     079C  3001               	movlw	1
  3633     079D  00FF               	movwf	btemp+1
  3634     079E  087F               	movf	btemp+1,w
  3635     079F  07F3               	addwf	strncmp@r,f
  3636     07A0                     l2478:
  3637     07A0  3001               	movlw	1
  3638     07A1  02F4               	subwf	strncmp@n,f
  3639     07A2  3000               	movlw	0
  3640     07A3  1C03               	skipc
  3641     07A4  03F5               	decf	strncmp@n+1,f
  3642     07A5  02F5               	subwf	strncmp@n+1,f
  3643     07A6                     l2480:
  3644     07A6  0846               	movf	strncmp@l,w
  3645     07A7  0084               	movwf	4
  3646     07A8  1383               	bcf	3,7	;select IRP bank0
  3647     07A9  0800               	movf	0,w
  3648     07AA  1903               	btfsc	3,2
  3649     07AB  2FAD               	goto	u2411
  3650     07AC  2FAE               	goto	u2410
  3651     07AD                     u2411:
  3652     07AD  2FD0               	goto	l2488
  3653     07AE                     u2410:
  3654     07AE                     l2482:
  3655     07AE  0873               	movf	strncmp@r,w
  3656     07AF  0084               	movwf	4
  3657     07B0  120A  118A  240A  120A  118A  	fcall	stringdir
  3658     07B5  3A00               	xorlw	0
  3659     07B6  1903               	skipnz
  3660     07B7  2FB9               	goto	u2421
  3661     07B8  2FBA               	goto	u2420
  3662     07B9                     u2421:
  3663     07B9  2FD0               	goto	l2488
  3664     07BA                     u2420:
  3665     07BA                     l2484:
  3666     07BA  0874               	movf	strncmp@n,w
  3667     07BB  0475               	iorwf	strncmp@n+1,w
  3668     07BC  1903               	btfsc	3,2
  3669     07BD  2FBF               	goto	u2431
  3670     07BE  2FC0               	goto	u2430
  3671     07BF                     u2431:
  3672     07BF  2FD0               	goto	l2488
  3673     07C0                     u2430:
  3674     07C0                     l2486:
  3675     07C0  0873               	movf	strncmp@r,w
  3676     07C1  0084               	movwf	4
  3677     07C2  120A  118A  240A  120A  118A  	fcall	stringdir
  3678     07C7  00F6               	movwf	??_strncmp
  3679     07C8  0846               	movf	strncmp@l,w
  3680     07C9  0084               	movwf	4
  3681     07CA  0800               	movf	0,w
  3682     07CB  0676               	xorwf	??_strncmp,w
  3683     07CC  1903               	skipnz
  3684     07CD  2FCF               	goto	u2441
  3685     07CE  2FD0               	goto	u2440
  3686     07CF                     u2441:
  3687     07CF  2F98               	goto	l2476
  3688     07D0                     u2440:
  3689     07D0                     l2488:
  3690     07D0  0873               	movf	strncmp@r,w
  3691     07D1  0084               	movwf	4
  3692     07D2  120A  118A  240A  120A  118A  	fcall	stringdir
  3693     07D7  00F6               	movwf	??_strncmp
  3694     07D8  0846               	movf	strncmp@l,w
  3695     07D9  0084               	movwf	4
  3696     07DA  0800               	movf	0,w
  3697     07DB  00F7               	movwf	??_strncmp+1
  3698     07DC  0876               	movf	??_strncmp,w
  3699     07DD  0277               	subwf	??_strncmp+1,w
  3700     07DE  00F3               	movwf	?_strncmp
  3701     07DF  01F4               	clrf	?_strncmp+1
  3702     07E0  1C03               	skipc
  3703     07E1  03F4               	decf	?_strncmp+1,f
  3704     07E2                     l997:
  3705     07E2  0008               	return
  3706     07E3                     __end_of_strncmp:
  3707                           
  3708                           	psect	text3
  3709     07E3                     __ptext3:	
  3710 ;; *************** function _strlen *****************
  3711 ;; Defined at:
  3712 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\strlen.c"
  3713 ;; Parameters:    Size  Location     Type
  3714 ;;  s               1    wreg     PTR const unsigned char 
  3715 ;;		 -> STR_9(5), 
  3716 ;; Auto vars:     Size  Location     Type
  3717 ;;  s               1    6[COMMON] PTR const unsigned char 
  3718 ;;		 -> STR_9(5), 
  3719 ;;  a               1    5[COMMON] PTR const unsigned char 
  3720 ;;		 -> STR_9(5), 
  3721 ;; Return value:  Size  Location     Type
  3722 ;;                  2    3[COMMON] unsigned int 
  3723 ;; Registers used:
  3724 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  3725 ;; Tracked objects:
  3726 ;;		On entry : 0/0
  3727 ;;		On exit  : 0/0
  3728 ;;		Unchanged: 0/0
  3729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3730 ;;      Params:         2       0       0       0       0
  3731 ;;      Locals:         2       0       0       0       0
  3732 ;;      Temps:          0       0       0       0       0
  3733 ;;      Totals:         4       0       0       0       0
  3734 ;;Total ram usage:        4 bytes
  3735 ;; Hardware stack levels used: 2
  3736 ;; Hardware stack levels required when called: 1
  3737 ;; This function calls:
  3738 ;;		Nothing
  3739 ;; This function is called by:
  3740 ;;		_strstr
  3741 ;; This function uses a non-reentrant model
  3742 ;;
  3743                           
  3744     07E3                     _strlen:	
  3745                           ;psect for function _strlen
  3746                           
  3747                           
  3748                           ;incstack = 0
  3749                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  3750                           ;strlen@s stored from wreg
  3751     07E3  00F6               	movwf	strlen@s
  3752     07E4                     l1858:
  3753     07E4  0876               	movf	strlen@s,w
  3754     07E5  00F5               	movwf	strlen@a
  3755     07E6  2FEB               	goto	l1862
  3756     07E7                     l1860:
  3757     07E7  3001               	movlw	1
  3758     07E8  00FF               	movwf	btemp+1
  3759     07E9  087F               	movf	btemp+1,w
  3760     07EA  07F6               	addwf	strlen@s,f
  3761     07EB                     l1862:
  3762     07EB  0876               	movf	strlen@s,w
  3763     07EC  0084               	movwf	4
  3764     07ED  120A  118A  240A  120A  118A  	fcall	stringdir
  3765     07F2  3A00               	xorlw	0
  3766     07F3  1D03               	skipz
  3767     07F4  2FF6               	goto	u1561
  3768     07F5  2FF7               	goto	u1560
  3769     07F6                     u1561:
  3770     07F6  2FE7               	goto	l1860
  3771     07F7                     u1560:
  3772     07F7                     l1864:
  3773     07F7  0875               	movf	strlen@a,w
  3774     07F8  0276               	subwf	strlen@s,w
  3775     07F9  00F3               	movwf	?_strlen
  3776     07FA  01F4               	clrf	?_strlen+1
  3777     07FB  1BF3               	btfsc	?_strlen,7
  3778     07FC  03F4               	decf	?_strlen+1,f
  3779     07FD                     l993:
  3780     07FD  0008               	return
  3781     07FE                     __end_of_strlen:
  3782                           
  3783                           	psect	text4
  3784     0EF5                     __ptext4:	
  3785 ;; *************** function _strchr *****************
  3786 ;; Defined at:
  3787 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\strchr.c"
  3788 ;; Parameters:    Size  Location     Type
  3789 ;;  s               1    wreg     PTR const unsigned char 
  3790 ;;		 -> NULL(0), StringReceive(30), 
  3791 ;;  c               2    3[COMMON] int 
  3792 ;; Auto vars:     Size  Location     Type
  3793 ;;  s               1    5[COMMON] PTR const unsigned char 
  3794 ;;		 -> NULL(0), StringReceive(30), 
  3795 ;; Return value:  Size  Location     Type
  3796 ;;                  1    wreg      PTR unsigned char 
  3797 ;; Registers used:
  3798 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3799 ;; Tracked objects:
  3800 ;;		On entry : 0/0
  3801 ;;		On exit  : 0/0
  3802 ;;		Unchanged: 0/0
  3803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3804 ;;      Params:         2       0       0       0       0
  3805 ;;      Locals:         1       0       0       0       0
  3806 ;;      Temps:          0       0       0       0       0
  3807 ;;      Totals:         3       0       0       0       0
  3808 ;;Total ram usage:        3 bytes
  3809 ;; Hardware stack levels used: 1
  3810 ;; Hardware stack levels required when called: 1
  3811 ;; This function calls:
  3812 ;;		Nothing
  3813 ;; This function is called by:
  3814 ;;		_strstr
  3815 ;; This function uses a non-reentrant model
  3816 ;;
  3817                           
  3818     0EF5                     _strchr:	
  3819                           ;psect for function _strchr
  3820                           
  3821                           
  3822                           ;incstack = 0
  3823                           ; Regs used in _strchr: [wreg-fsr0h+status,2+status,0]
  3824                           ;strchr@s stored from wreg
  3825     0EF5  00F5               	movwf	strchr@s
  3826     0EF6                     l984:
  3827     0EF6                     l1890:
  3828     0EF6  0875               	movf	strchr@s,w
  3829     0EF7  0084               	movwf	4
  3830     0EF8  1383               	bcf	3,7	;select IRP bank0
  3831     0EF9  0800               	movf	0,w
  3832     0EFA  0673               	xorwf	strchr@c,w
  3833     0EFB  1D03               	skipz
  3834     0EFC  2EFE               	goto	u1621
  3835     0EFD  2EFF               	goto	u1620
  3836     0EFE                     u1621:
  3837     0EFE  2F01               	goto	l1896
  3838     0EFF                     u1620:
  3839     0EFF                     l1892:
  3840     0EFF  0875               	movf	strchr@s,w
  3841     0F00  2F0B               	goto	l986
  3842     0F01                     l1896:
  3843     0F01  0875               	movf	strchr@s,w
  3844     0F02  0084               	movwf	4
  3845     0F03  3001               	movlw	1
  3846     0F04  07F5               	addwf	strchr@s,f
  3847     0F05  0800               	movf	0,w
  3848     0F06  1D03               	btfss	3,2
  3849     0F07  2F09               	goto	u1631
  3850     0F08  2F0A               	goto	u1630
  3851     0F09                     u1631:
  3852     0F09  2EF6               	goto	l984
  3853     0F0A                     u1630:
  3854     0F0A                     l1898:
  3855     0F0A  3000               	movlw	0
  3856     0F0B                     l986:
  3857     0F0B  0008               	return
  3858     0F0C                     __end_of_strchr:
  3859                           
  3860                           	psect	text5
  3861     0EBE                     __ptext5:	
  3862 ;; *************** function _SendCommandAT *****************
  3863 ;; Defined at:
  3864 ;;		line 81 in file "esp8266.c"
  3865 ;; Parameters:    Size  Location     Type
  3866 ;;  command         1    wreg     PTR unsigned char 
  3867 ;;		 -> STR_6(20), STR_4(3), 
  3868 ;; Auto vars:     Size  Location     Type
  3869 ;;  command         1    5[COMMON] PTR unsigned char 
  3870 ;;		 -> STR_6(20), STR_4(3), 
  3871 ;; Return value:  Size  Location     Type
  3872 ;;                  1    wreg      void 
  3873 ;; Registers used:
  3874 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3875 ;; Tracked objects:
  3876 ;;		On entry : 0/0
  3877 ;;		On exit  : 0/0
  3878 ;;		Unchanged: 0/0
  3879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3880 ;;      Params:         0       0       0       0       0
  3881 ;;      Locals:         1       0       0       0       0
  3882 ;;      Temps:          0       0       0       0       0
  3883 ;;      Totals:         1       0       0       0       0
  3884 ;;Total ram usage:        1 bytes
  3885 ;; Hardware stack levels used: 1
  3886 ;; Hardware stack levels required when called: 3
  3887 ;; This function calls:
  3888 ;;		_SendStringSerially
  3889 ;; This function is called by:
  3890 ;;		_main
  3891 ;; This function uses a non-reentrant model
  3892 ;;
  3893                           
  3894     0EBE                     _SendCommandAT:	
  3895                           ;psect for function _SendCommandAT
  3896                           
  3897                           
  3898                           ;incstack = 0
  3899                           ; Regs used in _SendCommandAT: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3900                           ;SendCommandAT@command stored from wreg
  3901     0EBE  00F5               	movwf	SendCommandAT@command
  3902     0EBF                     l2044:
  3903                           
  3904                           ;esp8266.c: 81: void SendCommandAT(unsigned char* command);esp8266.c: 82:     {;esp8266.
      +                          c: 84:     SendStringSerially(command);
  3905     0EBF  0875               	movf	SendCommandAT@command,w
  3906     0EC0  120A  118A  23DF  120A  158A  	fcall	_SendStringSerially
  3907                           
  3908                           ;esp8266.c: 88:     SendStringSerially("\r\n");
  3909     0EC5  30AC               	movlw	(low ((STR_14-__stringbase)| (0+32768)))& (0+255)
  3910     0EC6  120A  118A  23DF  120A  158A  	fcall	_SendStringSerially
  3911     0ECB                     l334:
  3912     0ECB  0008               	return
  3913     0ECC                     __end_of_SendCommandAT:
  3914                           
  3915                           	psect	text6
  3916     03DF                     __ptext6:	
  3917 ;; *************** function _SendStringSerially *****************
  3918 ;; Defined at:
  3919 ;;		line 75 in file "esp8266.c"
  3920 ;; Parameters:    Size  Location     Type
  3921 ;;  st              1    wreg     PTR unsigned char 
  3922 ;;		 -> STR_14(3), STR_6(20), STR_4(3), 
  3923 ;; Auto vars:     Size  Location     Type
  3924 ;;  st              1    4[COMMON] PTR unsigned char 
  3925 ;;		 -> STR_14(3), STR_6(20), STR_4(3), 
  3926 ;; Return value:  Size  Location     Type
  3927 ;;                  1    wreg      void 
  3928 ;; Registers used:
  3929 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3930 ;; Tracked objects:
  3931 ;;		On entry : 0/0
  3932 ;;		On exit  : 0/0
  3933 ;;		Unchanged: 0/0
  3934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3935 ;;      Params:         0       0       0       0       0
  3936 ;;      Locals:         1       0       0       0       0
  3937 ;;      Temps:          0       0       0       0       0
  3938 ;;      Totals:         1       0       0       0       0
  3939 ;;Total ram usage:        1 bytes
  3940 ;; Hardware stack levels used: 1
  3941 ;; Hardware stack levels required when called: 2
  3942 ;; This function calls:
  3943 ;;		_SendByteSerially
  3944 ;; This function is called by:
  3945 ;;		_SendCommandAT
  3946 ;; This function uses a non-reentrant model
  3947 ;;
  3948                           
  3949     03DF                     _SendStringSerially:	
  3950                           ;psect for function _SendStringSerially
  3951                           
  3952                           
  3953                           ;incstack = 0
  3954                           ; Regs used in _SendStringSerially: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3955                           ;SendStringSerially@st stored from wreg
  3956     03DF  00F4               	movwf	SendStringSerially@st
  3957     03E0                     l1760:
  3958                           
  3959                           ;esp8266.c: 75: void SendStringSerially(unsigned char* st);esp8266.c: 76:     {;esp8266.
      +                          c: 77:     while (*st)
  3960     03E0  2BF1               	goto	l1766
  3961     03E1                     l1762:
  3962                           
  3963                           ;esp8266.c: 78:         SendByteSerially(*st++);
  3964     03E1  0874               	movf	SendStringSerially@st,w
  3965     03E2  0084               	movwf	4
  3966     03E3  120A  118A  240A  120A  118A  	fcall	stringdir
  3967     03E8  120A  158A  26A9  120A  118A  	fcall	_SendByteSerially
  3968     03ED                     l1764:
  3969     03ED  3001               	movlw	1
  3970     03EE  00FF               	movwf	btemp+1
  3971     03EF  087F               	movf	btemp+1,w
  3972     03F0  07F4               	addwf	SendStringSerially@st,f
  3973     03F1                     l1766:
  3974                           
  3975                           ;esp8266.c: 77:     while (*st)
  3976     03F1  0874               	movf	SendStringSerially@st,w
  3977     03F2  0084               	movwf	4
  3978     03F3  120A  118A  240A  120A  118A  	fcall	stringdir
  3979     03F8  3A00               	xorlw	0
  3980     03F9  1D03               	skipz
  3981     03FA  2BFC               	goto	u1311
  3982     03FB  2BFD               	goto	u1310
  3983     03FC                     u1311:
  3984     03FC  2BE1               	goto	l1762
  3985     03FD                     u1310:
  3986     03FD                     l331:
  3987     03FD  0008               	return
  3988     03FE                     __end_of_SendStringSerially:
  3989                           
  3990                           	psect	text7
  3991     0EA9                     __ptext7:	
  3992 ;; *************** function _SendByteSerially *****************
  3993 ;; Defined at:
  3994 ;;		line 58 in file "esp8266.c"
  3995 ;; Parameters:    Size  Location     Type
  3996 ;;  Byte            1    wreg     unsigned char 
  3997 ;; Auto vars:     Size  Location     Type
  3998 ;;  Byte            1    3[COMMON] unsigned char 
  3999 ;; Return value:  Size  Location     Type
  4000 ;;                  1    wreg      void 
  4001 ;; Registers used:
  4002 ;;		wreg
  4003 ;; Tracked objects:
  4004 ;;		On entry : 0/0
  4005 ;;		On exit  : 0/0
  4006 ;;		Unchanged: 0/0
  4007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4008 ;;      Params:         0       0       0       0       0
  4009 ;;      Locals:         1       0       0       0       0
  4010 ;;      Temps:          0       0       0       0       0
  4011 ;;      Totals:         1       0       0       0       0
  4012 ;;Total ram usage:        1 bytes
  4013 ;; Hardware stack levels used: 1
  4014 ;; Hardware stack levels required when called: 1
  4015 ;; This function calls:
  4016 ;;		Nothing
  4017 ;; This function is called by:
  4018 ;;		_SendStringSerially
  4019 ;; This function uses a non-reentrant model
  4020 ;;
  4021                           
  4022     0EA9                     _SendByteSerially:	
  4023                           ;psect for function _SendByteSerially
  4024                           
  4025                           
  4026                           ;incstack = 0
  4027                           ; Regs used in _SendByteSerially: [wreg]
  4028                           ;SendByteSerially@Byte stored from wreg
  4029     0EA9  00F3               	movwf	SendByteSerially@Byte
  4030     0EAA                     l1734:
  4031     0EAA                     l315:	
  4032                           ;esp8266.c: 58: void SendByteSerially(unsigned char Byte);esp8266.c: 59:     {;esp8266.c
      +                          : 60:     while (!TXIF);
  4033                           
  4034     0EAA  1283               	bcf	3,5	;RP0=0, select bank0
  4035     0EAB  1303               	bcf	3,6	;RP1=0, select bank0
  4036     0EAC  1E0C               	btfss	12,4	;volatile
  4037     0EAD  2EAF               	goto	u1241
  4038     0EAE  2EB0               	goto	u1240
  4039     0EAF                     u1241:
  4040     0EAF  2EAA               	goto	l315
  4041     0EB0                     u1240:
  4042     0EB0                     l1736:
  4043                           
  4044                           ;esp8266.c: 61:     TXREG = Byte;
  4045     0EB0  0873               	movf	SendByteSerially@Byte,w
  4046     0EB1  0099               	movwf	25	;volatile
  4047     0EB2                     l318:
  4048     0EB2  0008               	return
  4049     0EB3                     __end_of_SendByteSerially:
  4050                           
  4051                           	psect	text8
  4052     026C                     __ptext8:	
  4053 ;; *************** function _LCD_write_variable *****************
  4054 ;; Defined at:
  4055 ;;		line 16 in file "LCD_write_variable.c"
  4056 ;; Parameters:    Size  Location     Type
  4057 ;;  variable        4   14[BANK0 ] long 
  4058 ;;  left_offset     1   18[BANK0 ] unsigned char 
  4059 ;; Auto vars:     Size  Location     Type
  4060 ;;  i               1   19[BANK0 ] unsigned char 
  4061 ;;  temp_variabl    4   21[BANK0 ] long 
  4062 ;;  digits          1   20[BANK0 ] unsigned char 
  4063 ;; Return value:  Size  Location     Type
  4064 ;;                  1    wreg      void 
  4065 ;; Registers used:
  4066 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4067 ;; Tracked objects:
  4068 ;;		On entry : 0/0
  4069 ;;		On exit  : 0/0
  4070 ;;		Unchanged: 0/0
  4071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4072 ;;      Params:         0       5       0       0       0
  4073 ;;      Locals:         0       6       0       0       0
  4074 ;;      Temps:          0       0       0       0       0
  4075 ;;      Totals:         0      11       0       0       0
  4076 ;;Total ram usage:       11 bytes
  4077 ;; Hardware stack levels used: 1
  4078 ;; Hardware stack levels required when called: 3
  4079 ;; This function calls:
  4080 ;;		_LCD_write_data
  4081 ;;		___aldiv
  4082 ;;		___almod
  4083 ;;		___lmul
  4084 ;; This function is called by:
  4085 ;;		_main
  4086 ;;		_LCD_write_float
  4087 ;; This function uses a non-reentrant model
  4088 ;;
  4089                           
  4090     026C                     _LCD_write_variable:	
  4091                           ;psect for function _LCD_write_variable
  4092                           
  4093     026C                     l2550:	
  4094                           ;incstack = 0
  4095                           ; Regs used in _LCD_write_variable: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4096                           
  4097                           
  4098                           ;LCD_write_variable.c: 18:     int32_t temp_variable;;LCD_write_variable.c: 19:     uint
      +                          8_t digits = 0;
  4099     026C  1283               	bcf	3,5	;RP0=0, select bank0
  4100     026D  1303               	bcf	3,6	;RP1=0, select bank0
  4101     026E  01DA               	clrf	LCD_write_variable@digits
  4102     026F                     l2552:
  4103                           
  4104                           ;LCD_write_variable.c: 22:     if(variable < 0) variable *= -1;
  4105     026F  1FD7               	btfss	LCD_write_variable@variable+3,7
  4106     0270  2A72               	goto	u2491
  4107     0271  2A73               	goto	u2490
  4108     0272                     u2491:
  4109     0272  2A92               	goto	l2556
  4110     0273                     u2490:
  4111     0273                     l2554:
  4112     0273  30FF               	movlw	255
  4113     0274  00C9               	movwf	___lmul@multiplier+3
  4114     0275  30FF               	movlw	255
  4115     0276  00C8               	movwf	___lmul@multiplier+2
  4116     0277  30FF               	movlw	255
  4117     0278  00C7               	movwf	___lmul@multiplier+1
  4118     0279  30FF               	movlw	255
  4119     027A  00C6               	movwf	___lmul@multiplier
  4120     027B  0857               	movf	LCD_write_variable@variable+3,w
  4121     027C  00CD               	movwf	___lmul@multiplicand+3
  4122     027D  0856               	movf	LCD_write_variable@variable+2,w
  4123     027E  00CC               	movwf	___lmul@multiplicand+2
  4124     027F  0855               	movf	LCD_write_variable@variable+1,w
  4125     0280  00CB               	movwf	___lmul@multiplicand+1
  4126     0281  0854               	movf	LCD_write_variable@variable,w
  4127     0282  00CA               	movwf	___lmul@multiplicand
  4128     0283  120A  118A  2397  120A  118A  	fcall	___lmul
  4129     0288  1283               	bcf	3,5	;RP0=0, select bank0
  4130     0289  1303               	bcf	3,6	;RP1=0, select bank0
  4131     028A  0849               	movf	?___lmul+3,w
  4132     028B  00D7               	movwf	LCD_write_variable@variable+3
  4133     028C  0848               	movf	?___lmul+2,w
  4134     028D  00D6               	movwf	LCD_write_variable@variable+2
  4135     028E  0847               	movf	?___lmul+1,w
  4136     028F  00D5               	movwf	LCD_write_variable@variable+1
  4137     0290  0846               	movf	?___lmul,w
  4138     0291  00D4               	movwf	LCD_write_variable@variable
  4139     0292                     l2556:
  4140                           
  4141                           ;LCD_write_variable.c: 25:     temp_variable = variable;
  4142     0292  0857               	movf	LCD_write_variable@variable+3,w
  4143     0293  00DE               	movwf	LCD_write_variable@temp_variable+3
  4144     0294  0856               	movf	LCD_write_variable@variable+2,w
  4145     0295  00DD               	movwf	LCD_write_variable@temp_variable+2
  4146     0296  0855               	movf	LCD_write_variable@variable+1,w
  4147     0297  00DC               	movwf	LCD_write_variable@temp_variable+1
  4148     0298  0854               	movf	LCD_write_variable@variable,w
  4149     0299  00DB               	movwf	LCD_write_variable@temp_variable
  4150     029A                     l2558:
  4151                           
  4152                           ;LCD_write_variable.c: 27:         digits++;
  4153     029A  3001               	movlw	1
  4154     029B  00FF               	movwf	btemp+1
  4155     029C  087F               	movf	btemp+1,w
  4156     029D  07DA               	addwf	LCD_write_variable@digits,f
  4157     029E                     l2560:
  4158                           
  4159                           ;LCD_write_variable.c: 28:         if(temp_variable < 10) break;
  4160     029E  1BDE               	btfsc	LCD_write_variable@temp_variable+3,7
  4161     029F  2AB1               	goto	u2500
  4162     02A0  085E               	movf	LCD_write_variable@temp_variable+3,w
  4163     02A1  1D03               	btfss	3,2
  4164     02A2  2AB0               	goto	u2501
  4165     02A3  085D               	movf	LCD_write_variable@temp_variable+2,w
  4166     02A4  1D03               	btfss	3,2
  4167     02A5  2AB0               	goto	u2501
  4168     02A6  085C               	movf	LCD_write_variable@temp_variable+1,w
  4169     02A7  1D03               	btfss	3,2
  4170     02A8  2AB0               	goto	u2501
  4171     02A9  300A               	movlw	10
  4172     02AA  025B               	subwf	LCD_write_variable@temp_variable,w
  4173     02AB  1D03               	skipz
  4174     02AC  2AAD               	goto	u2503
  4175     02AD                     u2503:
  4176     02AD  1803               	btfsc	3,0
  4177     02AE  2AB0               	goto	u2501
  4178     02AF  2AB1               	goto	u2500
  4179     02B0                     u2501:
  4180     02B0  2AB2               	goto	l2564
  4181     02B1                     u2500:
  4182     02B1  2AD4               	goto	l2566
  4183     02B2                     l2564:
  4184                           
  4185                           ;LCD_write_variable.c: 29:         temp_variable /= 10;
  4186     02B2  3000               	movlw	0
  4187     02B3  1283               	bcf	3,5	;RP0=0, select bank0
  4188     02B4  1303               	bcf	3,6	;RP1=0, select bank0
  4189     02B5  00C9               	movwf	___aldiv@divisor+3
  4190     02B6  3000               	movlw	0
  4191     02B7  00C8               	movwf	___aldiv@divisor+2
  4192     02B8  3000               	movlw	0
  4193     02B9  00C7               	movwf	___aldiv@divisor+1
  4194     02BA  300A               	movlw	10
  4195     02BB  00C6               	movwf	___aldiv@divisor
  4196     02BC  085E               	movf	LCD_write_variable@temp_variable+3,w
  4197     02BD  00CD               	movwf	___aldiv@dividend+3
  4198     02BE  085D               	movf	LCD_write_variable@temp_variable+2,w
  4199     02BF  00CC               	movwf	___aldiv@dividend+2
  4200     02C0  085C               	movf	LCD_write_variable@temp_variable+1,w
  4201     02C1  00CB               	movwf	___aldiv@dividend+1
  4202     02C2  085B               	movf	LCD_write_variable@temp_variable,w
  4203     02C3  00CA               	movwf	___aldiv@dividend
  4204     02C4  120A  118A  24C1  120A  118A  	fcall	___aldiv
  4205     02C9  1283               	bcf	3,5	;RP0=0, select bank0
  4206     02CA  1303               	bcf	3,6	;RP1=0, select bank0
  4207     02CB  0849               	movf	?___aldiv+3,w
  4208     02CC  00DE               	movwf	LCD_write_variable@temp_variable+3
  4209     02CD  0848               	movf	?___aldiv+2,w
  4210     02CE  00DD               	movwf	LCD_write_variable@temp_variable+2
  4211     02CF  0847               	movf	?___aldiv+1,w
  4212     02D0  00DC               	movwf	LCD_write_variable@temp_variable+1
  4213     02D1  0846               	movf	?___aldiv,w
  4214     02D2  00DB               	movwf	LCD_write_variable@temp_variable
  4215     02D3  2A9A               	goto	l2558
  4216     02D4                     l2566:
  4217                           
  4218                           ;LCD_write_variable.c: 34:         if(left_offset <= digits) break;
  4219     02D4  1283               	bcf	3,5	;RP0=0, select bank0
  4220     02D5  1303               	bcf	3,6	;RP1=0, select bank0
  4221     02D6  0858               	movf	LCD_write_variable@left_offset,w
  4222     02D7  025A               	subwf	LCD_write_variable@digits,w
  4223     02D8  1C03               	skipc
  4224     02D9  2ADB               	goto	u2511
  4225     02DA  2ADC               	goto	u2510
  4226     02DB                     u2511:
  4227     02DB  2ADD               	goto	l2570
  4228     02DC                     u2510:
  4229     02DC  2AE8               	goto	l2574
  4230     02DD                     l2570:
  4231                           
  4232                           ;LCD_write_variable.c: 35:         LCD_write_data(' ');
  4233     02DD  3020               	movlw	32
  4234     02DE  120A  118A  255E  120A  118A  	fcall	_LCD_write_data
  4235     02E3                     l2572:
  4236                           
  4237                           ;LCD_write_variable.c: 36:         left_offset--;
  4238     02E3  3001               	movlw	1
  4239     02E4  1283               	bcf	3,5	;RP0=0, select bank0
  4240     02E5  1303               	bcf	3,6	;RP1=0, select bank0
  4241     02E6  02D8               	subwf	LCD_write_variable@left_offset,f
  4242     02E7  2AD4               	goto	l2566
  4243     02E8                     l2574:
  4244                           
  4245                           ;LCD_write_variable.c: 41:         temp_variable = variable;
  4246     02E8  0857               	movf	LCD_write_variable@variable+3,w
  4247     02E9  00DE               	movwf	LCD_write_variable@temp_variable+3
  4248     02EA  0856               	movf	LCD_write_variable@variable+2,w
  4249     02EB  00DD               	movwf	LCD_write_variable@temp_variable+2
  4250     02EC  0855               	movf	LCD_write_variable@variable+1,w
  4251     02ED  00DC               	movwf	LCD_write_variable@temp_variable+1
  4252     02EE  0854               	movf	LCD_write_variable@variable,w
  4253     02EF  00DB               	movwf	LCD_write_variable@temp_variable
  4254     02F0                     l2576:
  4255                           
  4256                           ;LCD_write_variable.c: 42:         for(uint8_t i = 1 ; i < digits ; i++){
  4257     02F0  01D9               	clrf	LCD_write_variable@i
  4258     02F1  0AD9               	incf	LCD_write_variable@i,f
  4259     02F2  2B16               	goto	l2582
  4260     02F3                     l2578:
  4261                           
  4262                           ;LCD_write_variable.c: 43:             temp_variable /= 10;
  4263     02F3  3000               	movlw	0
  4264     02F4  00C9               	movwf	___aldiv@divisor+3
  4265     02F5  3000               	movlw	0
  4266     02F6  00C8               	movwf	___aldiv@divisor+2
  4267     02F7  3000               	movlw	0
  4268     02F8  00C7               	movwf	___aldiv@divisor+1
  4269     02F9  300A               	movlw	10
  4270     02FA  00C6               	movwf	___aldiv@divisor
  4271     02FB  085E               	movf	LCD_write_variable@temp_variable+3,w
  4272     02FC  00CD               	movwf	___aldiv@dividend+3
  4273     02FD  085D               	movf	LCD_write_variable@temp_variable+2,w
  4274     02FE  00CC               	movwf	___aldiv@dividend+2
  4275     02FF  085C               	movf	LCD_write_variable@temp_variable+1,w
  4276     0300  00CB               	movwf	___aldiv@dividend+1
  4277     0301  085B               	movf	LCD_write_variable@temp_variable,w
  4278     0302  00CA               	movwf	___aldiv@dividend
  4279     0303  120A  118A  24C1  120A  118A  	fcall	___aldiv
  4280     0308  1283               	bcf	3,5	;RP0=0, select bank0
  4281     0309  1303               	bcf	3,6	;RP1=0, select bank0
  4282     030A  0849               	movf	?___aldiv+3,w
  4283     030B  00DE               	movwf	LCD_write_variable@temp_variable+3
  4284     030C  0848               	movf	?___aldiv+2,w
  4285     030D  00DD               	movwf	LCD_write_variable@temp_variable+2
  4286     030E  0847               	movf	?___aldiv+1,w
  4287     030F  00DC               	movwf	LCD_write_variable@temp_variable+1
  4288     0310  0846               	movf	?___aldiv,w
  4289     0311  00DB               	movwf	LCD_write_variable@temp_variable
  4290     0312                     l2580:
  4291                           
  4292                           ;LCD_write_variable.c: 44:         }
  4293     0312  3001               	movlw	1
  4294     0313  00FF               	movwf	btemp+1
  4295     0314  087F               	movf	btemp+1,w
  4296     0315  07D9               	addwf	LCD_write_variable@i,f
  4297     0316                     l2582:
  4298     0316  085A               	movf	LCD_write_variable@digits,w
  4299     0317  0259               	subwf	LCD_write_variable@i,w
  4300     0318  1C03               	skipc
  4301     0319  2B1B               	goto	u2521
  4302     031A  2B1C               	goto	u2520
  4303     031B                     u2521:
  4304     031B  2AF3               	goto	l2578
  4305     031C                     u2520:
  4306     031C                     l2584:
  4307                           
  4308                           ;LCD_write_variable.c: 45:         LCD_write_data( (temp_variable%10) + '0' );
  4309     031C  3000               	movlw	0
  4310     031D  00C9               	movwf	___almod@divisor+3
  4311     031E  3000               	movlw	0
  4312     031F  00C8               	movwf	___almod@divisor+2
  4313     0320  3000               	movlw	0
  4314     0321  00C7               	movwf	___almod@divisor+1
  4315     0322  300A               	movlw	10
  4316     0323  00C6               	movwf	___almod@divisor
  4317     0324  085E               	movf	LCD_write_variable@temp_variable+3,w
  4318     0325  00CD               	movwf	___almod@dividend+3
  4319     0326  085D               	movf	LCD_write_variable@temp_variable+2,w
  4320     0327  00CC               	movwf	___almod@dividend+2
  4321     0328  085C               	movf	LCD_write_variable@temp_variable+1,w
  4322     0329  00CB               	movwf	___almod@dividend+1
  4323     032A  085B               	movf	LCD_write_variable@temp_variable,w
  4324     032B  00CA               	movwf	___almod@dividend
  4325     032C  120A  118A  2686  120A  118A  	fcall	___almod
  4326     0331  1283               	bcf	3,5	;RP0=0, select bank0
  4327     0332  1303               	bcf	3,6	;RP1=0, select bank0
  4328     0333  0846               	movf	?___almod,w
  4329     0334  3E30               	addlw	48
  4330     0335  120A  118A  255E  120A  118A  	fcall	_LCD_write_data
  4331     033A                     l2586:
  4332                           
  4333                           ;LCD_write_variable.c: 46:         digits --;
  4334     033A  3001               	movlw	1
  4335     033B  1283               	bcf	3,5	;RP0=0, select bank0
  4336     033C  1303               	bcf	3,6	;RP1=0, select bank0
  4337     033D  02DA               	subwf	LCD_write_variable@digits,f
  4338     033E                     l2588:
  4339                           
  4340                           ;LCD_write_variable.c: 47:         if(digits == 0) break;
  4341     033E  085A               	movf	LCD_write_variable@digits,w
  4342     033F  1D03               	btfss	3,2
  4343     0340  2B42               	goto	u2531
  4344     0341  2B43               	goto	u2530
  4345     0342                     u2531:
  4346     0342  2AE8               	goto	l2574
  4347     0343                     u2530:
  4348     0343                     l192:
  4349     0343  0008               	return
  4350     0344                     __end_of_LCD_write_variable:
  4351                           
  4352                           	psect	text9
  4353     0397                     __ptext9:	
  4354 ;; *************** function ___lmul *****************
  4355 ;; Defined at:
  4356 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul32.c"
  4357 ;; Parameters:    Size  Location     Type
  4358 ;;  multiplier      4    0[BANK0 ] unsigned long 
  4359 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  4360 ;; Auto vars:     Size  Location     Type
  4361 ;;  product         4    4[COMMON] unsigned long 
  4362 ;; Return value:  Size  Location     Type
  4363 ;;                  4    0[BANK0 ] unsigned long 
  4364 ;; Registers used:
  4365 ;;		wreg, status,2, status,0
  4366 ;; Tracked objects:
  4367 ;;		On entry : 0/0
  4368 ;;		On exit  : 0/0
  4369 ;;		Unchanged: 0/0
  4370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4371 ;;      Params:         0       8       0       0       0
  4372 ;;      Locals:         4       0       0       0       0
  4373 ;;      Temps:          1       0       0       0       0
  4374 ;;      Totals:         5       8       0       0       0
  4375 ;;Total ram usage:       13 bytes
  4376 ;; Hardware stack levels used: 1
  4377 ;; Hardware stack levels required when called: 1
  4378 ;; This function calls:
  4379 ;;		Nothing
  4380 ;; This function is called by:
  4381 ;;		_LCD_write_variable
  4382 ;; This function uses a non-reentrant model
  4383 ;;
  4384                           
  4385     0397                     ___lmul:	
  4386                           ;psect for function ___lmul
  4387                           
  4388     0397                     l2380:	
  4389                           ;incstack = 0
  4390                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  4391                           
  4392     0397  3000               	movlw	0
  4393     0398  00F7               	movwf	___lmul@product+3
  4394     0399  3000               	movlw	0
  4395     039A  00F6               	movwf	___lmul@product+2
  4396     039B  3000               	movlw	0
  4397     039C  00F5               	movwf	___lmul@product+1
  4398     039D  3000               	movlw	0
  4399     039E  00F4               	movwf	___lmul@product
  4400     039F                     l2382:
  4401     039F  1283               	bcf	3,5	;RP0=0, select bank0
  4402     03A0  1303               	bcf	3,6	;RP1=0, select bank0
  4403     03A1  1C46               	btfss	___lmul@multiplier,0
  4404     03A2  2BA4               	goto	u2161
  4405     03A3  2BA5               	goto	u2160
  4406     03A4                     u2161:
  4407     03A4  2BBC               	goto	l2386
  4408     03A5                     u2160:
  4409     03A5                     l2384:
  4410     03A5  084A               	movf	___lmul@multiplicand,w
  4411     03A6  07F4               	addwf	___lmul@product,f
  4412     03A7  084B               	movf	___lmul@multiplicand+1,w
  4413     03A8  1103               	clrz
  4414     03A9  1803               	skipnc
  4415     03AA  3E01               	addlw	1
  4416     03AB  1903               	skipnz
  4417     03AC  2BAE               	goto	u2171
  4418     03AD  07F5               	addwf	___lmul@product+1,f
  4419     03AE                     u2171:
  4420     03AE  084C               	movf	___lmul@multiplicand+2,w
  4421     03AF  1103               	clrz
  4422     03B0  1803               	skipnc
  4423     03B1  3E01               	addlw	1
  4424     03B2  1903               	skipnz
  4425     03B3  2BB5               	goto	u2172
  4426     03B4  07F6               	addwf	___lmul@product+2,f
  4427     03B5                     u2172:
  4428     03B5  084D               	movf	___lmul@multiplicand+3,w
  4429     03B6  1103               	clrz
  4430     03B7  1803               	skipnc
  4431     03B8  3E01               	addlw	1
  4432     03B9  1903               	skipnz
  4433     03BA  2BBC               	goto	u2173
  4434     03BB  07F7               	addwf	___lmul@product+3,f
  4435     03BC                     u2173:
  4436     03BC                     l2386:
  4437     03BC  3001               	movlw	1
  4438     03BD  00F3               	movwf	??___lmul
  4439     03BE                     u2185:
  4440     03BE  1003               	clrc
  4441     03BF  0DCA               	rlf	___lmul@multiplicand,f
  4442     03C0  0DCB               	rlf	___lmul@multiplicand+1,f
  4443     03C1  0DCC               	rlf	___lmul@multiplicand+2,f
  4444     03C2  0DCD               	rlf	___lmul@multiplicand+3,f
  4445     03C3  0BF3               	decfsz	??___lmul,f
  4446     03C4  2BBE               	goto	u2185
  4447     03C5                     l2388:
  4448     03C5  3001               	movlw	1
  4449     03C6                     u2195:
  4450     03C6  1003               	clrc
  4451     03C7  0CC9               	rrf	___lmul@multiplier+3,f
  4452     03C8  0CC8               	rrf	___lmul@multiplier+2,f
  4453     03C9  0CC7               	rrf	___lmul@multiplier+1,f
  4454     03CA  0CC6               	rrf	___lmul@multiplier,f
  4455     03CB  3EFF               	addlw	-1
  4456     03CC  1D03               	skipz
  4457     03CD  2BC6               	goto	u2195
  4458     03CE  0849               	movf	___lmul@multiplier+3,w
  4459     03CF  0448               	iorwf	___lmul@multiplier+2,w
  4460     03D0  0447               	iorwf	___lmul@multiplier+1,w
  4461     03D1  0446               	iorwf	___lmul@multiplier,w
  4462     03D2  1D03               	skipz
  4463     03D3  2BD5               	goto	u2201
  4464     03D4  2BD6               	goto	u2200
  4465     03D5                     u2201:
  4466     03D5  2B9F               	goto	l2382
  4467     03D6                     u2200:
  4468     03D6                     l2390:
  4469     03D6  0877               	movf	___lmul@product+3,w
  4470     03D7  00C9               	movwf	?___lmul+3
  4471     03D8  0876               	movf	___lmul@product+2,w
  4472     03D9  00C8               	movwf	?___lmul+2
  4473     03DA  0875               	movf	___lmul@product+1,w
  4474     03DB  00C7               	movwf	?___lmul+1
  4475     03DC  0874               	movf	___lmul@product,w
  4476     03DD  00C6               	movwf	?___lmul
  4477     03DE                     l514:
  4478     03DE  0008               	return
  4479     03DF                     __end_of___lmul:
  4480                           
  4481                           	psect	text10
  4482     0686                     __ptext10:	
  4483 ;; *************** function ___almod *****************
  4484 ;; Defined at:
  4485 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\almod.c"
  4486 ;; Parameters:    Size  Location     Type
  4487 ;;  divisor         4    0[BANK0 ] long 
  4488 ;;  dividend        4    4[BANK0 ] long 
  4489 ;; Auto vars:     Size  Location     Type
  4490 ;;  sign            1    5[COMMON] unsigned char 
  4491 ;;  counter         1    4[COMMON] unsigned char 
  4492 ;; Return value:  Size  Location     Type
  4493 ;;                  4    0[BANK0 ] long 
  4494 ;; Registers used:
  4495 ;;		wreg, status,2, status,0, btemp+1
  4496 ;; Tracked objects:
  4497 ;;		On entry : 0/0
  4498 ;;		On exit  : 0/0
  4499 ;;		Unchanged: 0/0
  4500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4501 ;;      Params:         0       8       0       0       0
  4502 ;;      Locals:         2       0       0       0       0
  4503 ;;      Temps:          1       0       0       0       0
  4504 ;;      Totals:         3       8       0       0       0
  4505 ;;Total ram usage:       11 bytes
  4506 ;; Hardware stack levels used: 1
  4507 ;; Hardware stack levels required when called: 1
  4508 ;; This function calls:
  4509 ;;		Nothing
  4510 ;; This function is called by:
  4511 ;;		_LCD_write_variable
  4512 ;;		_LCD_write_float
  4513 ;; This function uses a non-reentrant model
  4514 ;;
  4515                           
  4516     0686                     ___almod:	
  4517                           ;psect for function ___almod
  4518                           
  4519     0686                     l2436:	
  4520                           ;incstack = 0
  4521                           ; Regs used in ___almod: [wreg+status,2+status,0+btemp+1]
  4522                           
  4523     0686  01F5               	clrf	___almod@sign
  4524     0687                     l2438:
  4525     0687  1283               	bcf	3,5	;RP0=0, select bank0
  4526     0688  1303               	bcf	3,6	;RP1=0, select bank0
  4527     0689  1FCD               	btfss	___almod@dividend+3,7
  4528     068A  2E8C               	goto	u2311
  4529     068B  2E8D               	goto	u2310
  4530     068C                     u2311:
  4531     068C  2E9A               	goto	l578
  4532     068D                     u2310:
  4533     068D                     l2440:
  4534     068D  09CA               	comf	___almod@dividend,f
  4535     068E  09CB               	comf	___almod@dividend+1,f
  4536     068F  09CC               	comf	___almod@dividend+2,f
  4537     0690  09CD               	comf	___almod@dividend+3,f
  4538     0691  0ACA               	incf	___almod@dividend,f
  4539     0692  1903               	skipnz
  4540     0693  0ACB               	incf	___almod@dividend+1,f
  4541     0694  1903               	skipnz
  4542     0695  0ACC               	incf	___almod@dividend+2,f
  4543     0696  1903               	skipnz
  4544     0697  0ACD               	incf	___almod@dividend+3,f
  4545     0698  01F5               	clrf	___almod@sign
  4546     0699  0AF5               	incf	___almod@sign,f
  4547     069A                     l578:
  4548     069A  1FC9               	btfss	___almod@divisor+3,7
  4549     069B  2E9D               	goto	u2321
  4550     069C  2E9E               	goto	u2320
  4551     069D                     u2321:
  4552     069D  2EA9               	goto	l2444
  4553     069E                     u2320:
  4554     069E                     l2442:
  4555     069E  09C6               	comf	___almod@divisor,f
  4556     069F  09C7               	comf	___almod@divisor+1,f
  4557     06A0  09C8               	comf	___almod@divisor+2,f
  4558     06A1  09C9               	comf	___almod@divisor+3,f
  4559     06A2  0AC6               	incf	___almod@divisor,f
  4560     06A3  1903               	skipnz
  4561     06A4  0AC7               	incf	___almod@divisor+1,f
  4562     06A5  1903               	skipnz
  4563     06A6  0AC8               	incf	___almod@divisor+2,f
  4564     06A7  1903               	skipnz
  4565     06A8  0AC9               	incf	___almod@divisor+3,f
  4566     06A9                     l2444:
  4567     06A9  0849               	movf	___almod@divisor+3,w
  4568     06AA  0448               	iorwf	___almod@divisor+2,w
  4569     06AB  0447               	iorwf	___almod@divisor+1,w
  4570     06AC  0446               	iorwf	___almod@divisor,w
  4571     06AD  1903               	skipnz
  4572     06AE  2EB0               	goto	u2331
  4573     06AF  2EB1               	goto	u2330
  4574     06B0                     u2331:
  4575     06B0  2EF4               	goto	l2462
  4576     06B1                     u2330:
  4577     06B1                     l2446:
  4578     06B1  01F4               	clrf	___almod@counter
  4579     06B2  0AF4               	incf	___almod@counter,f
  4580     06B3  2EC1               	goto	l2452
  4581     06B4                     l2448:
  4582     06B4  3001               	movlw	1
  4583     06B5  00F3               	movwf	??___almod
  4584     06B6                     u2345:
  4585     06B6  1003               	clrc
  4586     06B7  0DC6               	rlf	___almod@divisor,f
  4587     06B8  0DC7               	rlf	___almod@divisor+1,f
  4588     06B9  0DC8               	rlf	___almod@divisor+2,f
  4589     06BA  0DC9               	rlf	___almod@divisor+3,f
  4590     06BB  0BF3               	decfsz	??___almod,f
  4591     06BC  2EB6               	goto	u2345
  4592     06BD                     l2450:
  4593     06BD  3001               	movlw	1
  4594     06BE  00FF               	movwf	btemp+1
  4595     06BF  087F               	movf	btemp+1,w
  4596     06C0  07F4               	addwf	___almod@counter,f
  4597     06C1                     l2452:
  4598     06C1  1FC9               	btfss	___almod@divisor+3,7
  4599     06C2  2EC4               	goto	u2351
  4600     06C3  2EC5               	goto	u2350
  4601     06C4                     u2351:
  4602     06C4  2EB4               	goto	l2448
  4603     06C5                     u2350:
  4604     06C5                     l2454:
  4605     06C5  0849               	movf	___almod@divisor+3,w
  4606     06C6  024D               	subwf	___almod@dividend+3,w
  4607     06C7  1D03               	skipz
  4608     06C8  2ED3               	goto	u2365
  4609     06C9  0848               	movf	___almod@divisor+2,w
  4610     06CA  024C               	subwf	___almod@dividend+2,w
  4611     06CB  1D03               	skipz
  4612     06CC  2ED3               	goto	u2365
  4613     06CD  0847               	movf	___almod@divisor+1,w
  4614     06CE  024B               	subwf	___almod@dividend+1,w
  4615     06CF  1D03               	skipz
  4616     06D0  2ED3               	goto	u2365
  4617     06D1  0846               	movf	___almod@divisor,w
  4618     06D2  024A               	subwf	___almod@dividend,w
  4619     06D3                     u2365:
  4620     06D3  1C03               	skipc
  4621     06D4  2ED6               	goto	u2361
  4622     06D5  2ED7               	goto	u2360
  4623     06D6                     u2361:
  4624     06D6  2EE5               	goto	l2458
  4625     06D7                     u2360:
  4626     06D7                     l2456:
  4627     06D7  0846               	movf	___almod@divisor,w
  4628     06D8  02CA               	subwf	___almod@dividend,f
  4629     06D9  0847               	movf	___almod@divisor+1,w
  4630     06DA  1C03               	skipc
  4631     06DB  0F47               	incfsz	___almod@divisor+1,w
  4632     06DC  02CB               	subwf	___almod@dividend+1,f
  4633     06DD  0848               	movf	___almod@divisor+2,w
  4634     06DE  1C03               	skipc
  4635     06DF  0F48               	incfsz	___almod@divisor+2,w
  4636     06E0  02CC               	subwf	___almod@dividend+2,f
  4637     06E1  0849               	movf	___almod@divisor+3,w
  4638     06E2  1C03               	skipc
  4639     06E3  0F49               	incfsz	___almod@divisor+3,w
  4640     06E4  02CD               	subwf	___almod@dividend+3,f
  4641     06E5                     l2458:
  4642     06E5  3001               	movlw	1
  4643     06E6                     u2375:
  4644     06E6  1003               	clrc
  4645     06E7  0CC9               	rrf	___almod@divisor+3,f
  4646     06E8  0CC8               	rrf	___almod@divisor+2,f
  4647     06E9  0CC7               	rrf	___almod@divisor+1,f
  4648     06EA  0CC6               	rrf	___almod@divisor,f
  4649     06EB  3EFF               	addlw	-1
  4650     06EC  1D03               	skipz
  4651     06ED  2EE6               	goto	u2375
  4652     06EE                     l2460:
  4653     06EE  3001               	movlw	1
  4654     06EF  02F4               	subwf	___almod@counter,f
  4655     06F0  1D03               	btfss	3,2
  4656     06F1  2EF3               	goto	u2381
  4657     06F2  2EF4               	goto	u2380
  4658     06F3                     u2381:
  4659     06F3  2EC5               	goto	l2454
  4660     06F4                     u2380:
  4661     06F4                     l2462:
  4662     06F4  0875               	movf	___almod@sign,w
  4663     06F5  1903               	btfsc	3,2
  4664     06F6  2EF8               	goto	u2391
  4665     06F7  2EF9               	goto	u2390
  4666     06F8                     u2391:
  4667     06F8  2F04               	goto	l2466
  4668     06F9                     u2390:
  4669     06F9                     l2464:
  4670     06F9  09CA               	comf	___almod@dividend,f
  4671     06FA  09CB               	comf	___almod@dividend+1,f
  4672     06FB  09CC               	comf	___almod@dividend+2,f
  4673     06FC  09CD               	comf	___almod@dividend+3,f
  4674     06FD  0ACA               	incf	___almod@dividend,f
  4675     06FE  1903               	skipnz
  4676     06FF  0ACB               	incf	___almod@dividend+1,f
  4677     0700  1903               	skipnz
  4678     0701  0ACC               	incf	___almod@dividend+2,f
  4679     0702  1903               	skipnz
  4680     0703  0ACD               	incf	___almod@dividend+3,f
  4681     0704                     l2466:
  4682     0704  084D               	movf	___almod@dividend+3,w
  4683     0705  00C9               	movwf	?___almod+3
  4684     0706  084C               	movf	___almod@dividend+2,w
  4685     0707  00C8               	movwf	?___almod+2
  4686     0708  084B               	movf	___almod@dividend+1,w
  4687     0709  00C7               	movwf	?___almod+1
  4688     070A  084A               	movf	___almod@dividend,w
  4689     070B  00C6               	movwf	?___almod
  4690     070C                     l588:
  4691     070C  0008               	return
  4692     070D                     __end_of___almod:
  4693                           
  4694                           	psect	text11
  4695     04C1                     __ptext11:	
  4696 ;; *************** function ___aldiv *****************
  4697 ;; Defined at:
  4698 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\aldiv.c"
  4699 ;; Parameters:    Size  Location     Type
  4700 ;;  divisor         4    0[BANK0 ] long 
  4701 ;;  dividend        4    4[BANK0 ] long 
  4702 ;; Auto vars:     Size  Location     Type
  4703 ;;  quotient        4   10[BANK0 ] long 
  4704 ;;  sign            1    9[BANK0 ] unsigned char 
  4705 ;;  counter         1    8[BANK0 ] unsigned char 
  4706 ;; Return value:  Size  Location     Type
  4707 ;;                  4    0[BANK0 ] long 
  4708 ;; Registers used:
  4709 ;;		wreg, status,2, status,0, btemp+1
  4710 ;; Tracked objects:
  4711 ;;		On entry : 0/0
  4712 ;;		On exit  : 0/0
  4713 ;;		Unchanged: 0/0
  4714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4715 ;;      Params:         0       8       0       0       0
  4716 ;;      Locals:         0       6       0       0       0
  4717 ;;      Temps:          1       0       0       0       0
  4718 ;;      Totals:         1      14       0       0       0
  4719 ;;Total ram usage:       15 bytes
  4720 ;; Hardware stack levels used: 1
  4721 ;; Hardware stack levels required when called: 1
  4722 ;; This function calls:
  4723 ;;		Nothing
  4724 ;; This function is called by:
  4725 ;;		_LCD_write_variable
  4726 ;; This function uses a non-reentrant model
  4727 ;;
  4728                           
  4729     04C1                     ___aldiv:	
  4730                           ;psect for function ___aldiv
  4731                           
  4732     04C1                     l2394:	
  4733                           ;incstack = 0
  4734                           ; Regs used in ___aldiv: [wreg+status,2+status,0+btemp+1]
  4735                           
  4736     04C1  1283               	bcf	3,5	;RP0=0, select bank0
  4737     04C2  1303               	bcf	3,6	;RP1=0, select bank0
  4738     04C3  01CF               	clrf	___aldiv@sign
  4739     04C4                     l2396:
  4740     04C4  1FC9               	btfss	___aldiv@divisor+3,7
  4741     04C5  2CC7               	goto	u2211
  4742     04C6  2CC8               	goto	u2210
  4743     04C7                     u2211:
  4744     04C7  2CD5               	goto	l565
  4745     04C8                     u2210:
  4746     04C8                     l2398:
  4747     04C8  09C6               	comf	___aldiv@divisor,f
  4748     04C9  09C7               	comf	___aldiv@divisor+1,f
  4749     04CA  09C8               	comf	___aldiv@divisor+2,f
  4750     04CB  09C9               	comf	___aldiv@divisor+3,f
  4751     04CC  0AC6               	incf	___aldiv@divisor,f
  4752     04CD  1903               	skipnz
  4753     04CE  0AC7               	incf	___aldiv@divisor+1,f
  4754     04CF  1903               	skipnz
  4755     04D0  0AC8               	incf	___aldiv@divisor+2,f
  4756     04D1  1903               	skipnz
  4757     04D2  0AC9               	incf	___aldiv@divisor+3,f
  4758     04D3  01CF               	clrf	___aldiv@sign
  4759     04D4  0ACF               	incf	___aldiv@sign,f
  4760     04D5                     l565:
  4761     04D5  1FCD               	btfss	___aldiv@dividend+3,7
  4762     04D6  2CD8               	goto	u2221
  4763     04D7  2CD9               	goto	u2220
  4764     04D8                     u2221:
  4765     04D8  2CE8               	goto	l2404
  4766     04D9                     u2220:
  4767     04D9                     l2400:
  4768     04D9  09CA               	comf	___aldiv@dividend,f
  4769     04DA  09CB               	comf	___aldiv@dividend+1,f
  4770     04DB  09CC               	comf	___aldiv@dividend+2,f
  4771     04DC  09CD               	comf	___aldiv@dividend+3,f
  4772     04DD  0ACA               	incf	___aldiv@dividend,f
  4773     04DE  1903               	skipnz
  4774     04DF  0ACB               	incf	___aldiv@dividend+1,f
  4775     04E0  1903               	skipnz
  4776     04E1  0ACC               	incf	___aldiv@dividend+2,f
  4777     04E2  1903               	skipnz
  4778     04E3  0ACD               	incf	___aldiv@dividend+3,f
  4779     04E4                     l2402:
  4780     04E4  3001               	movlw	1
  4781     04E5  00FF               	movwf	btemp+1
  4782     04E6  087F               	movf	btemp+1,w
  4783     04E7  06CF               	xorwf	___aldiv@sign,f
  4784     04E8                     l2404:
  4785     04E8  3000               	movlw	0
  4786     04E9  00D3               	movwf	___aldiv@quotient+3
  4787     04EA  3000               	movlw	0
  4788     04EB  00D2               	movwf	___aldiv@quotient+2
  4789     04EC  3000               	movlw	0
  4790     04ED  00D1               	movwf	___aldiv@quotient+1
  4791     04EE  3000               	movlw	0
  4792     04EF  00D0               	movwf	___aldiv@quotient
  4793     04F0                     l2406:
  4794     04F0  0849               	movf	___aldiv@divisor+3,w
  4795     04F1  0448               	iorwf	___aldiv@divisor+2,w
  4796     04F2  0447               	iorwf	___aldiv@divisor+1,w
  4797     04F3  0446               	iorwf	___aldiv@divisor,w
  4798     04F4  1903               	skipnz
  4799     04F5  2CF7               	goto	u2231
  4800     04F6  2CF8               	goto	u2230
  4801     04F7                     u2231:
  4802     04F7  2D45               	goto	l2428
  4803     04F8                     u2230:
  4804     04F8                     l2408:
  4805     04F8  01CE               	clrf	___aldiv@counter
  4806     04F9  0ACE               	incf	___aldiv@counter,f
  4807     04FA  2D08               	goto	l2414
  4808     04FB                     l2410:
  4809     04FB  3001               	movlw	1
  4810     04FC  00F3               	movwf	??___aldiv
  4811     04FD                     u2245:
  4812     04FD  1003               	clrc
  4813     04FE  0DC6               	rlf	___aldiv@divisor,f
  4814     04FF  0DC7               	rlf	___aldiv@divisor+1,f
  4815     0500  0DC8               	rlf	___aldiv@divisor+2,f
  4816     0501  0DC9               	rlf	___aldiv@divisor+3,f
  4817     0502  0BF3               	decfsz	??___aldiv,f
  4818     0503  2CFD               	goto	u2245
  4819     0504                     l2412:
  4820     0504  3001               	movlw	1
  4821     0505  00FF               	movwf	btemp+1
  4822     0506  087F               	movf	btemp+1,w
  4823     0507  07CE               	addwf	___aldiv@counter,f
  4824     0508                     l2414:
  4825     0508  1FC9               	btfss	___aldiv@divisor+3,7
  4826     0509  2D0B               	goto	u2251
  4827     050A  2D0C               	goto	u2250
  4828     050B                     u2251:
  4829     050B  2CFB               	goto	l2410
  4830     050C                     u2250:
  4831     050C                     l2416:
  4832     050C  3001               	movlw	1
  4833     050D  00F3               	movwf	??___aldiv
  4834     050E                     u2265:
  4835     050E  1003               	clrc
  4836     050F  0DD0               	rlf	___aldiv@quotient,f
  4837     0510  0DD1               	rlf	___aldiv@quotient+1,f
  4838     0511  0DD2               	rlf	___aldiv@quotient+2,f
  4839     0512  0DD3               	rlf	___aldiv@quotient+3,f
  4840     0513  0BF3               	decfsz	??___aldiv,f
  4841     0514  2D0E               	goto	u2265
  4842     0515                     l2418:
  4843     0515  0849               	movf	___aldiv@divisor+3,w
  4844     0516  024D               	subwf	___aldiv@dividend+3,w
  4845     0517  1D03               	skipz
  4846     0518  2D23               	goto	u2275
  4847     0519  0848               	movf	___aldiv@divisor+2,w
  4848     051A  024C               	subwf	___aldiv@dividend+2,w
  4849     051B  1D03               	skipz
  4850     051C  2D23               	goto	u2275
  4851     051D  0847               	movf	___aldiv@divisor+1,w
  4852     051E  024B               	subwf	___aldiv@dividend+1,w
  4853     051F  1D03               	skipz
  4854     0520  2D23               	goto	u2275
  4855     0521  0846               	movf	___aldiv@divisor,w
  4856     0522  024A               	subwf	___aldiv@dividend,w
  4857     0523                     u2275:
  4858     0523  1C03               	skipc
  4859     0524  2D26               	goto	u2271
  4860     0525  2D27               	goto	u2270
  4861     0526                     u2271:
  4862     0526  2D36               	goto	l2424
  4863     0527                     u2270:
  4864     0527                     l2420:
  4865     0527  0846               	movf	___aldiv@divisor,w
  4866     0528  02CA               	subwf	___aldiv@dividend,f
  4867     0529  0847               	movf	___aldiv@divisor+1,w
  4868     052A  1C03               	skipc
  4869     052B  0F47               	incfsz	___aldiv@divisor+1,w
  4870     052C  02CB               	subwf	___aldiv@dividend+1,f
  4871     052D  0848               	movf	___aldiv@divisor+2,w
  4872     052E  1C03               	skipc
  4873     052F  0F48               	incfsz	___aldiv@divisor+2,w
  4874     0530  02CC               	subwf	___aldiv@dividend+2,f
  4875     0531  0849               	movf	___aldiv@divisor+3,w
  4876     0532  1C03               	skipc
  4877     0533  0F49               	incfsz	___aldiv@divisor+3,w
  4878     0534  02CD               	subwf	___aldiv@dividend+3,f
  4879     0535                     l2422:
  4880     0535  1450               	bsf	___aldiv@quotient,0
  4881     0536                     l2424:
  4882     0536  3001               	movlw	1
  4883     0537                     u2285:
  4884     0537  1003               	clrc
  4885     0538  0CC9               	rrf	___aldiv@divisor+3,f
  4886     0539  0CC8               	rrf	___aldiv@divisor+2,f
  4887     053A  0CC7               	rrf	___aldiv@divisor+1,f
  4888     053B  0CC6               	rrf	___aldiv@divisor,f
  4889     053C  3EFF               	addlw	-1
  4890     053D  1D03               	skipz
  4891     053E  2D37               	goto	u2285
  4892     053F                     l2426:
  4893     053F  3001               	movlw	1
  4894     0540  02CE               	subwf	___aldiv@counter,f
  4895     0541  1D03               	btfss	3,2
  4896     0542  2D44               	goto	u2291
  4897     0543  2D45               	goto	u2290
  4898     0544                     u2291:
  4899     0544  2D0C               	goto	l2416
  4900     0545                     u2290:
  4901     0545                     l2428:
  4902     0545  084F               	movf	___aldiv@sign,w
  4903     0546  1903               	btfsc	3,2
  4904     0547  2D49               	goto	u2301
  4905     0548  2D4A               	goto	u2300
  4906     0549                     u2301:
  4907     0549  2D55               	goto	l2432
  4908     054A                     u2300:
  4909     054A                     l2430:
  4910     054A  09D0               	comf	___aldiv@quotient,f
  4911     054B  09D1               	comf	___aldiv@quotient+1,f
  4912     054C  09D2               	comf	___aldiv@quotient+2,f
  4913     054D  09D3               	comf	___aldiv@quotient+3,f
  4914     054E  0AD0               	incf	___aldiv@quotient,f
  4915     054F  1903               	skipnz
  4916     0550  0AD1               	incf	___aldiv@quotient+1,f
  4917     0551  1903               	skipnz
  4918     0552  0AD2               	incf	___aldiv@quotient+2,f
  4919     0553  1903               	skipnz
  4920     0554  0AD3               	incf	___aldiv@quotient+3,f
  4921     0555                     l2432:
  4922     0555  0853               	movf	___aldiv@quotient+3,w
  4923     0556  00C9               	movwf	?___aldiv+3
  4924     0557  0852               	movf	___aldiv@quotient+2,w
  4925     0558  00C8               	movwf	?___aldiv+2
  4926     0559  0851               	movf	___aldiv@quotient+1,w
  4927     055A  00C7               	movwf	?___aldiv+1
  4928     055B  0850               	movf	___aldiv@quotient,w
  4929     055C  00C6               	movwf	?___aldiv
  4930     055D                     l575:
  4931     055D  0008               	return
  4932     055E                     __end_of___aldiv:
  4933                           
  4934                           	psect	text12
  4935     0F68                     __ptext12:	
  4936 ;; *************** function _LCD_write_string *****************
  4937 ;; Defined at:
  4938 ;;		line 9 in file "LCD_write_string.c"
  4939 ;; Parameters:    Size  Location     Type
  4940 ;;  string          2    0[BANK0 ] PTR unsigned char 
  4941 ;;		 -> STR_13(12), STR_12(12), STR_11(12), STR_10(12), 
  4942 ;;		 -> STR_8(19), STR_7(12), STR_5(8), STR_3(18), 
  4943 ;;		 -> STR_2(13), STR_1(11), StringReceive(30), 
  4944 ;; Auto vars:     Size  Location     Type
  4945 ;;  i               1    7[COMMON] unsigned char 
  4946 ;; Return value:  Size  Location     Type
  4947 ;;                  1    wreg      void 
  4948 ;; Registers used:
  4949 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4950 ;; Tracked objects:
  4951 ;;		On entry : 0/0
  4952 ;;		On exit  : 0/0
  4953 ;;		Unchanged: 0/0
  4954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4955 ;;      Params:         0       2       0       0       0
  4956 ;;      Locals:         1       0       0       0       0
  4957 ;;      Temps:          0       0       0       0       0
  4958 ;;      Totals:         1       2       0       0       0
  4959 ;;Total ram usage:        3 bytes
  4960 ;; Hardware stack levels used: 1
  4961 ;; Hardware stack levels required when called: 3
  4962 ;; This function calls:
  4963 ;;		_LCD_write_data
  4964 ;; This function is called by:
  4965 ;;		_main
  4966 ;; This function uses a non-reentrant model
  4967 ;;
  4968                           
  4969     0F68                     _LCD_write_string:	
  4970                           ;psect for function _LCD_write_string
  4971                           
  4972     0F68                     l2592:	
  4973                           ;incstack = 0
  4974                           ; Regs used in _LCD_write_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4975                           
  4976                           
  4977                           ;LCD_write_string.c: 12:     for(uint8_t i=0 ; string[i] != '\0' ; i++){
  4978     0F68  01F7               	clrf	LCD_write_string@i
  4979     0F69  2F7F               	goto	l2598
  4980     0F6A                     l2594:
  4981                           
  4982                           ;LCD_write_string.c: 13:         LCD_write_data(string[i]);
  4983     0F6A  0877               	movf	LCD_write_string@i,w
  4984     0F6B  0746               	addwf	LCD_write_string@string,w
  4985     0F6C  0084               	movwf	4
  4986     0F6D  0847               	movf	LCD_write_string@string+1,w
  4987     0F6E  1803               	skipnc
  4988     0F6F  0A47               	incf	LCD_write_string@string+1,w
  4989     0F70  00FF               	movwf	btemp+1
  4990     0F71  120A  118A  2400  120A  158A  	fcall	stringtab
  4991     0F76  120A  118A  255E  120A  158A  	fcall	_LCD_write_data
  4992     0F7B                     l2596:
  4993                           
  4994                           ;LCD_write_string.c: 14:     }
  4995     0F7B  3001               	movlw	1
  4996     0F7C  00FF               	movwf	btemp+1
  4997     0F7D  087F               	movf	btemp+1,w
  4998     0F7E  07F7               	addwf	LCD_write_string@i,f
  4999     0F7F                     l2598:
  5000     0F7F  0877               	movf	LCD_write_string@i,w
  5001     0F80  1283               	bcf	3,5	;RP0=0, select bank0
  5002     0F81  1303               	bcf	3,6	;RP1=0, select bank0
  5003     0F82  0746               	addwf	LCD_write_string@string,w
  5004     0F83  0084               	movwf	4
  5005     0F84  0847               	movf	LCD_write_string@string+1,w
  5006     0F85  1803               	skipnc
  5007     0F86  0A47               	incf	LCD_write_string@string+1,w
  5008     0F87  00FF               	movwf	btemp+1
  5009     0F88  120A  118A  2400  120A  158A  	fcall	stringtab
  5010     0F8D  3A00               	xorlw	0
  5011     0F8E  1D03               	skipz
  5012     0F8F  2F91               	goto	u2541
  5013     0F90  2F92               	goto	u2540
  5014     0F91                     u2541:
  5015     0F91  2F6A               	goto	l2594
  5016     0F92                     u2540:
  5017     0F92                     l171:
  5018     0F92  0008               	return
  5019     0F93                     __end_of_LCD_write_string:
  5020                           
  5021                           	psect	text13
  5022     055E                     __ptext13:	
  5023 ;; *************** function _LCD_write_data *****************
  5024 ;; Defined at:
  5025 ;;		line 9 in file "LCD_write_data.c"
  5026 ;; Parameters:    Size  Location     Type
  5027 ;;  data            1    wreg     unsigned char 
  5028 ;; Auto vars:     Size  Location     Type
  5029 ;;  data            1    6[COMMON] unsigned char 
  5030 ;; Return value:  Size  Location     Type
  5031 ;;                  1    wreg      void 
  5032 ;; Registers used:
  5033 ;;		wreg, status,2, status,0, pclath, cstack
  5034 ;; Tracked objects:
  5035 ;;		On entry : 0/0
  5036 ;;		On exit  : 0/0
  5037 ;;		Unchanged: 0/0
  5038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5039 ;;      Params:         0       0       0       0       0
  5040 ;;      Locals:         1       0       0       0       0
  5041 ;;      Temps:          2       0       0       0       0
  5042 ;;      Totals:         3       0       0       0       0
  5043 ;;Total ram usage:        3 bytes
  5044 ;; Hardware stack levels used: 1
  5045 ;; Hardware stack levels required when called: 2
  5046 ;; This function calls:
  5047 ;;		_LCD_pulse_clock
  5048 ;; This function is called by:
  5049 ;;		_LCD_write_string
  5050 ;;		_LCD_write_variable
  5051 ;;		_LCD_add_character
  5052 ;;		_LCD_write_char
  5053 ;;		_LCD_write_float
  5054 ;; This function uses a non-reentrant model
  5055 ;;
  5056                           
  5057     055E                     _LCD_write_data:	
  5058                           ;psect for function _LCD_write_data
  5059                           
  5060                           
  5061                           ;incstack = 0
  5062                           ; Regs used in _LCD_write_data: [wreg+status,2+status,0+pclath+cstack]
  5063                           ;LCD_write_data@data stored from wreg
  5064     055E  00F6               	movwf	LCD_write_data@data
  5065     055F                     l2358:
  5066                           
  5067                           ;LCD_write_data.c: 11:     PORTDbits.RD2 = 1;
  5068     055F  1283               	bcf	3,5	;RP0=0, select bank0
  5069     0560  1303               	bcf	3,6	;RP1=0, select bank0
  5070     0561  1508               	bsf	8,2	;volatile
  5071     0562                     l2360:
  5072                           
  5073                           ;LCD_write_data.c: 14:     PORTDbits.RD7 = (data & 0b10000000) >> 7;
  5074     0562  0876               	movf	LCD_write_data@data,w
  5075     0563  00F4               	movwf	??_LCD_write_data
  5076     0564  3007               	movlw	7
  5077     0565                     u2105:
  5078     0565  1003               	clrc
  5079     0566  0CF4               	rrf	??_LCD_write_data,f
  5080     0567  3EFF               	addlw	-1
  5081     0568  1D03               	skipz
  5082     0569  2D65               	goto	u2105
  5083     056A  0874               	movf	??_LCD_write_data,w
  5084     056B  3901               	andlw	1
  5085     056C  00F5               	movwf	??_LCD_write_data+1
  5086     056D  0CF5               	rrf	??_LCD_write_data+1,f
  5087     056E  0CF5               	rrf	??_LCD_write_data+1,f
  5088     056F  0808               	movf	8,w	;volatile
  5089     0570  0675               	xorwf	??_LCD_write_data+1,w
  5090     0571  397F               	andlw	-129
  5091     0572  0675               	xorwf	??_LCD_write_data+1,w
  5092     0573  0088               	movwf	8	;volatile
  5093                           
  5094                           ;LCD_write_data.c: 15:     PORTDbits.RD6 = (data & 0b01000000) >> 6;
  5095     0574  0876               	movf	LCD_write_data@data,w
  5096     0575  00F4               	movwf	??_LCD_write_data
  5097     0576  3006               	movlw	6
  5098     0577                     u2115:
  5099     0577  1003               	clrc
  5100     0578  0CF4               	rrf	??_LCD_write_data,f
  5101     0579  3EFF               	addlw	-1
  5102     057A  1D03               	skipz
  5103     057B  2D77               	goto	u2115
  5104     057C  0874               	movf	??_LCD_write_data,w
  5105     057D  3901               	andlw	1
  5106     057E  00F5               	movwf	??_LCD_write_data+1
  5107     057F  0EF5               	swapf	??_LCD_write_data+1,f
  5108     0580  0DF5               	rlf	??_LCD_write_data+1,f
  5109     0581  0DF5               	rlf	??_LCD_write_data+1,f
  5110     0582  0808               	movf	8,w	;volatile
  5111     0583  0675               	xorwf	??_LCD_write_data+1,w
  5112     0584  39BF               	andlw	-65
  5113     0585  0675               	xorwf	??_LCD_write_data+1,w
  5114     0586  0088               	movwf	8	;volatile
  5115                           
  5116                           ;LCD_write_data.c: 16:     PORTDbits.RD5 = (data & 0b00100000) >> 5;
  5117     0587  0876               	movf	LCD_write_data@data,w
  5118     0588  00F4               	movwf	??_LCD_write_data
  5119     0589  3005               	movlw	5
  5120     058A                     u2125:
  5121     058A  1003               	clrc
  5122     058B  0CF4               	rrf	??_LCD_write_data,f
  5123     058C  3EFF               	addlw	-1
  5124     058D  1D03               	skipz
  5125     058E  2D8A               	goto	u2125
  5126     058F  0874               	movf	??_LCD_write_data,w
  5127     0590  3901               	andlw	1
  5128     0591  00F5               	movwf	??_LCD_write_data+1
  5129     0592  0EF5               	swapf	??_LCD_write_data+1,f
  5130     0593  0DF5               	rlf	??_LCD_write_data+1,f
  5131     0594  0808               	movf	8,w	;volatile
  5132     0595  0675               	xorwf	??_LCD_write_data+1,w
  5133     0596  39DF               	andlw	-33
  5134     0597  0675               	xorwf	??_LCD_write_data+1,w
  5135     0598  0088               	movwf	8	;volatile
  5136                           
  5137                           ;LCD_write_data.c: 17:     PORTDbits.RD4 = (data & 0b00010000) >> 4;
  5138     0599  0876               	movf	LCD_write_data@data,w
  5139     059A  00F4               	movwf	??_LCD_write_data
  5140     059B  3004               	movlw	4
  5141     059C                     u2135:
  5142     059C  1003               	clrc
  5143     059D  0CF4               	rrf	??_LCD_write_data,f
  5144     059E  3EFF               	addlw	-1
  5145     059F  1D03               	skipz
  5146     05A0  2D9C               	goto	u2135
  5147     05A1  0874               	movf	??_LCD_write_data,w
  5148     05A2  3901               	andlw	1
  5149     05A3  00F5               	movwf	??_LCD_write_data+1
  5150     05A4  0EF5               	swapf	??_LCD_write_data+1,f
  5151     05A5  0808               	movf	8,w	;volatile
  5152     05A6  0675               	xorwf	??_LCD_write_data+1,w
  5153     05A7  39EF               	andlw	-17
  5154     05A8  0675               	xorwf	??_LCD_write_data+1,w
  5155     05A9  0088               	movwf	8	;volatile
  5156     05AA                     l2362:
  5157                           
  5158                           ;LCD_write_data.c: 20:     LCD_pulse_clock();
  5159     05AA  120A  158A  26B3  120A  118A  	fcall	_LCD_pulse_clock
  5160     05AF                     l2364:
  5161                           
  5162                           ;LCD_write_data.c: 23:     PORTDbits.RD7 = (data & 0b00001000) >> 3;
  5163     05AF  0876               	movf	LCD_write_data@data,w
  5164     05B0  00F4               	movwf	??_LCD_write_data
  5165     05B1  3003               	movlw	3
  5166     05B2                     u2145:
  5167     05B2  1003               	clrc
  5168     05B3  0CF4               	rrf	??_LCD_write_data,f
  5169     05B4  3EFF               	addlw	-1
  5170     05B5  1D03               	skipz
  5171     05B6  2DB2               	goto	u2145
  5172     05B7  0874               	movf	??_LCD_write_data,w
  5173     05B8  3901               	andlw	1
  5174     05B9  00F5               	movwf	??_LCD_write_data+1
  5175     05BA  0CF5               	rrf	??_LCD_write_data+1,f
  5176     05BB  0CF5               	rrf	??_LCD_write_data+1,f
  5177     05BC  1283               	bcf	3,5	;RP0=0, select bank0
  5178     05BD  1303               	bcf	3,6	;RP1=0, select bank0
  5179     05BE  0808               	movf	8,w	;volatile
  5180     05BF  0675               	xorwf	??_LCD_write_data+1,w
  5181     05C0  397F               	andlw	-129
  5182     05C1  0675               	xorwf	??_LCD_write_data+1,w
  5183     05C2  0088               	movwf	8	;volatile
  5184     05C3                     l2366:
  5185                           
  5186                           ;LCD_write_data.c: 24:     PORTDbits.RD6 = (data & 0b00000100) >> 2;
  5187     05C3  0876               	movf	LCD_write_data@data,w
  5188     05C4  00F4               	movwf	??_LCD_write_data
  5189     05C5  3002               	movlw	2
  5190     05C6                     u2155:
  5191     05C6  1003               	clrc
  5192     05C7  0CF4               	rrf	??_LCD_write_data,f
  5193     05C8  3EFF               	addlw	-1
  5194     05C9  1D03               	skipz
  5195     05CA  2DC6               	goto	u2155
  5196     05CB  0874               	movf	??_LCD_write_data,w
  5197     05CC  3901               	andlw	1
  5198     05CD  00F5               	movwf	??_LCD_write_data+1
  5199     05CE  0EF5               	swapf	??_LCD_write_data+1,f
  5200     05CF  0DF5               	rlf	??_LCD_write_data+1,f
  5201     05D0  0DF5               	rlf	??_LCD_write_data+1,f
  5202     05D1  0808               	movf	8,w	;volatile
  5203     05D2  0675               	xorwf	??_LCD_write_data+1,w
  5204     05D3  39BF               	andlw	-65
  5205     05D4  0675               	xorwf	??_LCD_write_data+1,w
  5206     05D5  0088               	movwf	8	;volatile
  5207     05D6                     l2368:
  5208                           
  5209                           ;LCD_write_data.c: 25:     PORTDbits.RD5 = (data & 0b00000010) >> 1;
  5210     05D6  0876               	movf	LCD_write_data@data,w
  5211     05D7  00F4               	movwf	??_LCD_write_data
  5212     05D8  1003               	clrc
  5213     05D9  0C74               	rrf	??_LCD_write_data,w
  5214     05DA  3901               	andlw	1
  5215     05DB  00F5               	movwf	??_LCD_write_data+1
  5216     05DC  0EF5               	swapf	??_LCD_write_data+1,f
  5217     05DD  0DF5               	rlf	??_LCD_write_data+1,f
  5218     05DE  0808               	movf	8,w	;volatile
  5219     05DF  0675               	xorwf	??_LCD_write_data+1,w
  5220     05E0  39DF               	andlw	-33
  5221     05E1  0675               	xorwf	??_LCD_write_data+1,w
  5222     05E2  0088               	movwf	8	;volatile
  5223     05E3                     l2370:
  5224                           
  5225                           ;LCD_write_data.c: 26:     PORTDbits.RD4 = (data & 0b00000001) ;
  5226     05E3  0876               	movf	LCD_write_data@data,w
  5227     05E4  3901               	andlw	1
  5228     05E5  00F4               	movwf	??_LCD_write_data
  5229     05E6  0EF4               	swapf	??_LCD_write_data,f
  5230     05E7  0808               	movf	8,w	;volatile
  5231     05E8  0674               	xorwf	??_LCD_write_data,w
  5232     05E9  39EF               	andlw	-17
  5233     05EA  0674               	xorwf	??_LCD_write_data,w
  5234     05EB  0088               	movwf	8	;volatile
  5235     05EC                     l2372:
  5236                           
  5237                           ;LCD_write_data.c: 29:     LCD_pulse_clock();
  5238     05EC  120A  158A  26B3  120A  118A  	fcall	_LCD_pulse_clock
  5239     05F1                     l146:
  5240     05F1  0008               	return
  5241     05F2                     __end_of_LCD_write_data:
  5242                           
  5243                           	psect	text14
  5244     070D                     __ptext14:	
  5245 ;; *************** function _LCD_init *****************
  5246 ;; Defined at:
  5247 ;;		line 18 in file "LCD_init.c"
  5248 ;; Parameters:    Size  Location     Type
  5249 ;;		None
  5250 ;; Auto vars:     Size  Location     Type
  5251 ;;		None
  5252 ;; Return value:  Size  Location     Type
  5253 ;;                  1    wreg      void 
  5254 ;; Registers used:
  5255 ;;		wreg, status,2, status,0, pclath, cstack
  5256 ;; Tracked objects:
  5257 ;;		On entry : 0/0
  5258 ;;		On exit  : 0/0
  5259 ;;		Unchanged: 0/0
  5260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5261 ;;      Params:         0       0       0       0       0
  5262 ;;      Locals:         0       0       0       0       0
  5263 ;;      Temps:          0       2       0       0       0
  5264 ;;      Totals:         0       2       0       0       0
  5265 ;;Total ram usage:        2 bytes
  5266 ;; Hardware stack levels used: 1
  5267 ;; Hardware stack levels required when called: 4
  5268 ;; This function calls:
  5269 ;;		_LCD_clear
  5270 ;;		_LCD_pulse_clock
  5271 ;;		_LCD_write_command
  5272 ;; This function is called by:
  5273 ;;		_main
  5274 ;; This function uses a non-reentrant model
  5275 ;;
  5276                           
  5277     070D                     _LCD_init:	
  5278                           ;psect for function _LCD_init
  5279                           
  5280     070D                     l2510:	
  5281                           ;incstack = 0
  5282                           ; Regs used in _LCD_init: [wreg+status,2+status,0+pclath+cstack]
  5283                           
  5284                           
  5285                           ;LCD_init.c: 21:     TRISDbits.TRISD2 = 0; PORTDbits.RD2 = 0;
  5286     070D  1683               	bsf	3,5	;RP0=1, select bank1
  5287     070E  1303               	bcf	3,6	;RP1=0, select bank1
  5288     070F  1108               	bcf	8,2	;volatile
  5289     0710  1283               	bcf	3,5	;RP0=0, select bank0
  5290     0711  1303               	bcf	3,6	;RP1=0, select bank0
  5291     0712  1108               	bcf	8,2	;volatile
  5292                           
  5293                           ;LCD_init.c: 22:     TRISDbits.TRISD3 = 0; PORTDbits.RD3 = 0;
  5294     0713  1683               	bsf	3,5	;RP0=1, select bank1
  5295     0714  1303               	bcf	3,6	;RP1=0, select bank1
  5296     0715  1188               	bcf	8,3	;volatile
  5297     0716  1283               	bcf	3,5	;RP0=0, select bank0
  5298     0717  1303               	bcf	3,6	;RP1=0, select bank0
  5299     0718  1188               	bcf	8,3	;volatile
  5300                           
  5301                           ;LCD_init.c: 23:     TRISDbits.TRISD4 = 0; PORTDbits.RD4 = 0;
  5302     0719  1683               	bsf	3,5	;RP0=1, select bank1
  5303     071A  1303               	bcf	3,6	;RP1=0, select bank1
  5304     071B  1208               	bcf	8,4	;volatile
  5305     071C  1283               	bcf	3,5	;RP0=0, select bank0
  5306     071D  1303               	bcf	3,6	;RP1=0, select bank0
  5307     071E  1208               	bcf	8,4	;volatile
  5308                           
  5309                           ;LCD_init.c: 24:     TRISDbits.TRISD5 = 0; PORTDbits.RD5 = 0;
  5310     071F  1683               	bsf	3,5	;RP0=1, select bank1
  5311     0720  1303               	bcf	3,6	;RP1=0, select bank1
  5312     0721  1288               	bcf	8,5	;volatile
  5313     0722  1283               	bcf	3,5	;RP0=0, select bank0
  5314     0723  1303               	bcf	3,6	;RP1=0, select bank0
  5315     0724  1288               	bcf	8,5	;volatile
  5316                           
  5317                           ;LCD_init.c: 25:     TRISDbits.TRISD6 = 0; PORTDbits.RD6 = 0;
  5318     0725  1683               	bsf	3,5	;RP0=1, select bank1
  5319     0726  1303               	bcf	3,6	;RP1=0, select bank1
  5320     0727  1308               	bcf	8,6	;volatile
  5321     0728  1283               	bcf	3,5	;RP0=0, select bank0
  5322     0729  1303               	bcf	3,6	;RP1=0, select bank0
  5323     072A  1308               	bcf	8,6	;volatile
  5324                           
  5325                           ;LCD_init.c: 26:     TRISDbits.TRISD7 = 0; PORTDbits.RD7 = 0;
  5326     072B  1683               	bsf	3,5	;RP0=1, select bank1
  5327     072C  1303               	bcf	3,6	;RP1=0, select bank1
  5328     072D  1388               	bcf	8,7	;volatile
  5329     072E  1283               	bcf	3,5	;RP0=0, select bank0
  5330     072F  1303               	bcf	3,6	;RP1=0, select bank0
  5331     0730  1388               	bcf	8,7	;volatile
  5332     0731                     l2512:
  5333                           
  5334                           ;LCD_init.c: 33:     _delay((unsigned long)((60)*(4000000/4000.0)));
  5335     0731  304E               	movlw	78
  5336     0732  1283               	bcf	3,5	;RP0=0, select bank0
  5337     0733  1303               	bcf	3,6	;RP1=0, select bank0
  5338     0734  00C7               	movwf	??_LCD_init+1
  5339     0735  30EA               	movlw	234
  5340     0736  00C6               	movwf	??_LCD_init
  5341     0737                     u2837:
  5342     0737  0BC6               	decfsz	??_LCD_init,f
  5343     0738  2F37               	goto	u2837
  5344     0739  0BC7               	decfsz	??_LCD_init+1,f
  5345     073A  2F37               	goto	u2837
  5346     073B  0000               	nop
  5347     073C                     l2514:
  5348                           
  5349                           ;LCD_init.c: 36:     PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; PORTDbits.
      +                          RD4 = 1;
  5350     073C  1283               	bcf	3,5	;RP0=0, select bank0
  5351     073D  1303               	bcf	3,6	;RP1=0, select bank0
  5352     073E  1388               	bcf	8,7	;volatile
  5353     073F                     l2516:
  5354     073F  1308               	bcf	8,6	;volatile
  5355     0740                     l2518:
  5356     0740  1688               	bsf	8,5	;volatile
  5357     0741                     l2520:
  5358     0741  1608               	bsf	8,4	;volatile
  5359     0742                     l2522:
  5360                           
  5361                           ;LCD_init.c: 39:     LCD_pulse_clock();
  5362     0742  120A  158A  26B3  120A  118A  	fcall	_LCD_pulse_clock
  5363     0747                     l2524:
  5364                           
  5365                           ;LCD_init.c: 42:     _delay((unsigned long)((6)*(4000000/4000.0)));
  5366     0747  3008               	movlw	8
  5367     0748  1283               	bcf	3,5	;RP0=0, select bank0
  5368     0749  1303               	bcf	3,6	;RP1=0, select bank0
  5369     074A  00C7               	movwf	??_LCD_init+1
  5370     074B  30C9               	movlw	201
  5371     074C  00C6               	movwf	??_LCD_init
  5372     074D                     u2847:
  5373     074D  0BC6               	decfsz	??_LCD_init,f
  5374     074E  2F4D               	goto	u2847
  5375     074F  0BC7               	decfsz	??_LCD_init+1,f
  5376     0750  2F4D               	goto	u2847
  5377                           
  5378                           ;LCD_init.c: 45:     LCD_pulse_clock();
  5379     0751  120A  158A  26B3  120A  118A  	fcall	_LCD_pulse_clock
  5380     0756                     l2526:
  5381                           
  5382                           ;LCD_init.c: 48:     _delay((unsigned long)((150)*(4000000/4000000.0)));
  5383     0756  3031               	movlw	49
  5384     0757  1283               	bcf	3,5	;RP0=0, select bank0
  5385     0758  1303               	bcf	3,6	;RP1=0, select bank0
  5386     0759  00C6               	movwf	??_LCD_init
  5387     075A                     u2857:
  5388     075A  0BC6               	decfsz	??_LCD_init,f
  5389     075B  2F5A               	goto	u2857
  5390     075C                     l2528:
  5391                           
  5392                           ;LCD_init.c: 51:     LCD_pulse_clock();
  5393     075C  120A  158A  26B3  120A  118A  	fcall	_LCD_pulse_clock
  5394     0761                     l2530:
  5395                           
  5396                           ;LCD_init.c: 54:     PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; PORTDbits.
      +                          RD4 = 0;
  5397     0761  1283               	bcf	3,5	;RP0=0, select bank0
  5398     0762  1303               	bcf	3,6	;RP1=0, select bank0
  5399     0763  1388               	bcf	8,7	;volatile
  5400     0764                     l2532:
  5401     0764  1308               	bcf	8,6	;volatile
  5402     0765                     l2534:
  5403     0765  1688               	bsf	8,5	;volatile
  5404     0766                     l2536:
  5405     0766  1208               	bcf	8,4	;volatile
  5406     0767                     l2538:
  5407                           
  5408                           ;LCD_init.c: 57:     LCD_pulse_clock();
  5409     0767  120A  158A  26B3  120A  118A  	fcall	_LCD_pulse_clock
  5410     076C                     l2540:
  5411                           
  5412                           ;LCD_init.c: 60:     LCD_write_command(0x28);
  5413     076C  3028               	movlw	40
  5414     076D  120A  118A  25F2  120A  118A  	fcall	_LCD_write_command
  5415     0772                     l2542:
  5416                           
  5417                           ;LCD_init.c: 61:     LCD_write_command(LCD_display_control);
  5418     0772  0879               	movf	_LCD_display_control,w
  5419     0773  120A  118A  25F2  120A  118A  	fcall	_LCD_write_command
  5420     0778                     l2544:
  5421                           
  5422                           ;LCD_init.c: 62:     LCD_write_command(LCD_entry_mode);
  5423     0778  087A               	movf	_LCD_entry_mode,w
  5424     0779  120A  118A  25F2  120A  118A  	fcall	_LCD_write_command
  5425     077E                     l2546:
  5426                           
  5427                           ;LCD_init.c: 63:     LCD_clear();
  5428     077E  120A  158A  26DF  120A  118A  	fcall	_LCD_clear
  5429     0783                     l103:
  5430     0783  0008               	return
  5431     0784                     __end_of_LCD_init:
  5432                           
  5433                           	psect	text15
  5434     0EDF                     __ptext15:	
  5435 ;; *************** function _LCD_clear *****************
  5436 ;; Defined at:
  5437 ;;		line 7 in file "LCD_clear.c"
  5438 ;; Parameters:    Size  Location     Type
  5439 ;;		None
  5440 ;; Auto vars:     Size  Location     Type
  5441 ;;		None
  5442 ;; Return value:  Size  Location     Type
  5443 ;;                  1    wreg      void 
  5444 ;; Registers used:
  5445 ;;		wreg, status,2, status,0, pclath, cstack
  5446 ;; Tracked objects:
  5447 ;;		On entry : 0/0
  5448 ;;		On exit  : 0/0
  5449 ;;		Unchanged: 0/0
  5450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5451 ;;      Params:         0       0       0       0       0
  5452 ;;      Locals:         0       0       0       0       0
  5453 ;;      Temps:          1       0       0       0       0
  5454 ;;      Totals:         1       0       0       0       0
  5455 ;;Total ram usage:        1 bytes
  5456 ;; Hardware stack levels used: 1
  5457 ;; Hardware stack levels required when called: 3
  5458 ;; This function calls:
  5459 ;;		_LCD_write_command
  5460 ;; This function is called by:
  5461 ;;		_LCD_init
  5462 ;;		_main
  5463 ;; This function uses a non-reentrant model
  5464 ;;
  5465                           
  5466     0EDF                     _LCD_clear:	
  5467                           ;psect for function _LCD_clear
  5468                           
  5469     0EDF                     l2374:	
  5470                           ;incstack = 0
  5471                           ; Regs used in _LCD_clear: [wreg+status,2+status,0+pclath+cstack]
  5472                           
  5473                           
  5474                           ;LCD_clear.c: 10:     LCD_write_command(0x01);
  5475     0EDF  3001               	movlw	1
  5476     0EE0  120A  118A  25F2  120A  158A  	fcall	_LCD_write_command
  5477     0EE5                     l2376:
  5478                           
  5479                           ;LCD_clear.c: 13:     _delay((unsigned long)(((1600 - 40))*(4000000/4000000.0)));
  5480     0EE5  30DE               	movlw	222
  5481     0EE6  00F7               	movwf	??_LCD_clear
  5482     0EE7                     u2867:
  5483     0EE7  2EE8               	nop2
  5484     0EE8  2EE9               	nop2
  5485     0EE9  0BF7               	decfsz	??_LCD_clear,f
  5486     0EEA  2EE7               	goto	u2867
  5487     0EEB  2EEC               	nop2
  5488     0EEC  2EED               	nop2
  5489     0EED  0000               	nop
  5490     0EEE                     l2378:
  5491                           
  5492                           ;LCD_clear.c: 16:     LCD_write_command(LCD_entry_mode);
  5493     0EEE  087A               	movf	_LCD_entry_mode,w
  5494     0EEF  120A  118A  25F2  120A  158A  	fcall	_LCD_write_command
  5495     0EF4                     l20:
  5496     0EF4  0008               	return
  5497     0EF5                     __end_of_LCD_clear:
  5498                           
  5499                           	psect	text16
  5500     0F93                     __ptext16:	
  5501 ;; *************** function _LCD_cursor_set *****************
  5502 ;; Defined at:
  5503 ;;		line 9 in file "LCD_cursor_set.c"
  5504 ;; Parameters:    Size  Location     Type
  5505 ;;  row             1    wreg     unsigned char 
  5506 ;;  column          1    7[COMMON] unsigned char 
  5507 ;; Auto vars:     Size  Location     Type
  5508 ;;  row             1    0[BANK0 ] unsigned char 
  5509 ;; Return value:  Size  Location     Type
  5510 ;;                  1    wreg      void 
  5511 ;; Registers used:
  5512 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5513 ;; Tracked objects:
  5514 ;;		On entry : 0/0
  5515 ;;		On exit  : 0/0
  5516 ;;		Unchanged: 0/0
  5517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5518 ;;      Params:         1       0       0       0       0
  5519 ;;      Locals:         0       1       0       0       0
  5520 ;;      Temps:          0       0       0       0       0
  5521 ;;      Totals:         1       1       0       0       0
  5522 ;;Total ram usage:        2 bytes
  5523 ;; Hardware stack levels used: 1
  5524 ;; Hardware stack levels required when called: 3
  5525 ;; This function calls:
  5526 ;;		_LCD_write_command
  5527 ;; This function is called by:
  5528 ;;		_main
  5529 ;;		_LCD_add_character
  5530 ;; This function uses a non-reentrant model
  5531 ;;
  5532                           
  5533     0F93                     _LCD_cursor_set:	
  5534                           ;psect for function _LCD_cursor_set
  5535                           
  5536                           
  5537                           ;incstack = 0
  5538                           ; Regs used in _LCD_cursor_set: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5539                           ;LCD_cursor_set@row stored from wreg
  5540     0F93  1283               	bcf	3,5	;RP0=0, select bank0
  5541     0F94  1303               	bcf	3,6	;RP1=0, select bank0
  5542     0F95  00C6               	movwf	LCD_cursor_set@row
  5543     0F96                     l2492:
  5544                           
  5545                           ;LCD_cursor_set.c: 12:     if(row == 1) column += (0x80 - 1);
  5546     0F96  0346               	decf	LCD_cursor_set@row,w
  5547     0F97  1D03               	btfss	3,2
  5548     0F98  2F9A               	goto	u2451
  5549     0F99  2F9B               	goto	u2450
  5550     0F9A                     u2451:
  5551     0F9A  2F9F               	goto	l2496
  5552     0F9B                     u2450:
  5553     0F9B                     l2494:
  5554     0F9B  307F               	movlw	127
  5555     0F9C  00FF               	movwf	btemp+1
  5556     0F9D  087F               	movf	btemp+1,w
  5557     0F9E  07F7               	addwf	LCD_cursor_set@column,f
  5558     0F9F                     l2496:
  5559                           
  5560                           ;LCD_cursor_set.c: 13:     if(row == 2) column += (0xC0 - 1);
  5561     0F9F  3002               	movlw	2
  5562     0FA0  0646               	xorwf	LCD_cursor_set@row,w
  5563     0FA1  1D03               	btfss	3,2
  5564     0FA2  2FA4               	goto	u2461
  5565     0FA3  2FA5               	goto	u2460
  5566     0FA4                     u2461:
  5567     0FA4  2FA9               	goto	l2500
  5568     0FA5                     u2460:
  5569     0FA5                     l2498:
  5570     0FA5  30BF               	movlw	191
  5571     0FA6  00FF               	movwf	btemp+1
  5572     0FA7  087F               	movf	btemp+1,w
  5573     0FA8  07F7               	addwf	LCD_cursor_set@column,f
  5574     0FA9                     l2500:
  5575                           
  5576                           ;LCD_cursor_set.c: 14:     if(row == 3) column += (0x80 + 19);
  5577     0FA9  3003               	movlw	3
  5578     0FAA  0646               	xorwf	LCD_cursor_set@row,w
  5579     0FAB  1D03               	btfss	3,2
  5580     0FAC  2FAE               	goto	u2471
  5581     0FAD  2FAF               	goto	u2470
  5582     0FAE                     u2471:
  5583     0FAE  2FB3               	goto	l2504
  5584     0FAF                     u2470:
  5585     0FAF                     l2502:
  5586     0FAF  3093               	movlw	147
  5587     0FB0  00FF               	movwf	btemp+1
  5588     0FB1  087F               	movf	btemp+1,w
  5589     0FB2  07F7               	addwf	LCD_cursor_set@column,f
  5590     0FB3                     l2504:
  5591                           
  5592                           ;LCD_cursor_set.c: 15:     if(row == 4) column += (0xC0 + 19);
  5593     0FB3  3004               	movlw	4
  5594     0FB4  0646               	xorwf	LCD_cursor_set@row,w
  5595     0FB5  1D03               	btfss	3,2
  5596     0FB6  2FB8               	goto	u2481
  5597     0FB7  2FB9               	goto	u2480
  5598     0FB8                     u2481:
  5599     0FB8  2FBD               	goto	l2508
  5600     0FB9                     u2480:
  5601     0FB9                     l2506:
  5602     0FB9  30D3               	movlw	211
  5603     0FBA  00FF               	movwf	btemp+1
  5604     0FBB  087F               	movf	btemp+1,w
  5605     0FBC  07F7               	addwf	LCD_cursor_set@column,f
  5606     0FBD                     l2508:
  5607                           
  5608                           ;LCD_cursor_set.c: 18:    LCD_write_command(column);
  5609     0FBD  0877               	movf	LCD_cursor_set@column,w
  5610     0FBE  120A  118A  25F2  120A  158A  	fcall	_LCD_write_command
  5611     0FC3                     l84:
  5612     0FC3  0008               	return
  5613     0FC4                     __end_of_LCD_cursor_set:
  5614                           
  5615                           	psect	text17
  5616     05F2                     __ptext17:	
  5617 ;; *************** function _LCD_write_command *****************
  5618 ;; Defined at:
  5619 ;;		line 9 in file "LCD_write_command.c"
  5620 ;; Parameters:    Size  Location     Type
  5621 ;;  command         1    wreg     unsigned char 
  5622 ;; Auto vars:     Size  Location     Type
  5623 ;;  command         1    6[COMMON] unsigned char 
  5624 ;; Return value:  Size  Location     Type
  5625 ;;                  1    wreg      void 
  5626 ;; Registers used:
  5627 ;;		wreg, status,2, status,0, pclath, cstack
  5628 ;; Tracked objects:
  5629 ;;		On entry : 0/0
  5630 ;;		On exit  : 0/0
  5631 ;;		Unchanged: 0/0
  5632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5633 ;;      Params:         0       0       0       0       0
  5634 ;;      Locals:         1       0       0       0       0
  5635 ;;      Temps:          2       0       0       0       0
  5636 ;;      Totals:         3       0       0       0       0
  5637 ;;Total ram usage:        3 bytes
  5638 ;; Hardware stack levels used: 1
  5639 ;; Hardware stack levels required when called: 2
  5640 ;; This function calls:
  5641 ;;		_LCD_pulse_clock
  5642 ;; This function is called by:
  5643 ;;		_LCD_clear
  5644 ;;		_LCD_cursor_set
  5645 ;;		_LCD_init
  5646 ;;		_LCD_add_character
  5647 ;;		_LCD_configure_cursor_blink
  5648 ;;		_LCD_configure_cursor_display
  5649 ;;		_LCD_configure_entry_id
  5650 ;;		_LCD_configure_entry_shift
  5651 ;;		_LCD_configure_lcd_display
  5652 ;;		_LCD_cursor_decrement
  5653 ;;		_LCD_cursor_increment
  5654 ;;		_LCD_shift_left
  5655 ;;		_LCD_shift_reset
  5656 ;;		_LCD_shift_right
  5657 ;; This function uses a non-reentrant model
  5658 ;;
  5659                           
  5660     05F2                     _LCD_write_command:	
  5661                           ;psect for function _LCD_write_command
  5662                           
  5663                           
  5664                           ;incstack = 0
  5665                           ; Regs used in _LCD_write_command: [wreg+status,2+status,0+pclath+cstack]
  5666                           ;LCD_write_command@command stored from wreg
  5667     05F2  00F6               	movwf	LCD_write_command@command
  5668     05F3                     l2342:
  5669                           
  5670                           ;LCD_write_command.c: 11:     PORTDbits.RD2 = 0;
  5671     05F3  1283               	bcf	3,5	;RP0=0, select bank0
  5672     05F4  1303               	bcf	3,6	;RP1=0, select bank0
  5673     05F5  1108               	bcf	8,2	;volatile
  5674     05F6                     l2344:
  5675                           
  5676                           ;LCD_write_command.c: 14:     PORTDbits.RD7 = (command & 0b10000000) >> 7;
  5677     05F6  0876               	movf	LCD_write_command@command,w
  5678     05F7  00F4               	movwf	??_LCD_write_command
  5679     05F8  3007               	movlw	7
  5680     05F9                     u2045:
  5681     05F9  1003               	clrc
  5682     05FA  0CF4               	rrf	??_LCD_write_command,f
  5683     05FB  3EFF               	addlw	-1
  5684     05FC  1D03               	skipz
  5685     05FD  2DF9               	goto	u2045
  5686     05FE  0874               	movf	??_LCD_write_command,w
  5687     05FF  3901               	andlw	1
  5688     0600  00F5               	movwf	??_LCD_write_command+1
  5689     0601  0CF5               	rrf	??_LCD_write_command+1,f
  5690     0602  0CF5               	rrf	??_LCD_write_command+1,f
  5691     0603  0808               	movf	8,w	;volatile
  5692     0604  0675               	xorwf	??_LCD_write_command+1,w
  5693     0605  397F               	andlw	-129
  5694     0606  0675               	xorwf	??_LCD_write_command+1,w
  5695     0607  0088               	movwf	8	;volatile
  5696                           
  5697                           ;LCD_write_command.c: 15:     PORTDbits.RD6 = (command & 0b01000000) >> 6;
  5698     0608  0876               	movf	LCD_write_command@command,w
  5699     0609  00F4               	movwf	??_LCD_write_command
  5700     060A  3006               	movlw	6
  5701     060B                     u2055:
  5702     060B  1003               	clrc
  5703     060C  0CF4               	rrf	??_LCD_write_command,f
  5704     060D  3EFF               	addlw	-1
  5705     060E  1D03               	skipz
  5706     060F  2E0B               	goto	u2055
  5707     0610  0874               	movf	??_LCD_write_command,w
  5708     0611  3901               	andlw	1
  5709     0612  00F5               	movwf	??_LCD_write_command+1
  5710     0613  0EF5               	swapf	??_LCD_write_command+1,f
  5711     0614  0DF5               	rlf	??_LCD_write_command+1,f
  5712     0615  0DF5               	rlf	??_LCD_write_command+1,f
  5713     0616  0808               	movf	8,w	;volatile
  5714     0617  0675               	xorwf	??_LCD_write_command+1,w
  5715     0618  39BF               	andlw	-65
  5716     0619  0675               	xorwf	??_LCD_write_command+1,w
  5717     061A  0088               	movwf	8	;volatile
  5718                           
  5719                           ;LCD_write_command.c: 16:     PORTDbits.RD5 = (command & 0b00100000) >> 5;
  5720     061B  0876               	movf	LCD_write_command@command,w
  5721     061C  00F4               	movwf	??_LCD_write_command
  5722     061D  3005               	movlw	5
  5723     061E                     u2065:
  5724     061E  1003               	clrc
  5725     061F  0CF4               	rrf	??_LCD_write_command,f
  5726     0620  3EFF               	addlw	-1
  5727     0621  1D03               	skipz
  5728     0622  2E1E               	goto	u2065
  5729     0623  0874               	movf	??_LCD_write_command,w
  5730     0624  3901               	andlw	1
  5731     0625  00F5               	movwf	??_LCD_write_command+1
  5732     0626  0EF5               	swapf	??_LCD_write_command+1,f
  5733     0627  0DF5               	rlf	??_LCD_write_command+1,f
  5734     0628  0808               	movf	8,w	;volatile
  5735     0629  0675               	xorwf	??_LCD_write_command+1,w
  5736     062A  39DF               	andlw	-33
  5737     062B  0675               	xorwf	??_LCD_write_command+1,w
  5738     062C  0088               	movwf	8	;volatile
  5739                           
  5740                           ;LCD_write_command.c: 17:     PORTDbits.RD4 = (command & 0b00010000) >> 4;
  5741     062D  0876               	movf	LCD_write_command@command,w
  5742     062E  00F4               	movwf	??_LCD_write_command
  5743     062F  3004               	movlw	4
  5744     0630                     u2075:
  5745     0630  1003               	clrc
  5746     0631  0CF4               	rrf	??_LCD_write_command,f
  5747     0632  3EFF               	addlw	-1
  5748     0633  1D03               	skipz
  5749     0634  2E30               	goto	u2075
  5750     0635  0874               	movf	??_LCD_write_command,w
  5751     0636  3901               	andlw	1
  5752     0637  00F5               	movwf	??_LCD_write_command+1
  5753     0638  0EF5               	swapf	??_LCD_write_command+1,f
  5754     0639  0808               	movf	8,w	;volatile
  5755     063A  0675               	xorwf	??_LCD_write_command+1,w
  5756     063B  39EF               	andlw	-17
  5757     063C  0675               	xorwf	??_LCD_write_command+1,w
  5758     063D  0088               	movwf	8	;volatile
  5759     063E                     l2346:
  5760                           
  5761                           ;LCD_write_command.c: 20:     LCD_pulse_clock();
  5762     063E  120A  158A  26B3  120A  118A  	fcall	_LCD_pulse_clock
  5763     0643                     l2348:
  5764                           
  5765                           ;LCD_write_command.c: 23:     PORTDbits.RD7 = (command & 0b00001000) >> 3;
  5766     0643  0876               	movf	LCD_write_command@command,w
  5767     0644  00F4               	movwf	??_LCD_write_command
  5768     0645  3003               	movlw	3
  5769     0646                     u2085:
  5770     0646  1003               	clrc
  5771     0647  0CF4               	rrf	??_LCD_write_command,f
  5772     0648  3EFF               	addlw	-1
  5773     0649  1D03               	skipz
  5774     064A  2E46               	goto	u2085
  5775     064B  0874               	movf	??_LCD_write_command,w
  5776     064C  3901               	andlw	1
  5777     064D  00F5               	movwf	??_LCD_write_command+1
  5778     064E  0CF5               	rrf	??_LCD_write_command+1,f
  5779     064F  0CF5               	rrf	??_LCD_write_command+1,f
  5780     0650  1283               	bcf	3,5	;RP0=0, select bank0
  5781     0651  1303               	bcf	3,6	;RP1=0, select bank0
  5782     0652  0808               	movf	8,w	;volatile
  5783     0653  0675               	xorwf	??_LCD_write_command+1,w
  5784     0654  397F               	andlw	-129
  5785     0655  0675               	xorwf	??_LCD_write_command+1,w
  5786     0656  0088               	movwf	8	;volatile
  5787     0657                     l2350:
  5788                           
  5789                           ;LCD_write_command.c: 24:     PORTDbits.RD6 = (command & 0b00000100) >> 2;
  5790     0657  0876               	movf	LCD_write_command@command,w
  5791     0658  00F4               	movwf	??_LCD_write_command
  5792     0659  3002               	movlw	2
  5793     065A                     u2095:
  5794     065A  1003               	clrc
  5795     065B  0CF4               	rrf	??_LCD_write_command,f
  5796     065C  3EFF               	addlw	-1
  5797     065D  1D03               	skipz
  5798     065E  2E5A               	goto	u2095
  5799     065F  0874               	movf	??_LCD_write_command,w
  5800     0660  3901               	andlw	1
  5801     0661  00F5               	movwf	??_LCD_write_command+1
  5802     0662  0EF5               	swapf	??_LCD_write_command+1,f
  5803     0663  0DF5               	rlf	??_LCD_write_command+1,f
  5804     0664  0DF5               	rlf	??_LCD_write_command+1,f
  5805     0665  0808               	movf	8,w	;volatile
  5806     0666  0675               	xorwf	??_LCD_write_command+1,w
  5807     0667  39BF               	andlw	-65
  5808     0668  0675               	xorwf	??_LCD_write_command+1,w
  5809     0669  0088               	movwf	8	;volatile
  5810     066A                     l2352:
  5811                           
  5812                           ;LCD_write_command.c: 25:     PORTDbits.RD5 = (command & 0b00000010) >> 1;
  5813     066A  0876               	movf	LCD_write_command@command,w
  5814     066B  00F4               	movwf	??_LCD_write_command
  5815     066C  1003               	clrc
  5816     066D  0C74               	rrf	??_LCD_write_command,w
  5817     066E  3901               	andlw	1
  5818     066F  00F5               	movwf	??_LCD_write_command+1
  5819     0670  0EF5               	swapf	??_LCD_write_command+1,f
  5820     0671  0DF5               	rlf	??_LCD_write_command+1,f
  5821     0672  0808               	movf	8,w	;volatile
  5822     0673  0675               	xorwf	??_LCD_write_command+1,w
  5823     0674  39DF               	andlw	-33
  5824     0675  0675               	xorwf	??_LCD_write_command+1,w
  5825     0676  0088               	movwf	8	;volatile
  5826     0677                     l2354:
  5827                           
  5828                           ;LCD_write_command.c: 26:     PORTDbits.RD4 = (command & 0b00000001) ;
  5829     0677  0876               	movf	LCD_write_command@command,w
  5830     0678  3901               	andlw	1
  5831     0679  00F4               	movwf	??_LCD_write_command
  5832     067A  0EF4               	swapf	??_LCD_write_command,f
  5833     067B  0808               	movf	8,w	;volatile
  5834     067C  0674               	xorwf	??_LCD_write_command,w
  5835     067D  39EF               	andlw	-17
  5836     067E  0674               	xorwf	??_LCD_write_command,w
  5837     067F  0088               	movwf	8	;volatile
  5838     0680                     l2356:
  5839                           
  5840                           ;LCD_write_command.c: 29:     LCD_pulse_clock();
  5841     0680  120A  158A  26B3  120A  118A  	fcall	_LCD_pulse_clock
  5842     0685                     l139:
  5843     0685  0008               	return
  5844     0686                     __end_of_LCD_write_command:
  5845                           
  5846                           	psect	text18
  5847     0EB3                     __ptext18:	
  5848 ;; *************** function _LCD_pulse_clock *****************
  5849 ;; Defined at:
  5850 ;;		line 8 in file "LCD_pulse_clock.c"
  5851 ;; Parameters:    Size  Location     Type
  5852 ;;		None
  5853 ;; Auto vars:     Size  Location     Type
  5854 ;;		None
  5855 ;; Return value:  Size  Location     Type
  5856 ;;                  1    wreg      void 
  5857 ;; Registers used:
  5858 ;;		wreg
  5859 ;; Tracked objects:
  5860 ;;		On entry : 0/0
  5861 ;;		On exit  : 0/0
  5862 ;;		Unchanged: 0/0
  5863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5864 ;;      Params:         0       0       0       0       0
  5865 ;;      Locals:         0       0       0       0       0
  5866 ;;      Temps:          1       0       0       0       0
  5867 ;;      Totals:         1       0       0       0       0
  5868 ;;Total ram usage:        1 bytes
  5869 ;; Hardware stack levels used: 1
  5870 ;; Hardware stack levels required when called: 1
  5871 ;; This function calls:
  5872 ;;		Nothing
  5873 ;; This function is called by:
  5874 ;;		_LCD_init
  5875 ;;		_LCD_write_command
  5876 ;;		_LCD_write_data
  5877 ;; This function uses a non-reentrant model
  5878 ;;
  5879                           
  5880     0EB3                     _LCD_pulse_clock:	
  5881                           ;psect for function _LCD_pulse_clock
  5882                           
  5883     0EB3                     l2336:	
  5884                           ;incstack = 0
  5885                           ; Regs used in _LCD_pulse_clock: [wreg]
  5886                           
  5887                           
  5888                           ;LCD_pulse_clock.c: 10:   PORTDbits.RD3 = 1;
  5889     0EB3  1283               	bcf	3,5	;RP0=0, select bank0
  5890     0EB4  1303               	bcf	3,6	;RP1=0, select bank0
  5891     0EB5  1588               	bsf	8,3	;volatile
  5892     0EB6                     l2338:
  5893                           
  5894                           ;LCD_pulse_clock.c: 11:   _delay((unsigned long)((40)*(4000000/4000000.0)));
  5895     0EB6  300D               	movlw	13
  5896     0EB7  00F3               	movwf	??_LCD_pulse_clock
  5897     0EB8                     u2877:
  5898     0EB8  0BF3               	decfsz	??_LCD_pulse_clock,f
  5899     0EB9  2EB8               	goto	u2877
  5900     0EBA                     l2340:
  5901                           
  5902                           ;LCD_pulse_clock.c: 12:   PORTDbits.RD3 = 0;
  5903     0EBA  1283               	bcf	3,5	;RP0=0, select bank0
  5904     0EBB  1303               	bcf	3,6	;RP1=0, select bank0
  5905     0EBC  1188               	bcf	8,3	;volatile
  5906     0EBD                     l110:
  5907     0EBD  0008               	return
  5908     0EBE                     __end_of_LCD_pulse_clock:
  5909                           
  5910                           	psect	text19
  5911     0F0C                     __ptext19:	
  5912 ;; *************** function _InitUART *****************
  5913 ;; Defined at:
  5914 ;;		line 10 in file "esp8266.c"
  5915 ;; Parameters:    Size  Location     Type
  5916 ;;		None
  5917 ;; Auto vars:     Size  Location     Type
  5918 ;;		None
  5919 ;; Return value:  Size  Location     Type
  5920 ;;                  1    wreg      void 
  5921 ;; Registers used:
  5922 ;;		status,2
  5923 ;; Tracked objects:
  5924 ;;		On entry : 0/0
  5925 ;;		On exit  : 0/0
  5926 ;;		Unchanged: 0/0
  5927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5928 ;;      Params:         0       0       0       0       0
  5929 ;;      Locals:         0       0       0       0       0
  5930 ;;      Temps:          0       0       0       0       0
  5931 ;;      Totals:         0       0       0       0       0
  5932 ;;Total ram usage:        0 bytes
  5933 ;; Hardware stack levels used: 1
  5934 ;; Hardware stack levels required when called: 1
  5935 ;; This function calls:
  5936 ;;		Nothing
  5937 ;; This function is called by:
  5938 ;;		_main
  5939 ;; This function uses a non-reentrant model
  5940 ;;
  5941                           
  5942     0F0C                     _InitUART:	
  5943                           ;psect for function _InitUART
  5944                           
  5945     0F0C                     l2022:	
  5946                           ;incstack = 0
  5947                           ; Regs used in _InitUART: [status,2]
  5948                           
  5949                           
  5950                           ;esp8266.c: 13:     TRISC6 = 0;
  5951     0F0C  1683               	bsf	3,5	;RP0=1, select bank1
  5952     0F0D  1303               	bcf	3,6	;RP1=0, select bank1
  5953     0F0E  1307               	bcf	7,6	;volatile
  5954                           
  5955                           ;esp8266.c: 14:     TRISC7 = 1;
  5956     0F0F  1787               	bsf	7,7	;volatile
  5957                           
  5958                           ;esp8266.c: 16:     TXSTAbits.BRGH = 1;
  5959     0F10  1518               	bsf	24,2	;volatile
  5960     0F11                     l2024:
  5961                           
  5962                           ;esp8266.c: 17:     SPBRG = 0;
  5963     0F11  0199               	clrf	25	;volatile
  5964     0F12                     l2026:
  5965                           
  5966                           ;esp8266.c: 19:     TXSTAbits.SYNC = 0;
  5967     0F12  1218               	bcf	24,4	;volatile
  5968     0F13                     l2028:
  5969                           
  5970                           ;esp8266.c: 20:     RCSTAbits.SPEN = 1;
  5971     0F13  1283               	bcf	3,5	;RP0=0, select bank0
  5972     0F14  1303               	bcf	3,6	;RP1=0, select bank0
  5973     0F15  1798               	bsf	24,7	;volatile
  5974     0F16                     l2030:
  5975                           
  5976                           ;esp8266.c: 22:     TXSTAbits.TXEN = 1;
  5977     0F16  1683               	bsf	3,5	;RP0=1, select bank1
  5978     0F17  1303               	bcf	3,6	;RP1=0, select bank1
  5979     0F18  1698               	bsf	24,5	;volatile
  5980     0F19                     l2032:
  5981                           
  5982                           ;esp8266.c: 23:     TXSTAbits.TX9 = 0;
  5983     0F19  1318               	bcf	24,6	;volatile
  5984     0F1A                     l2034:
  5985                           
  5986                           ;esp8266.c: 25:     RCSTAbits.CREN = 1;
  5987     0F1A  1283               	bcf	3,5	;RP0=0, select bank0
  5988     0F1B  1303               	bcf	3,6	;RP1=0, select bank0
  5989     0F1C  1618               	bsf	24,4	;volatile
  5990     0F1D                     l2036:
  5991                           
  5992                           ;esp8266.c: 27:     RCSTAbits.RX9 = 0;
  5993     0F1D  1318               	bcf	24,6	;volatile
  5994     0F1E                     l2038:
  5995                           
  5996                           ;esp8266.c: 30:     PIE1bits.RCIE = 1;
  5997     0F1E  1683               	bsf	3,5	;RP0=1, select bank1
  5998     0F1F  1303               	bcf	3,6	;RP1=0, select bank1
  5999     0F20  168C               	bsf	12,5	;volatile
  6000     0F21                     l2040:
  6001                           
  6002                           ;esp8266.c: 31:     PEIE = 1;
  6003     0F21  170B               	bsf	11,6	;volatile
  6004     0F22                     l2042:
  6005                           
  6006                           ;esp8266.c: 32:     GIE = 1;
  6007     0F22  178B               	bsf	11,7	;volatile
  6008     0F23                     l312:
  6009     0F23  0008               	return
  6010     0F24                     __end_of_InitUART:
  6011                           
  6012                           	psect	text20
  6013     0F24                     __ptext20:	
  6014 ;; *************** function _ClearStringReceive *****************
  6015 ;; Defined at:
  6016 ;;		line 63 in file "main.c"
  6017 ;; Parameters:    Size  Location     Type
  6018 ;;		None
  6019 ;; Auto vars:     Size  Location     Type
  6020 ;;  i               2    3[COMMON] int 
  6021 ;; Return value:  Size  Location     Type
  6022 ;;                  1    wreg      void 
  6023 ;; Registers used:
  6024 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  6025 ;; Tracked objects:
  6026 ;;		On entry : 0/0
  6027 ;;		On exit  : 0/0
  6028 ;;		Unchanged: 0/0
  6029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6030 ;;      Params:         0       0       0       0       0
  6031 ;;      Locals:         2       0       0       0       0
  6032 ;;      Temps:          0       0       0       0       0
  6033 ;;      Totals:         2       0       0       0       0
  6034 ;;Total ram usage:        2 bytes
  6035 ;; Hardware stack levels used: 1
  6036 ;; Hardware stack levels required when called: 1
  6037 ;; This function calls:
  6038 ;;		Nothing
  6039 ;; This function is called by:
  6040 ;;		_main
  6041 ;; This function uses a non-reentrant model
  6042 ;;
  6043                           
  6044     0F24                     _ClearStringReceive:	
  6045                           ;psect for function _ClearStringReceive
  6046                           
  6047     0F24                     l2010:	
  6048                           ;incstack = 0
  6049                           ; Regs used in _ClearStringReceive: [wreg-fsr0h+status,2+status,0+btemp+1]
  6050                           
  6051                           
  6052                           ;main.c: 64:     pos = 0;
  6053     0F24  1283               	bcf	3,5	;RP0=0, select bank0
  6054     0F25  1303               	bcf	3,6	;RP1=0, select bank0
  6055     0F26  01A6               	clrf	_pos
  6056     0F27  01A7               	clrf	_pos+1
  6057                           
  6058                           ;main.c: 65:     for (int i = 0; i < 30; i++)
  6059     0F28  01F3               	clrf	ClearStringReceive@i
  6060     0F29  01F4               	clrf	ClearStringReceive@i+1
  6061     0F2A                     l2016:
  6062                           
  6063                           ;main.c: 66:         StringReceive[i] = '\0';
  6064     0F2A  0873               	movf	ClearStringReceive@i,w
  6065     0F2B  3E28               	addlw	(low (_StringReceive| 0))& (0+255)
  6066     0F2C  0084               	movwf	4
  6067     0F2D  1383               	bcf	3,7	;select IRP bank0
  6068     0F2E  0180               	clrf	0
  6069     0F2F                     l2018:
  6070     0F2F  3001               	movlw	1
  6071     0F30  07F3               	addwf	ClearStringReceive@i,f
  6072     0F31  1803               	skipnc
  6073     0F32  0AF4               	incf	ClearStringReceive@i+1,f
  6074     0F33  3000               	movlw	0
  6075     0F34  07F4               	addwf	ClearStringReceive@i+1,f
  6076     0F35                     l2020:
  6077     0F35  0874               	movf	ClearStringReceive@i+1,w
  6078     0F36  3A80               	xorlw	128
  6079     0F37  00FF               	movwf	btemp+1
  6080     0F38  3080               	movlw	128
  6081     0F39  027F               	subwf	btemp+1,w
  6082     0F3A  1D03               	skipz
  6083     0F3B  2F3E               	goto	u1745
  6084     0F3C  301E               	movlw	30
  6085     0F3D  0273               	subwf	ClearStringReceive@i,w
  6086     0F3E                     u1745:
  6087     0F3E  1C03               	skipc
  6088     0F3F  2F41               	goto	u1741
  6089     0F40  2F42               	goto	u1740
  6090     0F41                     u1741:
  6091     0F41  2F2A               	goto	l2016
  6092     0F42                     u1740:
  6093     0F42                     l253:
  6094     0F42  0008               	return
  6095     0F43                     __end_of_ClearStringReceive:
  6096                           
  6097                           	psect	text21
  6098     0F43                     __ptext21:	
  6099 ;; *************** function _ISR *****************
  6100 ;; Defined at:
  6101 ;;		line 169 in file "main.c"
  6102 ;; Parameters:    Size  Location     Type
  6103 ;;		None
  6104 ;; Auto vars:     Size  Location     Type
  6105 ;;		None
  6106 ;; Return value:  Size  Location     Type
  6107 ;;                  1    wreg      void 
  6108 ;; Registers used:
  6109 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6110 ;; Tracked objects:
  6111 ;;		On entry : 0/0
  6112 ;;		On exit  : 0/0
  6113 ;;		Unchanged: 0/0
  6114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6115 ;;      Params:         0       0       0       0       0
  6116 ;;      Locals:         0       0       0       0       0
  6117 ;;      Temps:          3       0       0       0       0
  6118 ;;      Totals:         3       0       0       0       0
  6119 ;;Total ram usage:        3 bytes
  6120 ;; Hardware stack levels used: 1
  6121 ;; This function calls:
  6122 ;;		Nothing
  6123 ;; This function is called by:
  6124 ;;		Interrupt level 1
  6125 ;; This function uses a non-reentrant model
  6126 ;;
  6127                           
  6128     0F43                     _ISR:	
  6129                           ;psect for function _ISR
  6130                           
  6131     0F43                     i1l2326:
  6132                           
  6133                           ;main.c: 170:     if (PIR1bits.RCIF == 1 && pos < 28) {
  6134     0F43  1283               	bcf	3,5	;RP0=0, select bank0
  6135     0F44  1303               	bcf	3,6	;RP1=0, select bank0
  6136     0F45  1E8C               	btfss	12,5	;volatile
  6137     0F46  2F48               	goto	u202_21
  6138     0F47  2F49               	goto	u202_20
  6139     0F48                     u202_21:
  6140     0F48  2F5F               	goto	i1l281
  6141     0F49                     u202_20:
  6142     0F49                     i1l2328:
  6143     0F49  3000               	movlw	0
  6144     0F4A  0227               	subwf	_pos+1,w
  6145     0F4B  301C               	movlw	28
  6146     0F4C  1903               	skipnz
  6147     0F4D  0226               	subwf	_pos,w
  6148     0F4E  1803               	skipnc
  6149     0F4F  2F51               	goto	u203_21
  6150     0F50  2F52               	goto	u203_20
  6151     0F51                     u203_21:
  6152     0F51  2F5F               	goto	i1l281
  6153     0F52                     u203_20:
  6154     0F52                     i1l2330:
  6155                           
  6156                           ;main.c: 171:         StringReceive[pos] = RCREG;
  6157     0F52  0826               	movf	_pos,w
  6158     0F53  3E28               	addlw	(low (_StringReceive| 0))& (0+255)
  6159     0F54  0084               	movwf	4
  6160     0F55  081A               	movf	26,w	;volatile
  6161     0F56  1383               	bcf	3,7	;select IRP bank0
  6162     0F57  0080               	movwf	0
  6163     0F58                     i1l2332:
  6164                           
  6165                           ;main.c: 172:         pos++;
  6166     0F58  3001               	movlw	1
  6167     0F59  07A6               	addwf	_pos,f
  6168     0F5A  1803               	skipnc
  6169     0F5B  0AA7               	incf	_pos+1,f
  6170     0F5C  3000               	movlw	0
  6171     0F5D  07A7               	addwf	_pos+1,f
  6172     0F5E                     i1l2334:
  6173                           
  6174                           ;main.c: 174:         RCIF = 0;
  6175     0F5E  128C               	bcf	12,5	;volatile
  6176     0F5F                     i1l281:
  6177     0F5F  0872               	movf	??_ISR+2,w
  6178     0F60  008A               	movwf	10
  6179     0F61  0871               	movf	??_ISR+1,w
  6180     0F62  0084               	movwf	4
  6181     0F63  0E70               	swapf	??_ISR,w
  6182     0F64  0083               	movwf	3
  6183     0F65  0EFE               	swapf	btemp,f
  6184     0F66  0E7E               	swapf	btemp,w
  6185     0F67  0009               	retfie
  6186     0F68                     __end_of_ISR:
  6187     007E                     btemp	set	126	;btemp
  6188     007E                     wtemp0	set	126
  6189                           
  6190                           	psect	intentry
  6191     0004                     __pintentry:	
  6192                           ;incstack = 0
  6193                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0]
  6194                           
  6195     0004                     interrupt_function:
  6196     007E                     saved_w	set	btemp
  6197     0004  00FE               	movwf	btemp
  6198     0005  0E03               	swapf	3,w
  6199     0006  00F0               	movwf	??_ISR
  6200     0007  0804               	movf	4,w
  6201     0008  00F1               	movwf	??_ISR+1
  6202     0009  080A               	movf	10,w
  6203     000A  00F2               	movwf	??_ISR+2
  6204     000B  120A  158A  2F43   	ljmp	_ISR
  6205                           
  6206                           	psect	config
  6207                           
  6208                           ;Config register CONFIG1 @ 0x2007
  6209                           ;	Oscillator Selection bits
  6210                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  6211                           ;	Watchdog Timer Enable bit
  6212                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  6213                           ;	Power-up Timer Enable bit
  6214                           ;	PWRTE = OFF, PWRT disabled
  6215                           ;	RE3/MCLR pin function select bit
  6216                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  6217                           ;	Code Protection bit
  6218                           ;	CP = OFF, Program memory code protection is disabled
  6219                           ;	Data Code Protection bit
  6220                           ;	CPD = OFF, Data memory code protection is disabled
  6221                           ;	Brown Out Reset Selection bits
  6222                           ;	BOREN = ON, BOR enabled
  6223                           ;	Internal External Switchover bit
  6224                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  6225                           ;	Fail-Safe Clock Monitor Enabled bit
  6226                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  6227                           ;	Low Voltage Programming Enable bit
  6228                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  6229                           ;	In-Circuit Debugger Mode bit
  6230                           ;	DEBUG = 0x1, unprogrammed default
  6231     2007                     	org	8199
  6232     2007  23D2               	dw	9170
  6233                           
  6234                           ;Config register CONFIG2 @ 0x2008
  6235                           ;	Brown-out Reset Selection bit
  6236                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  6237                           ;	Flash Program Memory Self Write Enable bits
  6238                           ;	WRT = OFF, Write protection off
  6239     2008                     	org	8200
  6240     2008  3FFF               	dw	16383

Data Sizes:
    Strings     160
    Constant    17
    Data        63
    BSS         70
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     30      68
    BANK1            80      0      60
    BANK3            96      0      32
    BANK2            96      0       0

Pointer List with Targets:

    LCD_write_string@string	PTR unsigned char  size(2) Largest target is 30
		 -> STR_1(CODE[11]), STR_10(CODE[12]), STR_11(CODE[12]), STR_12(CODE[12]), 
		 -> STR_13(CODE[12]), STR_2(CODE[13]), STR_3(CODE[18]), STR_5(CODE[8]), 
		 -> STR_7(CODE[12]), STR_8(CODE[19]), StringReceive(BANK0[30]), 

    SendCommandAT@command	PTR unsigned char  size(1) Largest target is 20
		 -> STR_4(CODE[3]), STR_6(CODE[20]), 

    SendStringSerially@st	PTR unsigned char  size(1) Largest target is 20
		 -> STR_14(CODE[3]), STR_4(CODE[3]), STR_6(CODE[20]), 

    sp__strchr	PTR unsigned char  size(1) Largest target is 30
		 -> StringReceive(BANK0[30]), NULL(NULL[0]), 

    sp__strstr	PTR unsigned char  size(1) Largest target is 30
		 -> StringReceive(BANK0[30]), NULL(NULL[0]), 

    strchr@s	PTR const unsigned char  size(1) Largest target is 30
		 -> StringReceive(BANK0[30]), NULL(NULL[0]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_9(CODE[5]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_9(CODE[5]), 

    strncmp@l	PTR const unsigned char  size(1) Largest target is 30
		 -> StringReceive(BANK0[30]), NULL(NULL[0]), 

    strncmp@r	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_9(CODE[5]), 

    strstr@h	PTR const unsigned char  size(1) Largest target is 30
		 -> StringReceive(BANK0[30]), NULL(NULL[0]), 

    strstr@n	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_9(CODE[5]), 


Critical Paths under _main in COMMON

    _main->_LCD_clear
    _main->_LCD_cursor_set
    _main->_LCD_write_string
    _strstr->_strncmp
    _SendCommandAT->_SendStringSerially
    _SendStringSerially->_SendByteSerially
    _LCD_write_variable->___lmul
    _LCD_write_string->_LCD_write_data
    _LCD_write_data->_LCD_pulse_clock
    _LCD_init->_LCD_clear
    _LCD_clear->_LCD_write_command
    _LCD_cursor_set->_LCD_write_command
    _LCD_write_command->_LCD_pulse_clock

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_LCD_write_variable
    _strstr->_strncmp
    _LCD_write_variable->___aldiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0    8669
                                             25 BANK0      5     5      0
                 _ClearStringReceive
                           _InitUART
                          _LCD_clear
                     _LCD_cursor_set
                           _LCD_init
                   _LCD_write_string
                 _LCD_write_variable
                      _SendCommandAT
                             _strstr
 ---------------------------------------------------------------------------------
 (1) _strstr                                               6     5      1    1235
                                              1 BANK0      6     5      1
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (3) _strncmp                                              6     3      3     473
                                              3 COMMON     5     2      3
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _strlen                                               4     2      2     123
                                              3 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (2) _strchr                                               3     1      2     197
                                              3 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (1) _SendCommandAT                                        1     1      0     221
                                              5 COMMON     1     1      0
                 _SendStringSerially
 ---------------------------------------------------------------------------------
 (2) _SendStringSerially                                   1     1      0     133
                                              4 COMMON     1     1      0
                   _SendByteSerially
 ---------------------------------------------------------------------------------
 (3) _SendByteSerially                                     1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LCD_write_variable                                  11     6      5    3138
                                             14 BANK0     11     6      5
                     _LCD_write_data
                            ___aldiv
                            ___almod
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              13     5      8     316
                                              3 COMMON     5     5      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) ___almod                                             11     3      8     793
                                              3 COMMON     3     3      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     805
                                              3 COMMON     1     1      0
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) _LCD_write_string                                     3     1      2    1368
                                              7 COMMON     1     1      0
                                              0 BANK0      2     0      2
                     _LCD_write_data
 ---------------------------------------------------------------------------------
 (2) _LCD_write_data                                       3     3      0     248
                                              4 COMMON     3     3      0
                    _LCD_pulse_clock
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             2     2      0     496
                                              0 BANK0      2     2      0
                          _LCD_clear
                    _LCD_pulse_clock
                  _LCD_write_command
 ---------------------------------------------------------------------------------
 (2) _LCD_clear                                            1     1      0     248
                                              7 COMMON     1     1      0
                  _LCD_write_command
 ---------------------------------------------------------------------------------
 (1) _LCD_cursor_set                                       2     1      1    1765
                                              7 COMMON     1     0      1
                                              0 BANK0      1     1      0
                  _LCD_write_command
 ---------------------------------------------------------------------------------
 (2) _LCD_write_command                                    3     3      0     248
                                              4 COMMON     3     3      0
                    _LCD_pulse_clock
 ---------------------------------------------------------------------------------
 (3) _LCD_pulse_clock                                      1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _InitUART                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ClearStringReceive                                   2     2      0      68
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ClearStringReceive
   _InitUART
   _LCD_clear
     _LCD_write_command
       _LCD_pulse_clock
   _LCD_cursor_set
     _LCD_write_command
   _LCD_init
     _LCD_clear
     _LCD_pulse_clock
     _LCD_write_command
   _LCD_write_string
     _LCD_write_data
       _LCD_pulse_clock
   _LCD_write_variable
     _LCD_write_data
     ___aldiv
     ___almod
     ___lmul
   _SendCommandAT
     _SendStringSerially
       _SendByteSerially
   _strstr
     _strchr
     _strlen
     _strncmp

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      20       9       33.3%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      3C       7       75.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     1E      44       5       85.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      AB      12        0.0%
ABS                  0      0      AB       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Thu Jan 25 04:12:33 2024

                              pc 0002                               l20 0EF4                               l84 0FC3  
                             fsr 0004                              l110 0EBD                              l103 0783  
                            l312 0F23                              l146 05F1                              l139 0685  
                            l171 0F92                              l315 0EAA                              l331 03FD  
                            l253 0F42                              l261 0147                              l318 0EB2  
                            l334 0ECB                              l192 0343                              l514 03DE  
                            l266 01B4                              l267 01B5                              l565 04D5  
                            l575 055D                              l578 069A                              l588 070C  
                            l984 0EF6                              l993 07FD                              l986 0F0B  
                            l978 0396                              _GIE 005F                              l997 07E2  
                            _RB0 0030                              _RB1 0031                              _RB2 0032  
                            _RB3 0033                              _RB4 0034                              _RB5 0035  
                            _RB6 0036                              _RB7 0037                              _ISR 0F43  
                            _pos 0026                              fsr0 0004                              indf 0000  
                           ?_ISR 0070                             l2010 0F24                             l2020 0F35  
                           l2030 0F16                             l2022 0F0C                             l2016 0F2A  
                           l2040 0F21                             l2032 0F19                             l2024 0F11  
                           l2018 0F2F                             l2042 0F22                             l2034 0F1A  
                           l2026 0F12                             l2036 0F1D                             l2028 0F13  
                           l2044 0EBF                             l2038 0F1E                             l2400 04D9  
                           l2410 04FB                             l2402 04E4                             l2340 0EBA  
                           l2500 0FA9                             l2420 0527                             l2412 0504  
                           l2404 04E8                             l2350 0657                             l2342 05F3  
                           l2502 0FAF                             l2510 070D                             l2430 054A  
                           l2422 0535                             l2414 0508                             l2406 04F0  
                           l2336 0EB3                             l2352 066A                             l2344 05F6  
                           l2504 0FB3                             l2520 0741                             l2512 0731  
                           l2360 0562                             l2432 0555                             l2424 0536  
                           l2416 050C                             l2408 04F8                             l2440 068D  
                           l2600 0347                             l2338 0EB6                             l2354 0677  
                           l2346 063E                             l2506 0FB9                             l2530 0761  
                           l2522 0742                             l2514 073C                             l2370 05E3  
                           l2362 05AA                             l2426 053F                             l2418 0515  
                           l2450 06BD                             l2442 069E                             l2610 036F  
                           l2602 034C                             l2356 0680                             l2348 0643  
                           l2508 0FBD                             l2540 076C                             l2532 0764  
                           l2524 0747                             l2516 073F                             l2372 05EC  
                           l2364 05AF                             l2428 0545                             l2460 06EE  
                           l2452 06C1                             l2444 06A9                             l2436 0686  
                           l2380 0397                             l2604 0359                             l2612 0388  
                           l2374 0EDF                             l2542 0772                             l2534 0765  
                           l2526 0756                             l2518 0740                             l2366 05C3  
                           l2358 055F                             l2454 06C5                             l2446 06B1  
                           l2462 06F4                             l2438 0687                             l2390 03D6  
                           l2382 039F                             l2550 026C                             l1734 0EAA  
                           l2470 0787                             l2614 038D                             l2606 036B  
                           l2710 0051                             l2376 0EE5                             l2544 0778  
                           l2536 0766                             l2528 075C                             l2368 05D6  
                           l2464 06F9                             l2456 06D7                             l2448 06B4  
                           l2384 03A5                             l2560 029E                             l2552 026F  
                           l1736 0EB0                             l1760 03E0                             l2472 0795  
                           l2480 07A6                             l2616 0395                             l2800 01CB  
                           l2720 0085                             l2712 0059                             l2378 0EEE  
                           l2546 077E                             l2538 0767                             l2394 04C1  
                           l2466 0704                             l2458 06E5                             l2386 03BC  
                           l2570 02DD                             l2554 0273                             l1762 03E1  
                           l2482 07AE                             l2802 01D3                             l2730 00B9  
                           l2722 0093                             l2714 0064                             l2492 0F96  
                           l2396 04C4                             l2388 03C5                             l2580 0312  
                           l2572 02E3                             l2564 02B2                             l2556 0292  
                           l1764 03ED                             l1860 07E7                             l2484 07BA  
                           l2476 0798                             l2820 022B                             l2804 01DE  
                           l2812 0201                             l2740 00DF                             l2732 00BE  
                           l2724 0098                             l2716 0072                             l2708 0047  
                           l2494 0F9B                             l2398 04C8                             l2582 0316  
                           l2574 02E8                             l2566 02D4                             l2558 029A  
                           l1766 03F1                             l1862 07EB                             l2486 07C0  
                           l2478 07A0                             l2830 0255                             l2822 022E  
                           l2814 020A                             l2806 01E6                             l2750 010B  
                           l2742 00E5                             l2734 00C6                             l2726 00A0  
                           l2718 007A                             l2496 0F9F                             l2592 0F68  
                           l2584 031C                             l2576 02F0                             l1864 07F7  
                           l2488 07D0                             l2832 0263                             l2824 023C  
                           l2816 0212                             l2808 01F5                             l2760 0134  
                           l2752 0113                             l2744 00F3                             l2736 00CC  
                           l2728 00AB                             l2498 0FA5                             l2594 0F6A  
                           l2586 033A                             l2578 02F3                             l1890 0EF6  
                           l1858 07E4                             l2826 023F                             l2818 021D  
                           l2770 0141                             l2762 0137                             l2754 011E  
                           l2746 00F8                             l2738 00D7                             l2596 0F7B  
                           l2588 033E                             l1892 0EFF                             l2828 0245  
                           l2780 0166                             l2772 0144                             l2764 0138  
                           l2756 012C                             l2748 0100                             l2598 0F7F  
                           l2790 019F                             l2782 016E                             l2774 014B  
                           l2766 0139                             l2758 0131                             l1896 0F01  
                           l2792 01A2                             l2784 017D                             l2776 0153  
                           l2768 013D                             l1898 0F0A                             l2794 01B0  
                           l2786 0185                             l2778 015B                             l2796 01B9  
                           l2788 0194                             l2798 01C1                             STR_1 04A3  
                           STR_2 045A                             STR_3 0448                             STR_4 04BE  
                           STR_5 04AE                             STR_6 0421                             STR_7 0467  
                           STR_8 0435                             STR_9 04B6                             _CREN 00C4  
                           u1310 03FD                             u1311 03FC                             u2200 03D6  
                           u1240 0EB0                             u2105 0565                             u2201 03D5  
                           u1241 0EAF                             u2210 04C8                             u2115 0577  
                           u2211 04C7                             u2300 054A                             u2220 04D9  
                           u2045 05F9                             u2125 058A                             u2301 0549  
                           u2221 04D8                             u2230 04F8                             u2310 068D  
                           u2055 060B                             u2135 059C                             u2231 04F7  
                           u2311 068C                             u2320 069E                             u2160 03A5  
                           u2400 0795                             u2065 061E                             u2145 05B2  
                           u2321 069D                             u2161 03A4                             u2401 0794  
                           u2250 050C                             u2330 06B1                             u2410 07AE  
                           u2075 0630                             u2155 05C6                             u2251 050B  
                           u2331 06B0                             u2171 03AE                             u2411 07AD  
                           u2172 03B5                             u2500 02B1                             u1620 0EFF  
                           u2420 07BA                             u2085 0646                             u2245 04FD  
                           u2173 03BC                             u2501 02B0                             u1621 0EFE  
                           u2421 07B9                             u2270 0527                             u2350 06C5  
                           u2510 02DC                             u1630 0F0A                             u2430 07C0  
                           u2095 065A                             u2271 0526                             u2351 06C4  
                           u2511 02DB                             u2503 02AD                             u1631 0F09  
                           u2431 07BF                             u2360 06D7                             u2520 031C  
                           u1560 07F7                             u2440 07D0                             u2265 050E  
                           u2361 06D6                             u2345 06B6                             u2185 03BE  
                           u2521 031B                             u1561 07F6                             u2441 07CF  
                           u2450 0F9B                             u2290 0545                             u2530 0343  
                           u2451 0F9A                             u2291 0544                             u2275 0523  
                           u2195 03C6                             u2531 0342                             u1740 0F42  
                           u2460 0FA5                             u2540 0F92                             u2380 06F4  
                           u2700 0194                             u1741 0F41                             u2461 0FA4  
                           u2541 0F91                             u2285 0537                             u2381 06F3  
                           u2365 06D3                             u2701 0193                             u2470 0FAF  
                           u2390 06F9                             u2550 034C                             u2710 01B9  
                           u2471 0FAE                             u2391 06F8                             u2375 06E6  
                           u2551 034B                             u2711 01B8                             u2480 0FB9  
                           u2560 036B                             u2720 0200                             u1745 0F3E  
                           u2481 0FB8                             u2561 036A                             u2721 01FF  
                           u2490 0273                             u2570 038D                             u2730 020A  
                           u2491 0272                             u2571 038C                             u2731 0209  
                           u2580 0395                             u2581 0394                             u2807 0225  
                           u2817 0236                             u2690 014B                             u2827 025D  
                           u2691 014A                             u2747 006C                             _PEIE 005E  
                           u2837 0737                             u2757 008D                             u2847 074D  
                           u2767 00B3                             u2857 075A                             u2777 00ED  
                           u2867 0EE7                             u2787 0126                             _RCIF 0065  
                           u2877 0EB8                             u2797 01AA                             _OERR 00C1  
                           _TXIF 0064                             _main 0047                             _mode 0078  
                           btemp 007E                             start 000E                            ??_ISR 0070  
               __end_of_LCD_init 0784                  __end_of___aldiv 055E                  __end_of___almod 070D  
                          ?_main 0070                            STR_10 048B                            STR_11 047F  
                          STR_12 0473                            STR_13 0497                            STR_14 04BB  
                          i1l281 0F5F                            _RCREG 001A                            _SPBRG 0099  
                          _PORTB 0006                            _TRISB 0086                            _TXREG 0019  
            ___lmul@multiplicand 004A                    _StringDisplay 0190               _SendStringSerially 03DF  
                  _StringReceive 0028                       _KeyPadChar 0410                            pclath 000A  
                  main@adcResult 0062              ?_SendStringSerially 0070                            status 0003  
                          wtemp0 007E                  __end_of_strncmp 07E3                  __initialization 0011  
                   __end_of_main 026C                 __end_of_InitUART 0F24             ??_SendStringSerially 0074  
              ?_LCD_write_string 0046                           ??_main 005F               ??_LCD_write_string 0077  
              __end_of_LCD_clear 0EF5                           _ADCON0 001F                           _ADCON1 009F  
                         _ADRESH 001E                           _ADRESL 009E                           i1l2330 0F52  
                         i1l2332 0F58                           i1l2334 0F5E                           i1l2326 0F43  
                         i1l2328 0F49                           u202_20 0F49                           u202_21 0F48  
                         u203_20 0F52                           u203_21 0F51           LCD_write_string@string 0046  
                         _TRISA0 0428                           _TRISB0 0430                           _TRISB1 0431  
                         _TRISB2 0432                           _TRISB3 0433                           _TRISB4 0434  
                         _TRISB5 0435                           _TRISB6 0436                           _TRISB7 0437  
                         _TRISC6 043E                           _TRISC7 043F  LCD_write_variable@temp_variable 005B  
                         ___lmul 0397                        ??___aldiv 0073                        ??___almod 0073  
                         _strchr 0EF5                           _strlen 07E3                           _strstr 0344  
     __end_of_ClearStringReceive 0F43         __end_of_SendByteSerially 0EB3                     __pdataCOMMON 0078  
                         saved_w 007E                        ??_strncmp 0076          __end_of__initialization 0043  
                      ?_LCD_init 0070                   __pcstackCOMMON 0070                     __pidataBANK1 0FC4  
                 _LCD_entry_mode 007A                _LCD_write_command 05F2             SendByteSerially@Byte 0073  
                 _LCD_cursor_set 0F93               ?_LCD_write_command 0070       __end_of_LCD_write_variable 0344  
            ??_LCD_write_command 0074                       __pbssBANK0 0020                       __pbssBANK3 0190  
                      ?_InitUART 0070                       ??_LCD_init 0046        __end_of_LCD_write_command 0686  
                     __pmaintext 0047                          ?___lmul 0046           __end_of_LCD_cursor_set 0FC4  
                     __pintentry 0004              ClearStringReceive@i 0073                   ___lmul@product 0074  
                        ?_strchr 0073                          ?_strlen 0073                          ?_strstr 0047  
                  _SendCommandAT 0EBE                       __stringtab 0400         LCD_write_command@command 0076  
                     ??_InitUART 0073             SendStringSerially@st 0074                          ___aldiv 04C1  
                        ___almod 0686                  ?_LCD_cursor_set 0077                   _LCD_write_data 055E  
     LCD_write_variable@variable 0054                          __ptext1 0344                          __ptext2 0784  
                        __ptext3 07E3                          __ptext4 0EF5                   ?_SendCommandAT 0070  
                        __ptext5 0EBE                          __ptext6 03DF                          __ptext7 0EA9  
                        __ptext8 026C                          __ptext9 0397                 ___aldiv@dividend 004A  
                        clrloop0 0EA2                          _strncmp 0784                        _LCD_clear 0EDF  
           end_of_initialization 0043             LCD_cursor_set@column 0077              _LCD_display_control 0079  
         __end_of_LCD_write_data 05F2                        _RCSTAbits 0018                 ___aldiv@quotient 0050  
                        strchr@c 0073                          strchr@s 0075                          strlen@a 0075  
                        strlen@s 0076                          strstr@h 004C                          strstr@n 0047  
                      _PORTBbits 0006                        _PORTDbits 0008                ??_LCD_pulse_clock 0073  
              ?_SendByteSerially 0070                        _TRISDbits 0088               ??_SendByteSerially 0073  
                     ?_LCD_clear 0070               _ClearStringReceive 0F24                        _TXSTAbits 0098  
            ?_ClearStringReceive 0070                  ?_LCD_write_data 0070                   __end_of___lmul 03DF  
                ??_SendCommandAT 0075                    __pidataCOMMON 0E9E               __end_of_KeyPadChar 0421  
                 __end_of_strchr 0F0C                   __end_of_strlen 07FE                   __end_of_strstr 0397  
            start_initialization 0011             ??_ClearStringReceive 0073                      __end_of_ISR 0F68  
             _LCD_write_variable 026C              LCD_write_variable@i 0059              ?_LCD_write_variable 0054  
                       ??___lmul 0073                       init_fetch0 0ECC                      __pdataBANK1 00A0  
                       ??_strchr 0075                         ??_strlen 0075                         ??_strstr 0048  
           ??_LCD_write_variable 0078                        ___latbits 0002                        _adcResult 0024  
                  __pcstackBANK0 0046                      ??_LCD_clear 0077                 _LCD_write_string 0F68  
               ??_LCD_cursor_set 0078             SendCommandAT@command 0075                         ?___aldiv 0046  
                       ?___almod 0046                 ___almod@dividend 004A                        __pstrings 0400  
             LCD_write_data@data 0076                         ?_strncmp 0073                  ___aldiv@divisor 0046  
              interrupt_function 0004                  ___aldiv@counter 004E                         _LCD_init 070D  
                      clear_ram0 0EA1                         _PIE1bits 008C                         _PIR1bits 000C  
                       _GO_nDONE 00F9                  _LCD_pulse_clock 0EB3                      __stringbase 040F  
              ___lmul@multiplier 0046                         _InitUART 0F0C                 ??_LCD_write_data 0074  
                       _PassWord 00A0         LCD_write_variable@digits 005A                        modff@F522 0020  
                       _WifiName 00BE                LCD_cursor_set@row 0046       __end_of_SendStringSerially 03FE  
             __end_of__stringtab 0410                         __ptext10 0686                         __ptext11 04C1  
                       __ptext20 0F24                         __ptext12 0F68                         __ptext21 0F43  
                       __ptext13 055E                         __ptext14 070D                         __ptext15 0EDF  
                       __ptext16 0F93                         __ptext17 05F2                         __ptext18 0EB3  
                       __ptext19 0F0C                  ___almod@divisor 0046                  ___almod@counter 0074  
        __end_of_LCD_pulse_clock 0EBE         __end_of_LCD_write_string 0F93            __end_of_SendCommandAT 0ECC  
  LCD_write_variable@left_offset 0058                         init_ram0 0ED0                LCD_write_string@i 0077  
                       intlevel1 0000                        stringcode 040A                         strncmp@l 0046  
                       strncmp@n 0074                         strncmp@r 0073                         stringdir 040A  
                       stringtab 0400                     ___aldiv@sign 004F                         strstr@nl 004A  
                   ___almod@sign 0075                 ?_LCD_pulse_clock 0070                 _SendByteSerially 0EA9  
